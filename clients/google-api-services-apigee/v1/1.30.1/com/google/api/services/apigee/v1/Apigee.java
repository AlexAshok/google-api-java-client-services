/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigee.v1;

/**
 * Service definition for Apigee (v1).
 *
 * <p>
 * The Apigee API lets you programmatically manage Apigee Hybrid with a set of RESTful operations, including:  Create, edit, and delete API proxies  Manage users  Deploy and undeploy proxy revisions  Configure environmentsFor information on using the APIs described in this section, see Get started using the APIs.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/apigee-api-management/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ApigeeRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Apigee extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.30.3 of the Apigee API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://apigee.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Apigee(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Apigee(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Hybrid collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Hybrid.List request = apigee.hybrid().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Hybrid hybrid() {
    return new Hybrid();
  }

  /**
   * The "hybrid" collection of methods.
   */
  public class Hybrid {

    /**
     * An accessor for creating requests from the Issuers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Issuers.List request = apigee.issuers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Issuers issuers() {
      return new Issuers();
    }

    /**
     * The "issuers" collection of methods.
     */
    public class Issuers {

      /**
       * Lists hybrid services and its trusted issuers service account ids. This api is authenticated and
       * unauthorized(allow all the users) and used by runtime authn-authz service to query control
       * plane's issuer service account ids.
       *
       * Create a request for the method "issuers.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name Required. Must be of the form `hybrid/issuers`.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListHybridIssuersResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^hybrid/issuers$");

        /**
         * Lists hybrid services and its trusted issuers service account ids. This api is authenticated
         * and unauthorized(allow all the users) and used by runtime authn-authz service to query control
         * plane's issuer service account ids.
         *
         * Create a request for the method "issuers.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Must be of the form `hybrid/issuers`.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListHybridIssuersResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^hybrid/issuers$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be of the form `hybrid/issuers`. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Must be of the form `hybrid/issuers`.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Must be of the form `hybrid/issuers`. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^hybrid/issuers$");
          }
          this.name = name;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Organizations.List request = apigee.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * Creates an Organization. Only Name and Analytics Region will be used from the request body.
     *
     * Create a request for the method "organizations.create".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public Create create(com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/organizations";

      /**
       * Creates an Organization. Only Name and Analytics Region will be used from the request body.
       *
       * Create a request for the method "organizations.create".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected Create(com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the project in which to associate the organization. Values are of the
       * form `projects/`.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The name of the project in which to associate the organization. Values are of the form
     `projects/`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The name of the project in which to associate the organization. Values are of the
       * form `projects/`.
       */
      public Create setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Gets an Organization.
     *
     * Create a request for the method "organizations.get".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets an Organization.
       *
       * Create a request for the method "organizations.get".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets an Organization's.
     *
     * Create a request for the method "organizations.getSyncAuthorization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetSyncAuthorization#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest}
     * @return the request
     */
    public GetSyncAuthorization getSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest content) throws java.io.IOException {
      GetSyncAuthorization result = new GetSyncAuthorization(name, content);
      initialize(result);
      return result;
    }

    public class GetSyncAuthorization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization> {

      private static final String REST_PATH = "v1/{+name}:getSyncAuthorization";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets an Organization's.
       *
       * Create a request for the method "organizations.getSyncAuthorization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetSyncAuthorization#execute()} method to invoke the remote
       * operation. <p> {@link GetSyncAuthorization#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest}
       * @since 1.13
       */
      protected GetSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public GetSyncAuthorization set$Xgafv(java.lang.String $Xgafv) {
        return (GetSyncAuthorization) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSyncAuthorization setAccessToken(java.lang.String accessToken) {
        return (GetSyncAuthorization) super.setAccessToken(accessToken);
      }

      @Override
      public GetSyncAuthorization setAlt(java.lang.String alt) {
        return (GetSyncAuthorization) super.setAlt(alt);
      }

      @Override
      public GetSyncAuthorization setCallback(java.lang.String callback) {
        return (GetSyncAuthorization) super.setCallback(callback);
      }

      @Override
      public GetSyncAuthorization setFields(java.lang.String fields) {
        return (GetSyncAuthorization) super.setFields(fields);
      }

      @Override
      public GetSyncAuthorization setKey(java.lang.String key) {
        return (GetSyncAuthorization) super.setKey(key);
      }

      @Override
      public GetSyncAuthorization setOauthToken(java.lang.String oauthToken) {
        return (GetSyncAuthorization) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSyncAuthorization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSyncAuthorization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSyncAuthorization setQuotaUser(java.lang.String quotaUser) {
        return (GetSyncAuthorization) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSyncAuthorization setUploadType(java.lang.String uploadType) {
        return (GetSyncAuthorization) super.setUploadType(uploadType);
      }

      @Override
      public GetSyncAuthorization setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSyncAuthorization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public GetSyncAuthorization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetSyncAuthorization set(String parameterName, Object value) {
        return (GetSyncAuthorization) super.set(parameterName, value);
      }
    }
    /**
     * Lists the Apigee organizations, and the related projects that a user has permissions for. This
     * call will be used by the Unified Experience in order to populate the list of Apigee organizations
     * in a dropdown that the user has access to.
     *
     * Create a request for the method "organizations.list".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Must be of the form `organizations`.
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOrganizationsResponse> {

      private static final String REST_PATH = "v1/{+parent}";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^organizations$");

      /**
       * Lists the Apigee organizations, and the related projects that a user has permissions for. This
       * call will be used by the Unified Experience in order to populate the list of Apigee
       * organizations in a dropdown that the user has access to.
       *
       * Create a request for the method "organizations.list".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Must be of the form `organizations`.
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOrganizationsResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Must be of the form `organizations`. */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Must be of the form `organizations`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. Must be of the form `organizations`. */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an Organization's.
     *
     * Create a request for the method "organizations.setSyncAuthorization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link SetSyncAuthorization#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization}
     * @return the request
     */
    public SetSyncAuthorization setSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization content) throws java.io.IOException {
      SetSyncAuthorization result = new SetSyncAuthorization(name, content);
      initialize(result);
      return result;
    }

    public class SetSyncAuthorization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization> {

      private static final String REST_PATH = "v1/{+name}:setSyncAuthorization";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Updates an Organization's.
       *
       * Create a request for the method "organizations.setSyncAuthorization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link SetSyncAuthorization#execute()} method to invoke the remote
       * operation. <p> {@link SetSyncAuthorization#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization}
       * @since 1.13
       */
      protected SetSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public SetSyncAuthorization set$Xgafv(java.lang.String $Xgafv) {
        return (SetSyncAuthorization) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetSyncAuthorization setAccessToken(java.lang.String accessToken) {
        return (SetSyncAuthorization) super.setAccessToken(accessToken);
      }

      @Override
      public SetSyncAuthorization setAlt(java.lang.String alt) {
        return (SetSyncAuthorization) super.setAlt(alt);
      }

      @Override
      public SetSyncAuthorization setCallback(java.lang.String callback) {
        return (SetSyncAuthorization) super.setCallback(callback);
      }

      @Override
      public SetSyncAuthorization setFields(java.lang.String fields) {
        return (SetSyncAuthorization) super.setFields(fields);
      }

      @Override
      public SetSyncAuthorization setKey(java.lang.String key) {
        return (SetSyncAuthorization) super.setKey(key);
      }

      @Override
      public SetSyncAuthorization setOauthToken(java.lang.String oauthToken) {
        return (SetSyncAuthorization) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSyncAuthorization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSyncAuthorization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSyncAuthorization setQuotaUser(java.lang.String quotaUser) {
        return (SetSyncAuthorization) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSyncAuthorization setUploadType(java.lang.String uploadType) {
        return (SetSyncAuthorization) super.setUploadType(uploadType);
      }

      @Override
      public SetSyncAuthorization setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetSyncAuthorization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public SetSyncAuthorization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public SetSyncAuthorization set(String parameterName, Object value) {
        return (SetSyncAuthorization) super.set(parameterName, value);
      }
    }
    /**
     * Updates an Organization's properties. No other fields will be updated.
     *
     * Create a request for the method "organizations.update".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      Update result = new Update(name, content);
      initialize(result);
      return result;
    }

    public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Updates an Organization's properties. No other fields will be updated.
       *
       * Create a request for the method "organizations.update".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public Update setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }
    /**
     * Updates an Organization's properties. No other fields will be updated.
     *
     * Create a request for the method "organizations.updateOrganization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link UpdateOrganization#execute()} method to invoke the remote operation.
     *
     * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public UpdateOrganization updateOrganization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      UpdateOrganization result = new UpdateOrganization(name, content);
      initialize(result);
      return result;
    }

    public class UpdateOrganization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Updates an Organization's properties. No other fields will be updated.
       *
       * Create a request for the method "organizations.updateOrganization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link UpdateOrganization#execute()} method to invoke the remote
       * operation. <p> {@link UpdateOrganization#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Organization resource name of the form:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected UpdateOrganization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public UpdateOrganization set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateOrganization) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateOrganization setAccessToken(java.lang.String accessToken) {
        return (UpdateOrganization) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateOrganization setAlt(java.lang.String alt) {
        return (UpdateOrganization) super.setAlt(alt);
      }

      @Override
      public UpdateOrganization setCallback(java.lang.String callback) {
        return (UpdateOrganization) super.setCallback(callback);
      }

      @Override
      public UpdateOrganization setFields(java.lang.String fields) {
        return (UpdateOrganization) super.setFields(fields);
      }

      @Override
      public UpdateOrganization setKey(java.lang.String key) {
        return (UpdateOrganization) super.setKey(key);
      }

      @Override
      public UpdateOrganization setOauthToken(java.lang.String oauthToken) {
        return (UpdateOrganization) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateOrganization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateOrganization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateOrganization setQuotaUser(java.lang.String quotaUser) {
        return (UpdateOrganization) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateOrganization setUploadType(java.lang.String uploadType) {
        return (UpdateOrganization) super.setUploadType(uploadType);
      }

      @Override
      public UpdateOrganization setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateOrganization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Organization resource name of the form: `organizations/{organization_id}`
       */
      public UpdateOrganization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public UpdateOrganization set(String parameterName, Object value) {
        return (UpdateOrganization) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Apiproducts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apiproducts apiproducts() {
      return new Apiproducts();
    }

    /**
     * The "apiproducts" collection of methods.
     */
    public class Apiproducts {

      /**
       * Updates or creates API product attributes. This API **replaces** the current list of attributes
       * with the attributes specified in the request body. In this way, you can update existing
       * attributes, add new attributes, or delete existing attributes by omitting them from the request
       * body.
       *
       * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
       * products) are cached for 180 seconds (current default). Any custom attributes associated with
       * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
       * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
       * in less than 180 seconds.
       *
       * Create a request for the method "apiproducts.attributes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Attributes#execute()} method to invoke the remote operation.
       *
       * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
       * @return the request
       */
      public Attributes attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
        Attributes result = new Attributes(name, content);
        initialize(result);
        return result;
      }

      public class Attributes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

        private static final String REST_PATH = "v1/{+name}/attributes";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Updates or creates API product attributes. This API **replaces** the current list of attributes
         * with the attributes specified in the request body. In this way, you can update existing
         * attributes, add new attributes, or delete existing attributes by omitting them from the request
         * body.
         *
         * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
         * products) are cached for 180 seconds (current default). Any custom attributes associated with
         * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
         * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access
         * token in less than 180 seconds.
         *
         * Create a request for the method "apiproducts.attributes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Attributes#execute()} method to invoke the remote operation. <p>
         * {@link
         * Attributes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @since 1.13
         */
        protected Attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Attributes set$Xgafv(java.lang.String $Xgafv) {
          return (Attributes) super.set$Xgafv($Xgafv);
        }

        @Override
        public Attributes setAccessToken(java.lang.String accessToken) {
          return (Attributes) super.setAccessToken(accessToken);
        }

        @Override
        public Attributes setAlt(java.lang.String alt) {
          return (Attributes) super.setAlt(alt);
        }

        @Override
        public Attributes setCallback(java.lang.String callback) {
          return (Attributes) super.setCallback(callback);
        }

        @Override
        public Attributes setFields(java.lang.String fields) {
          return (Attributes) super.setFields(fields);
        }

        @Override
        public Attributes setKey(java.lang.String key) {
          return (Attributes) super.setKey(key);
        }

        @Override
        public Attributes setOauthToken(java.lang.String oauthToken) {
          return (Attributes) super.setOauthToken(oauthToken);
        }

        @Override
        public Attributes setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Attributes) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Attributes setQuotaUser(java.lang.String quotaUser) {
          return (Attributes) super.setQuotaUser(quotaUser);
        }

        @Override
        public Attributes setUploadType(java.lang.String uploadType) {
          return (Attributes) super.setUploadType(uploadType);
        }

        @Override
        public Attributes setUploadProtocol(java.lang.String uploadProtocol) {
          return (Attributes) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**** Required.** API product name in the following form:
      ** organizations/organization_ID/apiproducts/api_product_name
      **

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Attributes setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Attributes set(String parameterName, Object value) {
          return (Attributes) super.set(parameterName, value);
        }
      }
      /**
       * Creates an API product in an organization. You create API products after you have proxied backend
       * services using API proxies. An API product is a collection of API resources combined with quota
       * settings and metadata that you can use to deliver customized and productized API bundles to your
       * developer community. This metadata can include:
       *
       * - Scope - Environments - API proxies - Extensible profile
       *
       * API products enable you repackage APIs on-the-fly, without having to do any additional coding or
       * configuration. Apigee recommends that you start with a simple API product including only required
       * elements. You then provision credentials to apps to enable them to start testing your APIs.
       *
       * After you have authentication and authorization working against a simple API product, you can
       * iterate to create finer grained API products, defining different sets of API resources for each
       * API product.
       *
       * WARNING:
       *
       * - If you don't specify an API proxy in the request body, any app associated with the product can
       * make calls to any API in your entire organization. - If you don't specify an environment in the
       * request body, the product allows access to all environments.
       *
       * For more information, see {{what_api_product}}
       *
       * Create a request for the method "apiproducts.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the API product will
      be created. Must be in the
       *        following form:
      organizations/organization_ID
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+parent}/apiproducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an API product in an organization. You create API products after you have proxied
         * backend services using API proxies. An API product is a collection of API resources combined
         * with quota settings and metadata that you can use to deliver customized and productized API
         * bundles to your developer community. This metadata can include:
         *
         * - Scope - Environments - API proxies - Extensible profile
         *
         * API products enable you repackage APIs on-the-fly, without having to do any additional coding
         * or configuration. Apigee recommends that you start with a simple API product including only
         * required elements. You then provision credentials to apps to enable them to start testing your
         * APIs.
         *
         * After you have authentication and authorization working against a simple API product, you can
         * iterate to create finer grained API products, defining different sets of API resources for each
         * API product.
         *
         * WARNING:
         *
         * - If you don't specify an API proxy in the request body, any app associated with the product
         * can make calls to any API in your entire organization. - If you don't specify an environment in
         * the request body, the product allows access to all environments.
         *
         * For more information, see {{what_api_product}}
         *
         * Create a request for the method "apiproducts.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the API product will
      be created. Must be in the
       *        following form:
      organizations/organization_ID
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the API product will be created. Must
         * be in the following form: organizations/organization_ID
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the API product will be created. Must be in the
       following form: organizations/organization_ID
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the API product will be created. Must
         * be in the following form: organizations/organization_ID
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an API product from an organization.
       *
       * Deleting an API product causes app requests to the resource URIs defined in the API product to
       * fail.
       *
       * Ensure that you create a new API product to serve existing apps, unless your intention is to
       * disable access to the resources defined in the API product.
       *
       * The API product name required in the request URL is the internal name of the product, not the
       * display name. While they may be the same, it depends on whether the API product was created via
       * the UI or the API. View the list of API products to verify the internal name.
       *
       * Create a request for the method "apiproducts.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Deletes an API product from an organization.
         *
         * Deleting an API product causes app requests to the resource URIs defined in the API product to
         * fail.
         *
         * Ensure that you create a new API product to serve existing apps, unless your intention is to
         * disable access to the resources defined in the API product.
         *
         * The API product name required in the request URL is the internal name of the product, not the
         * display name. While they may be the same, it depends on whether the API product was created via
         * the UI or the API. View the list of API products to verify the internal name.
         *
         * Create a request for the method "apiproducts.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. API product name in the following form:
       organizations/organization_ID/apiproducts/api_product_name
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets configuration details for an API product.
       *
       * The API product name required in the request URL is the internal name of the product, not the
       * display name. While they may be the same, it depends on whether the API product was created via
       * the UI or the API. View the list of API products to verify the internal name.
       *
       * Create a request for the method "apiproducts.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Gets configuration details for an API product.
         *
         * The API product name required in the request URL is the internal name of the product, not the
         * display name. While they may be the same, it depends on whether the API product was created via
         * the UI or the API. View the list of API products to verify the internal name.
         *
         * Create a request for the method "apiproducts.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**** Required.** API product name in the following form:
      ** organizations/organization_ID/apiproducts/api_product_name
      **

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The type of entity for which you want to get a count. Possible values are:
         *
         * - `apps` - `companies` - `developers` - `keys`
         */
        @com.google.api.client.util.Key
        private java.lang.String entity;

        /** The type of entity for which you want to get a count. Possible values are:

       - `apps` - `companies` - `developers` - `keys`
         */
        public java.lang.String getEntity() {
          return entity;
        }

        /**
         * The type of entity for which you want to get a count. Possible values are:
         *
         * - `apps` - `companies` - `developers` - `keys`
         */
        public Get setEntity(java.lang.String entity) {
          this.entity = entity;
          return this;
        }

        /**
         * The type of query. Possible values are:
         *
         * - `count`: Gets an entity count - `list`: Gets a list of entities
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The type of query. Possible values are:

       - `count`: Gets an entity count - `list`: Gets a list of entities
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The type of query. Possible values are:
         *
         * - `count`: Gets an entity count - `list`: Gets a list of entities
         */
        public Get setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all API product names for an organization. Filter the list by passing an `attributename`
       * and `attibutevalue`.
       *
       * The limit on the number of API products returned by the API is 1000. You can paginate the list of
       * API products returned using the `startKey` and `count` query parameters.
       *
       * Create a request for the method "apiproducts.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent **Required.** The parent organization name in the following form:
      organizations/organization_ID
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProductsResponse> {

        private static final String REST_PATH = "v1/{+parent}/apiproducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all API product names for an organization. Filter the list by passing an `attributename`
         * and `attibutevalue`.
         *
         * The limit on the number of API products returned by the API is 1000. You can paginate the list
         * of API products returned using the `startKey` and `count` query parameters.
         *
         * Create a request for the method "apiproducts.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent **Required.** The parent organization name in the following form:
      organizations/organization_ID
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProductsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** The parent organization name in the following form:
         * organizations/organization_ID
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /**** Required.** The parent organization name in the following form: organizations/organization_ID
      **

         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * **Required.** The parent organization name in the following form:
         * organizations/organization_ID
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The name of the attribute to search. */
        @com.google.api.client.util.Key
        private java.lang.String attributename;

        /** The name of the attribute to search.
         */
        public java.lang.String getAttributename() {
          return attributename;
        }

        /** The name of the attribute to search. */
        public List setAttributename(java.lang.String attributename) {
          this.attributename = attributename;
          return this;
        }

        /** The value of the attribute. */
        @com.google.api.client.util.Key
        private java.lang.String attributevalue;

        /** The value of the attribute.
         */
        public java.lang.String getAttributevalue() {
          return attributevalue;
        }

        /** The value of the attribute. */
        public List setAttributevalue(java.lang.String attributevalue) {
          this.attributevalue = attributevalue;
          return this;
        }

        /**
         * Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /**
         * Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /** Set to `true` to get expanded details about each API. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set to `true` to get expanded details about each API.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set to `true` to get expanded details about each API. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /**
         * Gets a list of API products starting with a specific API product in the list. For
         * example, if you're returning 50 API products at a time (using the `count` query
         * parameter), you can view products 50-99 by entering the name of the 50th API product in
         * the first API (without using `startKey`). Product name is case sensitive.
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Gets a list of API products starting with a specific API product in the list. For example, if
       you're returning 50 API products at a time (using the `count` query parameter), you can view
       products 50-99 by entering the name of the 50th API product in the first API (without using
       `startKey`). Product name is case sensitive.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * Gets a list of API products starting with a specific API product in the list. For
         * example, if you're returning 50 API products at a time (using the `count` query
         * parameter), you can view products 50-99 by entering the name of the 50th API product in
         * the first API (without using `startKey`). Product name is case sensitive.
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing API product. You must include all required values, whether or not you are
       * updating them, as well as any optional values that you are updating.
       *
       * The API product name required in the request URL is the internal name of the product, not the
       * Display Name. While they may be the same, it depends on whether the API product was created via
       * UI or API. View the list of API products to identify their internal names.
       *
       * Create a request for the method "apiproducts.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Updates an existing API product. You must include all required values, whether or not you are
         * updating them, as well as any optional values that you are updating.
         *
         * The API product name required in the request URL is the internal name of the product, not the
         * Display Name. While they may be the same, it depends on whether the API product was created via
         * UI or API. View the list of API products to identify their internal names.
         *
         * Create a request for the method "apiproducts.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**** Required.** API product name in the following form:
      ** organizations/organization_ID/apiproducts/api_product_name
      **

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Attributes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attributes attributes() {
        return new Attributes();
      }

      /**
       * The "attributes" collection of methods.
       */
      public class Attributes {

        /**
         * Deletes an API product attribute.
         *
         * Create a request for the method "attributes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Deletes an API product attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**** Required.** API product name in the following form:
        ** organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
        **

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the value of an API product attribute.
         *
         * Create a request for the method "attributes.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Returns the value of an API product attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**** Required.** API product name in the following form:
        ** organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
        **

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of all API product attributes.
         *
         * Create a request for the method "attributes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name. Must be in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+parent}/attributes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

          /**
           * Returns a list of all API product attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name. Must be in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization name. Must be in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name. Must be in the following form:
         organizations/organization_ID/apiproducts/api_product_name
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization name. Must be in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the value of an API product attribute. Limitations are:
         *
         * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
         * products) are cached for 180 seconds (current default). Any custom attributes associated with
         * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
         * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
         * in less than 180 seconds.
         *
         * Create a request for the method "attributes.updateApiProductAttribute".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateApiProductAttribute#execute()} method to invoke the remote
         * operation.
         *
         * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
         * @return the request
         */
        public UpdateApiProductAttribute updateApiProductAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
          UpdateApiProductAttribute result = new UpdateApiProductAttribute(name, content);
          initialize(result);
          return result;
        }

        public class UpdateApiProductAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Updates the value of an API product attribute. Limitations are:
           *
           * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
           * products) are cached for 180 seconds (current default). Any custom attributes associated with
           * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
           * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access
           * token in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateApiProductAttribute".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateApiProductAttribute#execute()} method to invoke the remote
           * operation. <p> {@link UpdateApiProductAttribute#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @since 1.13
           */
          protected UpdateApiProductAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public UpdateApiProductAttribute set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateApiProductAttribute) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateApiProductAttribute setAccessToken(java.lang.String accessToken) {
            return (UpdateApiProductAttribute) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateApiProductAttribute setAlt(java.lang.String alt) {
            return (UpdateApiProductAttribute) super.setAlt(alt);
          }

          @Override
          public UpdateApiProductAttribute setCallback(java.lang.String callback) {
            return (UpdateApiProductAttribute) super.setCallback(callback);
          }

          @Override
          public UpdateApiProductAttribute setFields(java.lang.String fields) {
            return (UpdateApiProductAttribute) super.setFields(fields);
          }

          @Override
          public UpdateApiProductAttribute setKey(java.lang.String key) {
            return (UpdateApiProductAttribute) super.setKey(key);
          }

          @Override
          public UpdateApiProductAttribute setOauthToken(java.lang.String oauthToken) {
            return (UpdateApiProductAttribute) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateApiProductAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateApiProductAttribute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateApiProductAttribute setQuotaUser(java.lang.String quotaUser) {
            return (UpdateApiProductAttribute) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateApiProductAttribute setUploadType(java.lang.String uploadType) {
            return (UpdateApiProductAttribute) super.setUploadType(uploadType);
          }

          @Override
          public UpdateApiProductAttribute setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateApiProductAttribute) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**** Required.** API product name in the following form:
        ** organizations/organization_ID/apiproducts/api_product_name
        **

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          public UpdateApiProductAttribute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateApiProductAttribute set(String parameterName, Object value) {
            return (UpdateApiProductAttribute) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Apis collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apis.List request = apigee.apis().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apis apis() {
      return new Apis();
    }

    /**
     * The "apis" collection of methods.
     */
    public class Apis {

      /**
       * Creates an API proxy. The API proxy created will not be accessible at runtime until it is
       * deployed to an environment.
       *
       * Create a new API proxy by setting the `name` query parameter to the name of the API proxy.
       *
       * Import an API proxy configuration bundle stored in zip format on your local machine to your
       * organization by doing the following:
       *
       * * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter
       * to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name
       * of API proxy   configuration bundle stored in zip format on your local machine.
       *
       * **Note**: To validate the API proxy configuration bundle only   without importing it, set the
       * `action` query   parameter to `validate`.
       *
       * When importing an API proxy configuration bundle, if the API proxy does not exist, it will be
       * created. If the API proxy exists, then a new revision is created. Invalid API proxy
       * configurations are rejected, and a list of validation errors is returned to the client.
       *
       * Create a request for the method "apis.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

        private static final String REST_PATH = "v1/{+parent}/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an API proxy. The API proxy created will not be accessible at runtime until it is
         * deployed to an environment.
         *
         * Create a new API proxy by setting the `name` query parameter to the name of the API proxy.
         *
         * Import an API proxy configuration bundle stored in zip format on your local machine to your
         * organization by doing the following:
         *
         * * Set the `name` query parameter to the name of the API proxy. * Set the `action` query
         * parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a
         * file the name of API proxy   configuration bundle stored in zip format on your local machine.
         *
         * **Note**: To validate the API proxy configuration bundle only   without importing it, set the
         * `action` query   parameter to `validate`.
         *
         * When importing an API proxy configuration bundle, if the API proxy does not exist, it will be
         * created. If the API proxy exists, then a new revision is created. Invalid API proxy
         * configurations are rejected, and a list of validation errors is returned to the client.
         *
         * Create a request for the method "apis.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format:
        `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in the following format:
         * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in the following format:
         * `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Action to perform when importing an API proxy configuration bundle. Set this parameter to
         * one of the following values:
         *
         * * `import` to import the API proxy configuration bundle. * `validate` to validate the API
         * proxy configuration bundle without importing it.
         */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Action to perform when importing an API proxy configuration bundle. Set this parameter to one of
       the following values:

       * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy
       configuration bundle without importing it.
         */
        public java.lang.String getAction() {
          return action;
        }

        /**
         * Action to perform when importing an API proxy configuration bundle. Set this parameter to
         * one of the following values:
         *
         * * `import` to import the API proxy configuration bundle. * `validate` to validate the API
         * proxy configuration bundle without importing it.
         */
        public Create setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
         */
        public java.lang.String getName() {
          return name;
        }

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        /**
         * Ignored. All uploads are validated regardless of the value of this field. Maintained for
         * compatibility with Apigee Edge API.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean validate;

        /** Ignored. All uploads are validated regardless of the value of this field. Maintained for
       compatibility with Apigee Edge API.
         */
        public java.lang.Boolean getValidate() {
          return validate;
        }

        /**
         * Ignored. All uploads are validated regardless of the value of this field. Maintained for
         * compatibility with Apigee Edge API.
         */
        public Create setValidate(java.lang.Boolean validate) {
          this.validate = validate;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API
       * proxy must be undeployed before you can delete it.
       *
       * Create a request for the method "apis.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API proxy in the following format:
       *        `organizations/{organization_id}/apis/{api_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API
         * proxy must be undeployed before you can delete it.
         *
         * Create a request for the method "apis.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API proxy in the following format:
       *        `organizations/{organization_id}/apis/{api_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API proxy in the following format:
         * `organizations/{organization_id}/apis/{api_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API proxy in the following format:
       `organizations/{organization_id}/apis/{api_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API proxy in the following format:
         * `organizations/{organization_id}/apis/{api_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an API proxy including a list of existing revisions.
       *
       * Create a request for the method "apis.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API proxy in the following format:
       *        `organizations/{organization_id}/apis/{api_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Gets an API proxy including a list of existing revisions.
         *
         * Create a request for the method "apis.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API proxy in the following format:
       *        `organizations/{organization_id}/apis/{api_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API proxy in the following format:
         * `organizations/{organization_id}/apis/{api_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API proxy in the following format:
       `organizations/{organization_id}/apis/{api_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API proxy in the following format:
         * `organizations/{organization_id}/apis/{api_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the names of all API proxies in an organization. The names returned correspond to the names
       * defined in the configuration files for each API proxy.
       *
       * Create a request for the method "apis.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format:
        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProxiesResponse> {

        private static final String REST_PATH = "v1/{+parent}/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists the names of all API proxies in an organization. The names returned correspond to the
         * names defined in the configuration files for each API proxy.
         *
         * Create a request for the method "apis.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format:
        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProxiesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in the following format:
         * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in the following format:
         * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Flag that specifies whether to include API proxy metadata in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeMetaData;

        /** Flag that specifies whether to include API proxy metadata in the response.
         */
        public java.lang.Boolean getIncludeMetaData() {
          return includeMetaData;
        }

        /** Flag that specifies whether to include API proxy metadata in the response. */
        public List setIncludeMetaData(java.lang.Boolean includeMetaData) {
          this.includeMetaData = includeMetaData;
          return this;
        }

        /** Flag that specifies whether to include a list of revisions in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeRevisions;

        /** Flag that specifies whether to include a list of revisions in the response.
         */
        public java.lang.Boolean getIncludeRevisions() {
          return includeRevisions;
        }

        /** Flag that specifies whether to include a list of revisions in the response. */
        public List setIncludeRevisions(java.lang.Boolean includeRevisions) {
          this.includeRevisions = includeRevisions;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of an API proxy.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API proxy for which to return deployment information in the
        following format:
         *        `organizations/{org}/apis/{api}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Lists all deployments of an API proxy.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API proxy for which to return deployment information in the
        following format:
         *        `organizations/{org}/apis/{api}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API proxy for which to return deployment information in the
           * following format: `organizations/{org}/apis/{api}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API proxy for which to return deployment information in the following format:
         `organizations/{org}/apis/{api}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API proxy for which to return deployment information in the
           * following format: `organizations/{org}/apis/{api}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Keyvaluemaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keyvaluemaps keyvaluemaps() {
        return new Keyvaluemaps();
      }

      /**
       * The "keyvaluemaps" collection of methods.
       */
      public class Keyvaluemaps {

        /**
         * Creates a key value map in an api proxy.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Creates a key value map in an api proxy.
           *
           * Create a request for the method "keyvaluemaps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/apis/{api}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the key value map. Must be of the form
         `organizations/{organization}/apis/{api}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/apis/{api}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a key value map in an api proxy.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Delete a key value map in an api proxy.
           *
           * Create a request for the method "keyvaluemaps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the key value map. Must be of the form
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * List key value maps in an api proxy.
         *
         * Create a request for the method "keyvaluemaps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Keyvaluemaps.List.> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * List key value maps in an api proxy.
           *
           * Create a request for the method "keyvaluemaps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Keyvaluemaps.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/apis/{api}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to list key value maps. Must be of the form
         `organizations/{organization}/apis/{api}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/apis/{api}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Revisions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Revisions revisions() {
        return new Revisions();
      }

      /**
       * The "revisions" collection of methods.
       */
      public class Revisions {

        /**
         * Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated
         * with it. The API proxy revision must be undeployed before you can delete it.
         *
         * Create a request for the method "revisions.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. API proxy revision in the following format:
         *        `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated
           * with it. The API proxy revision must be undeployed before you can delete it.
           *
           * Create a request for the method "revisions.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. API proxy revision in the following format:
         *        `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision in the following format:
         `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an API proxy revision.
         *
         * To download the API proxy configuration bundle for the specified revision as a zip file, do the
         * following:
         *
         * Set the `format` query parameter to `bundle`. Set the `Accept` header to `application/zip`.
         *
         * If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it
         * displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated
         * API proxy configuration revision, as described in
         * [updateApiProxyRevision](updateApiProxyRevision).
         *
         * Create a request for the method "revisions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. API proxy revision in the following format:
         *        `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Gets an API proxy revision.
           *
           * To download the API proxy configuration bundle for the specified revision as a zip file, do the
           * following:
           *
           *  * Set the `format` query parameter to `bundle`.  * Set the `Accept` header to
           * `application/zip`.
           *
           * If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it
           * displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated
           * API proxy configuration revision, as described in
           * [updateApiProxyRevision](updateApiProxyRevision).
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. API proxy revision in the following format:
         *        `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision in the following format:
         `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Format used when downloading the API proxy configuration revision. Set to `bundle` to
           * download the API proxy configuration revision as a zip file.
           */
          @com.google.api.client.util.Key
          private java.lang.String format;

          /** Format used when downloading the API proxy configuration revision. Set to `bundle` to download the
         API proxy configuration revision as a zip file.
           */
          public java.lang.String getFormat() {
            return format;
          }

          /**
           * Format used when downloading the API proxy configuration revision. Set to `bundle` to
           * download the API proxy configuration revision as a zip file.
           */
          public Get setFormat(java.lang.String format) {
            this.format = format;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all revisions for an API proxy.
         *
         * Create a request for the method "revisions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API proxy in the following format:
         *        `organizations/{organization_id}/apis/{api_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Revisions.List.> {

          private static final String REST_PATH = "v1/{+parent}/revisions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Lists all revisions for an API proxy.
           *
           * Create a request for the method "revisions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API proxy in the following format:
         *        `organizations/{organization_id}/apis/{api_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Revisions.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API proxy in the following format:
           * `organizations/{organization_id}/apis/{api_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API proxy in the following format:
         `organizations/{organization_id}/apis/{api_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API proxy in the following format:
           * `organizations/{organization_id}/apis/{api_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip
         * file from your local machine.
         *
         * You can update only API proxy revisions that have never been deployed. After deployment, an API
         * proxy revision becomes immutable, even if it is undeployed.
         *
         * Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
         *
         * Create a request for the method "revisions.updateApiProxyRevision".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateApiProxyRevision#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. API proxy revision to update in the following format:
         *        `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public UpdateApiProxyRevision updateApiProxyRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          UpdateApiProxyRevision result = new UpdateApiProxyRevision(name, content);
          initialize(result);
          return result;
        }

        public class UpdateApiProxyRevision extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip
           * file from your local machine.
           *
           * You can update only API proxy revisions that have never been deployed. After deployment, an API
           * proxy revision becomes immutable, even if it is undeployed.
           *
           * Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
           *
           * Create a request for the method "revisions.updateApiProxyRevision".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateApiProxyRevision#execute()} method to invoke the remote
           * operation. <p> {@link UpdateApiProxyRevision#initialize(com.google.api.client.googleapis.servic
           * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. API proxy revision to update in the following format:
         *        `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected UpdateApiProxyRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public UpdateApiProxyRevision set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateApiProxyRevision) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateApiProxyRevision setAccessToken(java.lang.String accessToken) {
            return (UpdateApiProxyRevision) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateApiProxyRevision setAlt(java.lang.String alt) {
            return (UpdateApiProxyRevision) super.setAlt(alt);
          }

          @Override
          public UpdateApiProxyRevision setCallback(java.lang.String callback) {
            return (UpdateApiProxyRevision) super.setCallback(callback);
          }

          @Override
          public UpdateApiProxyRevision setFields(java.lang.String fields) {
            return (UpdateApiProxyRevision) super.setFields(fields);
          }

          @Override
          public UpdateApiProxyRevision setKey(java.lang.String key) {
            return (UpdateApiProxyRevision) super.setKey(key);
          }

          @Override
          public UpdateApiProxyRevision setOauthToken(java.lang.String oauthToken) {
            return (UpdateApiProxyRevision) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateApiProxyRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateApiProxyRevision) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateApiProxyRevision setQuotaUser(java.lang.String quotaUser) {
            return (UpdateApiProxyRevision) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateApiProxyRevision setUploadType(java.lang.String uploadType) {
            return (UpdateApiProxyRevision) super.setUploadType(uploadType);
          }

          @Override
          public UpdateApiProxyRevision setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateApiProxyRevision) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision to update in the following format:
           * `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision to update in the following format:
         `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision to update in the following format:
           * `organizations/{organization_id}/apis/{api_id}/revisions/{revision_id}`
           */
          public UpdateApiProxyRevision setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. Maintained
           * for compatibility with Apigee Edge API.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validate;

          /** Ignored. All uploads are validated regardless of the value of this field. Maintained for
         compatibility with Apigee Edge API.
           */
          public java.lang.Boolean getValidate() {
            return validate;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. Maintained
           * for compatibility with Apigee Edge API.
           */
          public UpdateApiProxyRevision setValidate(java.lang.Boolean validate) {
            this.validate = validate;
            return this;
          }

          @Override
          public UpdateApiProxyRevision set(String parameterName, Object value) {
            return (UpdateApiProxyRevision) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of an API proxy revision and actual state reported by runtime pods.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/apis/{api}/revisions/{rev}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Lists all deployments of an API proxy revision and actual state reported by runtime pods.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/apis/{api}/revisions/{rev}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the API proxy revision for which to return deployment information in the
           following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Apps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apps apps() {
      return new Apps();
    }

    /**
     * The "apps" collection of methods.
     */
    public class Apps {

      /**
       * Gets the app profile for the specified app ID.
       *
       * Create a request for the method "apps.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. App ID in the following format:
       `organizations/{org}/apps/{app}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1App> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apps/[^/]+$");

        /**
         * Gets the app profile for the specified app ID.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. App ID in the following format:
       `organizations/{org}/apps/{app}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1App.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apps/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists IDs of apps within an organization that have the specified app status (approved or revoked)
       * or are of the specified app type (developer or company).
       *
       * Create a request for the method "apps.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource path of the parent in the following format:
       `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppsResponse> {

        private static final String REST_PATH = "v1/{+parent}/apps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists IDs of apps within an organization that have the specified app status (approved or
         * revoked) or are of the specified app type (developer or company).
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource path of the parent in the following format:
       `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** API product. */
        @com.google.api.client.util.Key
        private java.lang.String apiProduct;

        /** API product.
         */
        public java.lang.String getApiProduct() {
          return apiProduct;
        }

        /** API product. */
        public List setApiProduct(java.lang.String apiProduct) {
          this.apiProduct = apiProduct;
          return this;
        }

        /**
         * Optional. Filter by the type of the app. Valid values are `company` or `developer`.
         * Defaults to `developer`.
         */
        @com.google.api.client.util.Key
        private java.lang.String apptype;

        /** Optional. Filter by the type of the app. Valid values are `company` or `developer`. Defaults to
       `developer`.
         */
        public java.lang.String getApptype() {
          return apptype;
        }

        /**
         * Optional. Filter by the type of the app. Valid values are `company` or `developer`.
         * Defaults to `developer`.
         */
        public List setApptype(java.lang.String apptype) {
          this.apptype = apptype;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to return an expanded list of apps for the
         * organization. Defaults to `false`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Optional. Flag that specifies whether to return an expanded list of apps for the organization.
       Defaults to `false`.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /**
         * Optional. Flag that specifies whether to return an expanded list of apps for the
         * organization. Defaults to `false`.
         */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. Comma-separated list of app IDs on which to filter. */
        @com.google.api.client.util.Key
        private java.lang.String ids;

        /** Optional. Comma-separated list of app IDs on which to filter.
         */
        public java.lang.String getIds() {
          return ids;
        }

        /** Optional. Comma-separated list of app IDs on which to filter. */
        public List setIds(java.lang.String ids) {
          this.ids = ids;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to include credentials in the response.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeCred;

        /** Optional. Flag that specifies whether to include credentials in the response.
         */
        public java.lang.Boolean getIncludeCred() {
          return includeCred;
        }

        /**
         * Optional. Flag that specifies whether to include credentials in the response.
         */
        public List setIncludeCred(java.lang.Boolean includeCred) {
          this.includeCred = includeCred;
          return this;
        }

        /**
         * Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults
         * to `approved`.
         */
        @com.google.api.client.util.Key
        private java.lang.String keyStatus;

        /** Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to
       `approved`.
         */
        public java.lang.String getKeyStatus() {
          return keyStatus;
        }

        /**
         * Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults
         * to `approved`.
         */
        public List setKeyStatus(java.lang.String keyStatus) {
          this.keyStatus = keyStatus;
          return this;
        }

        /** Optional. Maximum number of app IDs to return. Defaults to 10000. */
        @com.google.api.client.util.Key
        private java.lang.Long rows;

        /** Optional. Maximum number of app IDs to return. Defaults to 10000.
         */
        public java.lang.Long getRows() {
          return rows;
        }

        /** Optional. Maximum number of app IDs to return. Defaults to 10000. */
        public List setRows(java.lang.Long rows) {
          this.rows = rows;
          return this;
        }

        /** Returns the list of apps starting from the specified app ID. */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Returns the list of apps starting from the specified app ID.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /** Returns the list of apps starting from the specified app ID. */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        /**
         * Optional. Filter by the status of the app. Valid values are `approved` or `revoked`.
         * Defaults to `approved`.
         */
        @com.google.api.client.util.Key
        private java.lang.String status;

        /** Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to
       `approved`.
         */
        public java.lang.String getStatus() {
          return status;
        }

        /**
         * Optional. Filter by the status of the app. Valid values are `approved` or `revoked`.
         * Defaults to `approved`.
         */
        public List setStatus(java.lang.String status) {
          this.status = status;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Companies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Companies.List request = apigee.companies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Companies companies() {
      return new Companies();
    }

    /**
     * The "companies" collection of methods.
     */
    public class Companies {

      /**
       * Creates an app for a company. Note that you must first create a profile for the company in your
       * organization before you can register apps that are associated with the company.
       *
       * Create a request for the method "companies.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Name of org that the company will be created in
      `{parent=organizations}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+parent}/companies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an app for a company. Note that you must first create a profile for the company in your
         * organization before you can register apps that are associated with the company.
         *
         * Create a request for the method "companies.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Name of org that the company will be created in
      `{parent=organizations}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of org that the company will be created in `{parent=organizations}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Name of org that the company will be created in `{parent=organizations}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Name of org that the company will be created in `{parent=organizations}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an existing company.
       *
       * Create a request for the method "companies.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The company resource name
      `organizations/{org}/companies/{company}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

        /**
         * Deletes an existing company.
         *
         * Create a request for the method "companies.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The company resource name
      `organizations/{org}/companies/{company}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The company resource name `organizations/{org}/companies/{company}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * List details for a company.
       *
       * Create a request for the method "companies.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The company resource name
      `organizations/{org}/companies/{company}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

        /**
         * List details for a company.
         *
         * Create a request for the method "companies.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The company resource name
      `organizations/{org}/companies/{company}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The company resource name `organizations/{org}/companies/{company}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all companies in an organization, and optionally returns an expanded list of companies,
       * displaying a full profile for each company in the organization.
       *
       * Create a request for the method "companies.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent organization name
      `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompaniesResponse> {

        private static final String REST_PATH = "v1/{+parent}/companies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List all companies in an organization, and optionally returns an expanded list of companies,
         * displaying a full profile for each company in the organization.
         *
         * Create a request for the method "companies.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent organization name
      `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompaniesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent organization name `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent organization name `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent organization name `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Limits the list to the number you specify. The limit is 100. */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Limits the list to the number you specify. The limit is 100.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /** Limits the list to the number you specify. The limit is 100. */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /** Set expand to true to return a full profile for each company. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set expand to true to return a full profile for each company.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set expand to true to return a full profile for each company. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. include developers in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeDevelopers;

        /** Optional. include developers in the response.
         */
        public java.lang.Boolean getIncludeDevelopers() {
          return includeDevelopers;
        }

        /** Optional. include developers in the response. */
        public List setIncludeDevelopers(java.lang.Boolean includeDevelopers) {
          this.includeDevelopers = includeDevelopers;
          return this;
        }

        /**
         * To filter the keys that are returned, enter the email of a developer that the list will
         * start with.
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** To filter the keys that are returned, enter the email of a developer that the list will start with.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * To filter the keys that are returned, enter the email of a developer that the list will
         * start with.
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing company. Send the complete company record as a payload with any changes you
       * want to make. Note that to change the status of the Company you use Set the Status of a Company.
       * The attributes in the sample payload below apply to company configuration in monetization. For
       * non-monetized companies, you need send only displayName.
       *
       * Create a request for the method "companies.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Name of the company to be updated.
      `{name=organizations/companies}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

        /**
         * Updates an existing company. Send the complete company record as a payload with any changes you
         * want to make. Note that to change the status of the Company you use Set the Status of a
         * Company. The attributes in the sample payload below apply to company configuration in
         * monetization. For non-monetized companies, you need send only displayName.
         *
         * Create a request for the method "companies.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the company to be updated.
      `{name=organizations/companies}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the company to be updated. `{name=organizations/companies}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the company to be updated. `{name=organizations/companies}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the company to be updated. `{name=organizations/companies}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Specify the status as active or inactive. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Specify the status as active or inactive.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Specify the status as active or inactive. */
        public Update setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Creates an app for a company.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Resource path of the parent: `organizations/{org}/companies/{company_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

          /**
           * Creates an app for a company.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Resource path of the parent: `organizations/{org}/companies/{company_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Resource path of the parent: `organizations/{org}/companies/{company_name}` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Resource path of the parent: `organizations/{org}/companies/{company_name}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Resource path of the parent: `organizations/{org}/companies/{company_name}` */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a company app.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");

          /**
           * Deletes a company app.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** name of the app resource: `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the profile of a specific company app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");

          /**
           * Gets the profile of a specific company app.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** name of the app resource: `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List company apps in an organization. You can optionally expand the response to include the
         * profile for each app.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The name of a company resource:
        `organizations/{org}/companies/{company_name}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompanyAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

          /**
           * List company apps in an organization. You can optionally expand the response to include the
           * profile for each app.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The name of a company resource:
        `organizations/{org}/companies/{company_name}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompanyAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of a company resource: `organizations/{org}/companies/{company_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The name of a company resource: `organizations/{org}/companies/{company_name}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The name of a company resource: `organizations/{org}/companies/{company_name}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Limits the list to the number you specify. The limit is 100. */
          @com.google.api.client.util.Key
          private java.lang.Long count;

          /** Limits the list to the number you specify. The limit is 100.
           */
          public java.lang.Long getCount() {
            return count;
          }

          /** Limits the list to the number you specify. The limit is 100. */
          public List setCount(java.lang.Long count) {
            this.count = count;
            return this;
          }

          /** Set expand to true to return a full profile */
          @com.google.api.client.util.Key
          private java.lang.Boolean expand;

          /** Set expand to true to return a full profile
           */
          public java.lang.Boolean getExpand() {
            return expand;
          }

          /** Set expand to true to return a full profile */
          public List setExpand(java.lang.Boolean expand) {
            this.expand = expand;
            return this;
          }

          /**
           * Lets you return a list of app starting with a specific app name in the list.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /** Lets you return a list of app starting with a specific app name in the list.
           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * Lets you return a list of app starting with a specific app name in the list.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing company app.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Resource path of the app:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");

          /**
           * Updates an existing company app.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource path of the app:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource path of the app:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource path of the app: `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource path of the app:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Deletes a key for a company app and removes all API products associated with the app. The key can
           * no longer be used to access any APIs.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Deletes a key for a company app and removes all API products associated with the app. The key
             * can no longer be used to access any APIs.
             *
             * Create a request for the method "keys.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets information about the consumer key issued to a specific company app.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Gets information about the consumer key issued to a specific company app.
             *
             * Create a request for the method "keys.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Updates an existing company app key to add additional API products or attributes. Note that only
           * a single API product can be resolved per app key at runtime. API products are resolved by name,
           * in alphabetical order. The first API product found in the list will be returned.
           *
           * Create a request for the method "keys.updateCompanyAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateCompanyAppKey#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey}
           * @return the request
           */
          public UpdateCompanyAppKey updateCompanyAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey content) throws java.io.IOException {
            UpdateCompanyAppKey result = new UpdateCompanyAppKey(name, content);
            initialize(result);
            return result;
          }

          public class UpdateCompanyAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Updates an existing company app key to add additional API products or attributes. Note that
             * only a single API product can be resolved per app key at runtime. API products are resolved by
             * name, in alphabetical order. The first API product found in the list will be returned.
             *
             * Create a request for the method "keys.updateCompanyAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateCompanyAppKey#execute()} method to invoke the remote
             * operation. <p> {@link UpdateCompanyAppKey#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey}
             * @since 1.13
             */
            protected UpdateCompanyAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public UpdateCompanyAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateCompanyAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateCompanyAppKey setAccessToken(java.lang.String accessToken) {
              return (UpdateCompanyAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateCompanyAppKey setAlt(java.lang.String alt) {
              return (UpdateCompanyAppKey) super.setAlt(alt);
            }

            @Override
            public UpdateCompanyAppKey setCallback(java.lang.String callback) {
              return (UpdateCompanyAppKey) super.setCallback(callback);
            }

            @Override
            public UpdateCompanyAppKey setFields(java.lang.String fields) {
              return (UpdateCompanyAppKey) super.setFields(fields);
            }

            @Override
            public UpdateCompanyAppKey setKey(java.lang.String key) {
              return (UpdateCompanyAppKey) super.setKey(key);
            }

            @Override
            public UpdateCompanyAppKey setOauthToken(java.lang.String oauthToken) {
              return (UpdateCompanyAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateCompanyAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateCompanyAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateCompanyAppKey setQuotaUser(java.lang.String quotaUser) {
              return (UpdateCompanyAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateCompanyAppKey setUploadType(java.lang.String uploadType) {
              return (UpdateCompanyAppKey) super.setUploadType(uploadType);
            }

            @Override
            public UpdateCompanyAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateCompanyAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public UpdateCompanyAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Set action to approve or revoke. */
            @com.google.api.client.util.Key
            private java.lang.String action;

            /** Set action to approve or revoke.
             */
            public java.lang.String getAction() {
              return action;
            }

            /** Set action to approve or revoke. */
            public UpdateCompanyAppKey setAction(java.lang.String action) {
              this.action = action;
              return this;
            }

            @Override
            public UpdateCompanyAppKey set(String parameterName, Object value) {
              return (UpdateCompanyAppKey) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Deployments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Deployments deployments() {
      return new Deployments();
    }

    /**
     * The "deployments" collection of methods.
     */
    public class Deployments {

      /**
       * Lists all deployments of API proxies or shared flows.
       *
       * Create a request for the method "deployments.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization for which to return deployment information in the
      following
       *        format:
       `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

        private static final String REST_PATH = "v1/{+parent}/deployments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all deployments of API proxies or shared flows.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization for which to return deployment information in the
      following
       *        format:
       `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which to return deployment information in the
         * following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization for which to return deployment information in the following
       format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization for which to return deployment information in the
         * following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set
         * to `true` to return shared flow deployments; set to `false` to return API proxy
         * deployments. Defaults to `false`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean sharedFlows;

        /** Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true`
       to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to
       `false`.
         */
        public java.lang.Boolean getSharedFlows() {
          return sharedFlows;
        }

        /**
         * Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set
         * to `true` to return shared flow deployments; set to `false` to return API proxy
         * deployments. Defaults to `false`.
         */
        public List setSharedFlows(java.lang.Boolean sharedFlows) {
          this.sharedFlows = sharedFlows;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Developers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Developers.List request = apigee.developers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Developers developers() {
      return new Developers();
    }

    /**
     * The "developers" collection of methods.
     */
    public class Developers {

      /**
       * Updates or creates developer attributes.This API replaces the current list of attributes with the
       * attributes specified in the request body. This lets you update existing attributes, add new
       * attributes, or delete existing attributes by omitting them from the request body. the attribute
       * limit is 18. Core Persistence Services caching minimum: OAuth access tokens and Key Management
       * Service (KMS) entities (Apps, Developers, API Products) are cached for 180 seconds. Any custom
       * attributes associated with entities also get cached for at least 180 seconds after entity is
       * accessed during runtime. This also means the ExpiresIn element on the OAuthV2 policy won't be
       * able to expire an access token in less than 180 seconds.
       *
       * Create a request for the method "developers.attributes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Attributes#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent developer for which attributes are being updated.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
       * @return the request
       */
      public Attributes attributes(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
        Attributes result = new Attributes(parent, content);
        initialize(result);
        return result;
      }

      public class Attributes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

        private static final String REST_PATH = "v1/{+parent}/attributes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Updates or creates developer attributes.This API replaces the current list of attributes with
         * the attributes specified in the request body. This lets you update existing attributes, add new
         * attributes, or delete existing attributes by omitting them from the request body. the attribute
         * limit is 18. Core Persistence Services caching minimum: OAuth access tokens and Key Management
         * Service (KMS) entities (Apps, Developers, API Products) are cached for 180 seconds. Any custom
         * attributes associated with entities also get cached for at least 180 seconds after entity is
         * accessed during runtime. This also means the ExpiresIn element on the OAuthV2 policy won't be
         * able to expire an access token in less than 180 seconds.
         *
         * Create a request for the method "developers.attributes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Attributes#execute()} method to invoke the remote operation. <p>
         * {@link
         * Attributes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent developer for which attributes are being updated.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @since 1.13
         */
        protected Attributes(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Attributes set$Xgafv(java.lang.String $Xgafv) {
          return (Attributes) super.set$Xgafv($Xgafv);
        }

        @Override
        public Attributes setAccessToken(java.lang.String accessToken) {
          return (Attributes) super.setAccessToken(accessToken);
        }

        @Override
        public Attributes setAlt(java.lang.String alt) {
          return (Attributes) super.setAlt(alt);
        }

        @Override
        public Attributes setCallback(java.lang.String callback) {
          return (Attributes) super.setCallback(callback);
        }

        @Override
        public Attributes setFields(java.lang.String fields) {
          return (Attributes) super.setFields(fields);
        }

        @Override
        public Attributes setKey(java.lang.String key) {
          return (Attributes) super.setKey(key);
        }

        @Override
        public Attributes setOauthToken(java.lang.String oauthToken) {
          return (Attributes) super.setOauthToken(oauthToken);
        }

        @Override
        public Attributes setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Attributes) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Attributes setQuotaUser(java.lang.String quotaUser) {
          return (Attributes) super.setQuotaUser(quotaUser);
        }

        @Override
        public Attributes setUploadType(java.lang.String uploadType) {
          return (Attributes) super.setUploadType(uploadType);
        }

        @Override
        public Attributes setUploadProtocol(java.lang.String uploadProtocol) {
          return (Attributes) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent developer for which attributes are being updated. Must be of the
         * form `organizations/{org}/developers/{developer}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent developer for which attributes are being updated. Must be of the form
       `organizations/{org}/developers/{developer}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent developer for which attributes are being updated. Must be of the
         * form `organizations/{org}/developers/{developer}`
         */
        public Attributes setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Attributes set(String parameterName, Object value) {
          return (Attributes) super.set(parameterName, value);
        }
      }
      /**
       * Creates a profile for a developer in an organization. Once created, the developer can register an
       * app and receive an API key. The developer is always created with a status of active. To set the
       * status explicitly, use SetDeveloperStatus
       *
       * Create a request for the method "developers.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the Developer will
      be created. Must be of the
       *        form `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+parent}/developers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a profile for a developer in an organization. Once created, the developer can register
         * an app and receive an API key. The developer is always created with a status of active. To set
         * the status explicitly, use SetDeveloperStatus
         *
         * Create a request for the method "developers.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the Developer will
      be created. Must be of the
       *        form `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the Developer will be created. Must be
         * of the form `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the Developer will be created. Must be of the
       form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the Developer will be created. Must be
         * of the form `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a developer from an organization. All apps and API keys associated with the developer are
       * also removed from the organization. All times in the response are UNIX times.
       *
       * Create a request for the method "developers.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Developer to be deleted.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Deletes a developer from an organization. All apps and API keys associated with the developer
         * are also removed from the organization. All times in the response are UNIX times.
         *
         * Create a request for the method "developers.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Developer to be deleted.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Developer to be deleted. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Developer to be deleted. Must be of the form
       `organizations/{org}/developers/{developer}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Developer to be deleted. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns the profile for a developer by email address or ID. All time values are UNIX time values.
       * The profile includes the developer's email address, ID, name, and other information. Apigee
       * recommends using the developer email in the API call. Developer ID is generated internally and is
       * not guaranteed to stay the same over time. For example, Apigee could change the format or length
       * of this variable.
       *
       * Create a request for the method "developers.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Developer to be get.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Returns the profile for a developer by email address or ID. All time values are UNIX time
         * values. The profile includes the developer's email address, ID, name, and other information.
         * Apigee recommends using the developer email in the API call. Developer ID is generated
         * internally and is not guaranteed to stay the same over time. For example, Apigee could change
         * the format or length of this variable.
         *
         * Create a request for the method "developers.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Developer to be get.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Developer to be get. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Developer to be get. Must be of the form
       `organizations/{org}/developers/{developer}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Developer to be get. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Status to set active/inactive */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Status to set active/inactive
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Status to set active/inactive */
        public Get setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all developers in an organization by email address. This call does not list any company
       * developers who are a part of the designated organization.
       *
       * Create a request for the method "developers.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name.
      Must be of the form `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOfDevelopersResponse> {

        private static final String REST_PATH = "v1/{+parent}/developers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all developers in an organization by email address. This call does not list any company
         * developers who are a part of the designated organization.
         *
         * Create a request for the method "developers.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name.
      Must be of the form `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOfDevelopersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name. Must be of the form `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name. Must be of the form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name. Must be of the form `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Enter the number of developers you want returned in the API call. The limit is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Enter the number of developers you want returned in the API call. The limit is 1000.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /**
         * Enter the number of developers you want returned in the API call. The limit is 1000.
         */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /** For Verbose response */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** For Verbose response
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** For Verbose response */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. Filtery by id, accepts list of ids with comma seperation. */
        @com.google.api.client.util.Key
        private java.lang.String ids;

        /** Optional. Filtery by id, accepts list of ids with comma seperation.
         */
        public java.lang.String getIds() {
          return ids;
        }

        /** Optional. Filtery by id, accepts list of ids with comma seperation. */
        public List setIds(java.lang.String ids) {
          this.ids = ids;
          return this;
        }

        /** Optional. Filter to incude company details in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeCompany;

        /** Optional. Filter to incude company details in the response.
         */
        public java.lang.Boolean getIncludeCompany() {
          return includeCompany;
        }

        /** Optional. Filter to incude company details in the response. */
        public List setIncludeCompany(java.lang.Boolean includeCompany) {
          this.includeCompany = includeCompany;
          return this;
        }

        /**
         * Lets you return a list of developers starting with a specific developer in the list.
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Lets you return a list of developers starting with a specific developer in the list.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * Lets you return a list of developers starting with a specific developer in the list.
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Sets a developer's status to active or inactive for a specific organization Run this API for each
       * organization where you want to change the developer's status. By default, the status of a
       * developer is set to active. Admins with proper permissions (such as Organization Administrator)
       * can change a developer's status using this API call. If you set a developer's status to inactive,
       * the API keys assigned to the developer's apps are no longer valid even though keys continue to
       * show a status of "Approved" (in strikethrough text in the management UI). Inactive developers,
       * however, can still log into the developer portal and create apps. The new keys that get created
       * just won't work.Apigee recommends using the developer email in the API call. Developer ID is
       * generated internally and is not guaranteed to stay the same over time. For example, Apigee could
       * change the format or length of this variable. The HTTP status code for success is: 204 No
       * Content.
       *
       * Create a request for the method "developers.setDeveloperStatus".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SetDeveloperStatus#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Developer to be deleted.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
       * @return the request
       */
      public SetDeveloperStatus setDeveloperStatus(java.lang.String name) throws java.io.IOException {
        SetDeveloperStatus result = new SetDeveloperStatus(name);
        initialize(result);
        return result;
      }

      public class SetDeveloperStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Sets a developer's status to active or inactive for a specific organization Run this API for
         * each organization where you want to change the developer's status. By default, the status of a
         * developer is set to active. Admins with proper permissions (such as Organization Administrator)
         * can change a developer's status using this API call. If you set a developer's status to
         * inactive, the API keys assigned to the developer's apps are no longer valid even though keys
         * continue to show a status of "Approved" (in strikethrough text in the management UI). Inactive
         * developers, however, can still log into the developer portal and create apps. The new keys that
         * get created just won't work.Apigee recommends using the developer email in the API call.
         * Developer ID is generated internally and is not guaranteed to stay the same over time. For
         * example, Apigee could change the format or length of this variable. The HTTP status code for
         * success is: 204 No Content.
         *
         * Create a request for the method "developers.setDeveloperStatus".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SetDeveloperStatus#execute()} method to invoke the remote
         * operation. <p> {@link SetDeveloperStatus#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The name of the Developer to be deleted.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
         * @since 1.13
         */
        protected SetDeveloperStatus(java.lang.String name) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public SetDeveloperStatus set$Xgafv(java.lang.String $Xgafv) {
          return (SetDeveloperStatus) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetDeveloperStatus setAccessToken(java.lang.String accessToken) {
          return (SetDeveloperStatus) super.setAccessToken(accessToken);
        }

        @Override
        public SetDeveloperStatus setAlt(java.lang.String alt) {
          return (SetDeveloperStatus) super.setAlt(alt);
        }

        @Override
        public SetDeveloperStatus setCallback(java.lang.String callback) {
          return (SetDeveloperStatus) super.setCallback(callback);
        }

        @Override
        public SetDeveloperStatus setFields(java.lang.String fields) {
          return (SetDeveloperStatus) super.setFields(fields);
        }

        @Override
        public SetDeveloperStatus setKey(java.lang.String key) {
          return (SetDeveloperStatus) super.setKey(key);
        }

        @Override
        public SetDeveloperStatus setOauthToken(java.lang.String oauthToken) {
          return (SetDeveloperStatus) super.setOauthToken(oauthToken);
        }

        @Override
        public SetDeveloperStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetDeveloperStatus) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetDeveloperStatus setQuotaUser(java.lang.String quotaUser) {
          return (SetDeveloperStatus) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetDeveloperStatus setUploadType(java.lang.String uploadType) {
          return (SetDeveloperStatus) super.setUploadType(uploadType);
        }

        @Override
        public SetDeveloperStatus setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetDeveloperStatus) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Developer to be deleted. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Developer to be deleted. Must be of the form
       `organizations/{org}/developers/{developer}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Developer to be deleted. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        public SetDeveloperStatus setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Status to set active/inactive */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Status to set active/inactive
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Status to set active/inactive */
        public SetDeveloperStatus setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public SetDeveloperStatus set(String parameterName, Object value) {
          return (SetDeveloperStatus) super.set(parameterName, value);
        }
      }
      /**
       * Update an existing developer profile. To add new values or update existing values, submit the new
       * or updated portion of the developer profile along with the rest of the developer profile, even if
       * no values are changing. To delete attributes from a developer profile, submit the entire profile
       * without the attributes that you want to delete. Apigee recommends using the developer email in
       * the API call. Developer ID is generated internally and is not guaranteed to stay the same over
       * time. For example, Apigee could change the format or length of this variable. the custom
       * attribute limit is 18. Core Persistence Services caching minimum: OAuth access tokens and Key
       * Management Service (KMS) entities (Apps, Developers, API Products) are cached for 180 seconds
       * (current default). Any custom attributes associated with entities also get cached for at least
       * 180 seconds after entity is accessed during runtime. This also means the ExpiresIn element on the
       * OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
       *
       * Create a request for the method "developers.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Developer to be updated.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Update an existing developer profile. To add new values or update existing values, submit the
         * new or updated portion of the developer profile along with the rest of the developer profile,
         * even if no values are changing. To delete attributes from a developer profile, submit the
         * entire profile without the attributes that you want to delete. Apigee recommends using the
         * developer email in the API call. Developer ID is generated internally and is not guaranteed to
         * stay the same over time. For example, Apigee could change the format or length of this
         * variable. the custom attribute limit is 18. Core Persistence Services caching minimum: OAuth
         * access tokens and Key Management Service (KMS) entities (Apps, Developers, API Products) are
         * cached for 180 seconds (current default). Any custom attributes associated with entities also
         * get cached for at least 180 seconds after entity is accessed during runtime. This also means
         * the ExpiresIn element on the OAuthV2 policy won't be able to expire an access token in less
         * than 180 seconds.
         *
         * Create a request for the method "developers.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Developer to be updated.
      Must be of the form
       *        `organizations/{org}/developers/{developer}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Developer to be updated. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Developer to be updated. Must be of the form
       `organizations/{org}/developers/{developer}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Developer to be updated. Must be of the form
         * `organizations/{org}/developers/{developer}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Updates or creates app attributes. This API replaces the current list of attributes with the
         * attributes specified in the request body. This lets you update existing attributes, add new
         * attributes, or delete existing attributes by omitting them from the request body.
         *
         * Create a request for the method "apps.attributes".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Attributes#execute()} method to invoke the remote operation.
         *
         * @param name Required. Developer App Attribute name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @return the request
         */
        public Attributes attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
          Attributes result = new Attributes(name, content);
          initialize(result);
          return result;
        }

        public class Attributes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+name}/attributes";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Updates or creates app attributes. This API replaces the current list of attributes with the
           * attributes specified in the request body. This lets you update existing attributes, add new
           * attributes, or delete existing attributes by omitting them from the request body.
           *
           * Create a request for the method "apps.attributes".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Attributes#execute()} method to invoke the remote operation. <p>
           * {@link
           * Attributes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Developer App Attribute name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
           * @since 1.13
           */
          protected Attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Attributes set$Xgafv(java.lang.String $Xgafv) {
            return (Attributes) super.set$Xgafv($Xgafv);
          }

          @Override
          public Attributes setAccessToken(java.lang.String accessToken) {
            return (Attributes) super.setAccessToken(accessToken);
          }

          @Override
          public Attributes setAlt(java.lang.String alt) {
            return (Attributes) super.setAlt(alt);
          }

          @Override
          public Attributes setCallback(java.lang.String callback) {
            return (Attributes) super.setCallback(callback);
          }

          @Override
          public Attributes setFields(java.lang.String fields) {
            return (Attributes) super.setFields(fields);
          }

          @Override
          public Attributes setKey(java.lang.String key) {
            return (Attributes) super.setKey(key);
          }

          @Override
          public Attributes setOauthToken(java.lang.String oauthToken) {
            return (Attributes) super.setOauthToken(oauthToken);
          }

          @Override
          public Attributes setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Attributes) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Attributes setQuotaUser(java.lang.String quotaUser) {
            return (Attributes) super.setQuotaUser(quotaUser);
          }

          @Override
          public Attributes setUploadType(java.lang.String uploadType) {
            return (Attributes) super.setUploadType(uploadType);
          }

          @Override
          public Attributes setUploadProtocol(java.lang.String uploadProtocol) {
            return (Attributes) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Developer App Attribute name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Developer App Attribute name of the form:
         `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Developer App Attribute name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public Attributes setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Attributes set(String parameterName, Object value) {
            return (Attributes) super.set(parameterName, value);
          }
        }
        /**
         * Creates an app associated with a developer, associates the app with an API product, and auto-
         * generates an API key for the app to use in calls to API proxies inside the API product. The name
         * is the unique ID of the app that you can use in management API calls. The DisplayName (set with
         * an attribute) is what appears in the management UI. If you don't provide a DisplayName, the name
         * is used. The keyExpiresIn property sets the expiration on the API key. If you don't set this, or
         * set the value to -1, they API key never expires.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name under which the Developer App will
        be created. Must be of the
         *        form:
           `organizations/{organization_id}/developers/{developer_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Creates an app associated with a developer, associates the app with an API product, and auto-
           * generates an API key for the app to use in calls to API proxies inside the API product. The
           * name is the unique ID of the app that you can use in management API calls. The DisplayName (set
           * with an attribute) is what appears in the management UI. If you don't provide a DisplayName,
           * the name is used. The keyExpiresIn property sets the expiration on the API key. If you don't
           * set this, or set the value to -1, they API key never expires.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name under which the Developer App will
        be created. Must be of the
         *        form:
           `organizations/{organization_id}/developers/{developer_id}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization name under which the Developer App will be created.
           * Must be of the form: `organizations/{organization_id}/developers/{developer_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name under which the Developer App will be created. Must be of
         the form: `organizations/{organization_id}/developers/{developer_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization name under which the Developer App will be created.
           * Must be of the form: `organizations/{organization_id}/developers/{developer_id}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a developer app. This API returns the developer app that was deleted.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Deletes a developer app. This API returns the developer app that was deleted.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Developer App name of the form:
         `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * (2) Create new developer KeyPairs Generates a new consumer key and consumer secret for the named
         * developer app. Rather than replacing an existing key, this API call generates a new key. For
         * example, if you're using API key rotation, you can generate new keys whose expiration overlaps
         * keys that will be out of rotation when they expire. You might also generate a new key/secret if
         * the security of the original key/secret is compromised. After using this API, multiple key pairs
         * will be associated with a single app. Each key pair has an independent status (revoked or
         * approved) and an independent expiry time. Any non-expired, approved key can be used in an API
         * call. The keyExpiresIn value is in milliseconds. A value of -1 means the key/secret pair never
         * expire.
         *
         * Create a request for the method "apps.generateKeyPairOrUpdateDeveloperAppStatus".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GenerateKeyPairOrUpdateDeveloperAppStatus#execute()} method to invoke
         * the remote operation.
         *
         * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public GenerateKeyPairOrUpdateDeveloperAppStatus generateKeyPairOrUpdateDeveloperAppStatus(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          GenerateKeyPairOrUpdateDeveloperAppStatus result = new GenerateKeyPairOrUpdateDeveloperAppStatus(name, content);
          initialize(result);
          return result;
        }

        public class GenerateKeyPairOrUpdateDeveloperAppStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * (2) Create new developer KeyPairs Generates a new consumer key and consumer secret for the
           * named developer app. Rather than replacing an existing key, this API call generates a new key.
           * For example, if you're using API key rotation, you can generate new keys whose expiration
           * overlaps keys that will be out of rotation when they expire. You might also generate a new
           * key/secret if the security of the original key/secret is compromised. After using this API,
           * multiple key pairs will be associated with a single app. Each key pair has an independent
           * status (revoked or approved) and an independent expiry time. Any non-expired, approved key can
           * be used in an API call. The keyExpiresIn value is in milliseconds. A value of -1 means the
           * key/secret pair never expire.
           *
           * Create a request for the method "apps.generateKeyPairOrUpdateDeveloperAppStatus".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GenerateKeyPairOrUpdateDeveloperAppStatus#execute()} method to
           * invoke the remote operation. <p> {@link GenerateKeyPairOrUpdateDeveloperAppStatus#initialize(co
           * m.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to
           * initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected GenerateKeyPairOrUpdateDeveloperAppStatus(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAccessToken(java.lang.String accessToken) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAlt(java.lang.String alt) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setAlt(alt);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setCallback(java.lang.String callback) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setCallback(callback);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setFields(java.lang.String fields) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setFields(fields);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setKey(java.lang.String key) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setKey(key);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setOauthToken(java.lang.String oauthToken) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setQuotaUser(java.lang.String quotaUser) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setUploadType(java.lang.String uploadType) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setUploadType(uploadType);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Developer App name of the form:
         `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public GenerateKeyPairOrUpdateDeveloperAppStatus setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Set the action to approve or revoke. */
          @com.google.api.client.util.Key
          private java.lang.String action;

          /** Set the action to approve or revoke.
           */
          public java.lang.String getAction() {
            return action;
          }

          /** Set the action to approve or revoke. */
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAction(java.lang.String action) {
            this.action = action;
            return this;
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus set(String parameterName, Object value) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.set(parameterName, value);
          }
        }
        /**
         * Get the profile of a specific developer app. All times in the response are UNIX times. Note that
         * the response contains a top-level attribute named accessType that is no longer used by Apigee.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Get the profile of a specific developer app. All times in the response are UNIX times. Note
           * that the response contains a top-level attribute named accessType that is no longer used by
           * Apigee.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Developer App name of the form:
         `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Entity. */
          @com.google.api.client.util.Key
          private java.lang.String entity;

          /** Entity.
           */
          public java.lang.String getEntity() {
            return entity;
          }

          /** Entity. */
          public Get setEntity(java.lang.String entity) {
            this.entity = entity;
            return this;
          }

          /** Query. */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /** Query.
           */
          public java.lang.String getQuery() {
            return query;
          }

          /** Query. */
          public Get setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all apps created by a developer in an organization, and optionally provides an expanded
         * view of the apps. All time values in the response are UNIX times. You can specify either the
         * developer's email address or Edge ID.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name. Must be of the form:
         *        `organizations/{organization_id}/developers/{developer_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Lists all apps created by a developer in an organization, and optionally provides an expanded
           * view of the apps. All time values in the response are UNIX times. You can specify either the
           * developer's email address or Edge ID.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name. Must be of the form:
         *        `organizations/{organization_id}/developers/{developer_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization name. Must be of the form:
           * `organizations/{organization_id}/developers/{developer_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name. Must be of the form:
         `organizations/{organization_id}/developers/{developer_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization name. Must be of the form:
           * `organizations/{organization_id}/developers/{developer_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Limits the list to the number you specify. */
          @com.google.api.client.util.Key
          private java.lang.Long count;

          /** Limits the list to the number you specify.
           */
          public java.lang.Long getCount() {
            return count;
          }

          /** Limits the list to the number you specify. */
          public List setCount(java.lang.Long count) {
            this.count = count;
            return this;
          }

          /**
           * Optional. Set to true to expand the results. This query parameter does not work if you
           * use the count or startKey query parameters.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean expand;

          /** Optional. Set to true to expand the results. This query parameter does not work if you use the
         count or startKey query parameters.
           */
          public java.lang.Boolean getExpand() {
            return expand;
          }

          /**
           * Optional. Set to true to expand the results. This query parameter does not work if you
           * use the count or startKey query parameters.
           */
          public List setExpand(java.lang.Boolean expand) {
            this.expand = expand;
            return this;
          }

          /** Optional. Set to true to expand the results in shallow. */
          @com.google.api.client.util.Key
          private java.lang.Boolean shallowExpand;

          /** Optional. Set to true to expand the results in shallow.
           */
          public java.lang.Boolean getShallowExpand() {
            return shallowExpand;
          }

          /** Optional. Set to true to expand the results in shallow. */
          public List setShallowExpand(java.lang.Boolean shallowExpand) {
            this.shallowExpand = shallowExpand;
            return this;
          }

          /**
           * To filter the keys that are returned, enter the name of a company app that the list
           * will start with.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /** To filter the keys that are returned, enter the name of a company app that the list will start
         with.
           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * To filter the keys that are returned, enter the name of a company app that the list
           * will start with.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a developer app. You can also add an app to an API product with this call, which
         * automatically generates an API key for the app to use when calling APIs in the product. (If you
         * want to use an existing API key for another API product as well, see Add API Product to Key.) Be
         * sure to include all existing attributes in the request body. Note that you cannot update the
         * scopes associated with the app by using this API. Instead, use "Update the Scope of an App". The
         * app name is the primary key used by Edge to identify the app. Therefore, you cannot change the
         * app name after creating it.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Updates a developer app. You can also add an app to an API product with this call, which
           * automatically generates an API key for the app to use when calling APIs in the product. (If you
           * want to use an existing API key for another API product as well, see Add API Product to Key.)
           * Be sure to include all existing attributes in the request body. Note that you cannot update the
           * scopes associated with the app by using this API. Instead, use "Update the Scope of an App".
           * The app name is the primary key used by Edge to identify the app. Therefore, you cannot change
           * the app name after creating it.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Developer App name of the form:
         *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Developer App name of the form:
         `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Developer App name of the form:
           * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Attributes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Attributes attributes() {
          return new Attributes();
        }

        /**
         * The "attributes" collection of methods.
         */
        public class Attributes {

          /**
           * Deletes an app attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Developer App Attribute name of the form:
            `organizations/{organization_id}/developers/{d
           *        eveloper_id}/apps/{app_name}/attributes/{attribute_name}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Deletes an app attribute.
             *
             * Create a request for the method "attributes.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Developer App Attribute name of the form:
            `organizations/{organization_id}/developers/{d
           *        eveloper_id}/apps/{app_name}/attributes/{attribute_name}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Developer App Attribute name of the form: `organizations/{organization_id}/
             * developers/{developer_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Developer App Attribute name of the form: `organizations/{organization_id}/developers/{de
           veloper_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Developer App Attribute name of the form: `organizations/{organization_id}/
             * developers/{developer_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns the value of an app attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Developer App Attribute name of the form:
            `organizations/{organization_id}/developers/{d
           *        eveloper_id}/apps/{app_name}/attributes/{attribute_name}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Returns the value of an app attribute.
             *
             * Create a request for the method "attributes.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Developer App Attribute name of the form:
            `organizations/{organization_id}/developers/{d
           *        eveloper_id}/apps/{app_name}/attributes/{attribute_name}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Developer App Attribute name of the form: `organizations/{organization_id}/
             * developers/{developer_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Developer App Attribute name of the form: `organizations/{organization_id}/developers/{de
           veloper_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Developer App Attribute name of the form: `organizations/{organization_id}/
             * developers/{developer_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns a list of all app attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent organization name. Must be of the form:
           *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

            private static final String REST_PATH = "v1/{+parent}/attributes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

            /**
             * Returns a list of all app attributes.
             *
             * Create a request for the method "attributes.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent organization name. Must be of the form:
           *        `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent organization name. Must be of the form:
             * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent organization name. Must be of the form:
           `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent organization name. Must be of the form:
             * `organizations/{organization_id}/developers/{developer_id}/apps/{app_name}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an app attribute
           *
           * Create a request for the method "attributes.updateDeveloperAppAttribute".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAppAttribute#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. Developer App Attribute name of the form:
            `organizations/{organization_id}/developers/{d
           *        eveloper_id}/apps/{app_name}/attributes/{attribute_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @return the request
           */
          public UpdateDeveloperAppAttribute updateDeveloperAppAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
            UpdateDeveloperAppAttribute result = new UpdateDeveloperAppAttribute(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDeveloperAppAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Updates an app attribute
             *
             * Create a request for the method "attributes.updateDeveloperAppAttribute".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppAttribute#execute()} method to invoke the remote
             * operation. <p> {@link UpdateDeveloperAppAttribute#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. Developer App Attribute name of the form:
            `organizations/{organization_id}/developers/{d
           *        eveloper_id}/apps/{app_name}/attributes/{attribute_name}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
             * @since 1.13
             */
            protected UpdateDeveloperAppAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public UpdateDeveloperAppAttribute set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDeveloperAppAttribute) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDeveloperAppAttribute setAccessToken(java.lang.String accessToken) {
              return (UpdateDeveloperAppAttribute) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDeveloperAppAttribute setAlt(java.lang.String alt) {
              return (UpdateDeveloperAppAttribute) super.setAlt(alt);
            }

            @Override
            public UpdateDeveloperAppAttribute setCallback(java.lang.String callback) {
              return (UpdateDeveloperAppAttribute) super.setCallback(callback);
            }

            @Override
            public UpdateDeveloperAppAttribute setFields(java.lang.String fields) {
              return (UpdateDeveloperAppAttribute) super.setFields(fields);
            }

            @Override
            public UpdateDeveloperAppAttribute setKey(java.lang.String key) {
              return (UpdateDeveloperAppAttribute) super.setKey(key);
            }

            @Override
            public UpdateDeveloperAppAttribute setOauthToken(java.lang.String oauthToken) {
              return (UpdateDeveloperAppAttribute) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDeveloperAppAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDeveloperAppAttribute) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDeveloperAppAttribute setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDeveloperAppAttribute) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDeveloperAppAttribute setUploadType(java.lang.String uploadType) {
              return (UpdateDeveloperAppAttribute) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDeveloperAppAttribute setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDeveloperAppAttribute) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Developer App Attribute name of the form: `organizations/{organization_id}/
             * developers/{developer_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Developer App Attribute name of the form: `organizations/{organization_id}/developers/{de
           veloper_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Developer App Attribute name of the form: `organizations/{organization_id}/
             * developers/{developer_id}/apps/{app_name}/attributes/{attribute_name}`
             */
            public UpdateDeveloperAppAttribute setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public UpdateDeveloperAppAttribute set(String parameterName, Object value) {
              return (UpdateDeveloperAppAttribute) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Creates a custom consumer key and secret for a developer app. This is particularly useful if you
           * want to migrate existing consumer keys/secrets to Edge from another system. Be aware of the
           * following size limits on API keys. By staying within these limits, you help avoid service
           * disruptions (2KB each for Consumer Key and Secret). After creating the consumer key and secret,
           * associate the key with an API product using the API UpdateDeveloperAppKey If a consumer key and
           * secret already exist, you can either keep them or delete them with this API
           * DeleteKeyFromDeveloperApp Consumer keys and secrets can contain letters, numbers, underscores,
           * and hyphens. No other special characters are allowed.
           *
           * Create a request for the method "keys.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Parent of a developer app key in the form
          `organizations/{org}/developers/{developer}/apps`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+parent}/keys";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

            /**
             * Creates a custom consumer key and secret for a developer app. This is particularly useful if
             * you want to migrate existing consumer keys/secrets to Edge from another system. Be aware of the
             * following size limits on API keys. By staying within these limits, you help avoid service
             * disruptions (2KB each for Consumer Key and Secret). After creating the consumer key and secret,
             * associate the key with an API product using the API UpdateDeveloperAppKey If a consumer key and
             * secret already exist, you can either keep them or delete them with this API
             * DeleteKeyFromDeveloperApp Consumer keys and secrets can contain letters, numbers, underscores,
             * and hyphens. No other special characters are allowed.
             *
             * Create a request for the method "keys.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Parent of a developer app key in the form
          `organizations/{org}/developers/{developer}/apps`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Parent of a developer app key in the form
             * `organizations/{org}/developers/{developer}/apps`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Parent of a developer app key in the form `organizations/{org}/developers/{developer}/apps`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Parent of a developer app key in the form
             * `organizations/{org}/developers/{developer}/apps`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a consumer key that belongs to an app, and removes all API products associated with the
           * app. Once deleted, the consumer key cannot be used to access any APIs. Note: After you delete a
           * consumer key, you may want to: 1. Create a new consumer key and secret for the developer app, and
           * subsequently add an API product to the key. 2. Delete the developer app, if it is no longer
           * required.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a developer app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Deletes a consumer key that belongs to an app, and removes all API products associated with the
             * app. Once deleted, the consumer key cannot be used to access any APIs. Note: After you delete a
             * consumer key, you may want to: 1. Create a new consumer key and secret for the developer app,
             * and subsequently add an API product to the key. 2. Delete the developer app, if it is no longer
             * required.
             *
             * Create a request for the method "keys.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of a developer app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a developer app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a developer app key
           `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a developer app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns details for a consumer key for a developer app, including the key and secret value,
           * associated API products, and other information. All times are displayed as UNIX times.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a developer app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Returns details for a consumer key for a developer app, including the key and secret value,
             * associated API products, and other information. All times are displayed as UNIX times.
             *
             * Create a request for the method "keys.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of a developer app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a developer app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a developer app key
           `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a developer app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Updates the scope of an app. Note that this API sets the scopes element under the apiProducts
           * element in the attributes of the app.
           *
           * Create a request for the method "keys.replaceDeveloperAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link ReplaceDeveloperAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Resource name of a company app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public ReplaceDeveloperAppKey replaceDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            ReplaceDeveloperAppKey result = new ReplaceDeveloperAppKey(name, content);
            initialize(result);
            return result;
          }

          public class ReplaceDeveloperAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Updates the scope of an app. Note that this API sets the scopes element under the apiProducts
             * element in the attributes of the app.
             *
             * Create a request for the method "keys.replaceDeveloperAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link ReplaceDeveloperAppKey#execute()} method to invoke the remote
             * operation. <p> {@link ReplaceDeveloperAppKey#initialize(com.google.api.client.googleapis.servic
             * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected ReplaceDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public ReplaceDeveloperAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (ReplaceDeveloperAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public ReplaceDeveloperAppKey setAccessToken(java.lang.String accessToken) {
              return (ReplaceDeveloperAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public ReplaceDeveloperAppKey setAlt(java.lang.String alt) {
              return (ReplaceDeveloperAppKey) super.setAlt(alt);
            }

            @Override
            public ReplaceDeveloperAppKey setCallback(java.lang.String callback) {
              return (ReplaceDeveloperAppKey) super.setCallback(callback);
            }

            @Override
            public ReplaceDeveloperAppKey setFields(java.lang.String fields) {
              return (ReplaceDeveloperAppKey) super.setFields(fields);
            }

            @Override
            public ReplaceDeveloperAppKey setKey(java.lang.String key) {
              return (ReplaceDeveloperAppKey) super.setKey(key);
            }

            @Override
            public ReplaceDeveloperAppKey setOauthToken(java.lang.String oauthToken) {
              return (ReplaceDeveloperAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public ReplaceDeveloperAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ReplaceDeveloperAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ReplaceDeveloperAppKey setQuotaUser(java.lang.String quotaUser) {
              return (ReplaceDeveloperAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public ReplaceDeveloperAppKey setUploadType(java.lang.String uploadType) {
              return (ReplaceDeveloperAppKey) super.setUploadType(uploadType);
            }

            @Override
            public ReplaceDeveloperAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (ReplaceDeveloperAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key
           `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public ReplaceDeveloperAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ReplaceDeveloperAppKey set(String parameterName, Object value) {
              return (ReplaceDeveloperAppKey) super.set(parameterName, value);
            }
          }
          /**
           * Adds an API product to a developer app key, enabling the app that holds the key to access the API
           * resources bundled in the API product. You can also use this API to add attributes to the key. Use
           * this API to add a new API product to an existing app. After adding the API product, you can use
           * the same key to access all API products associated with the app. You must include all existing
           * attributes, whether or not you are updating them, as well as any new attributes that you are
           * adding.
           *
           * Create a request for the method "keys.updateDeveloperAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Resource name of a company app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public UpdateDeveloperAppKey updateDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            UpdateDeveloperAppKey result = new UpdateDeveloperAppKey(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDeveloperAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Adds an API product to a developer app key, enabling the app that holds the key to access the
             * API resources bundled in the API product. You can also use this API to add attributes to the
             * key. Use this API to add a new API product to an existing app. After adding the API product,
             * you can use the same key to access all API products associated with the app. You must include
             * all existing attributes, whether or not you are updating them, as well as any new attributes
             * that you are adding.
             *
             * Create a request for the method "keys.updateDeveloperAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppKey#execute()} method to invoke the remote
             * operation. <p> {@link UpdateDeveloperAppKey#initialize(com.google.api.client.googleapis.service
             * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
           *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected UpdateDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public UpdateDeveloperAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDeveloperAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDeveloperAppKey setAccessToken(java.lang.String accessToken) {
              return (UpdateDeveloperAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDeveloperAppKey setAlt(java.lang.String alt) {
              return (UpdateDeveloperAppKey) super.setAlt(alt);
            }

            @Override
            public UpdateDeveloperAppKey setCallback(java.lang.String callback) {
              return (UpdateDeveloperAppKey) super.setCallback(callback);
            }

            @Override
            public UpdateDeveloperAppKey setFields(java.lang.String fields) {
              return (UpdateDeveloperAppKey) super.setFields(fields);
            }

            @Override
            public UpdateDeveloperAppKey setKey(java.lang.String key) {
              return (UpdateDeveloperAppKey) super.setKey(key);
            }

            @Override
            public UpdateDeveloperAppKey setOauthToken(java.lang.String oauthToken) {
              return (UpdateDeveloperAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDeveloperAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDeveloperAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDeveloperAppKey setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDeveloperAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDeveloperAppKey setUploadType(java.lang.String uploadType) {
              return (UpdateDeveloperAppKey) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDeveloperAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDeveloperAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key
           `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}`
             */
            public UpdateDeveloperAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Set the action to approve or revoke. */
            @com.google.api.client.util.Key
            private java.lang.String action;

            /** Set the action to approve or revoke.
             */
            public java.lang.String getAction() {
              return action;
            }

            /** Set the action to approve or revoke. */
            public UpdateDeveloperAppKey setAction(java.lang.String action) {
              this.action = action;
              return this;
            }

            @Override
            public UpdateDeveloperAppKey set(String parameterName, Object value) {
              return (UpdateDeveloperAppKey) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Apiproducts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Apiproducts apiproducts() {
            return new Apiproducts();
          }

          /**
           * The "apiproducts" collection of methods.
           */
          public class Apiproducts {

            /**
             * Removes an API product from an app's consumer key, and thereby renders the app unable to access
             * the API resources defined in that API product. Note : The consumer key itself still exists after
             * this call. Only the association of the key with the API product is removed.
             *
             * Create a request for the method "apiproducts.delete".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Resource name of a api product in a developer app key
             *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}
             *        `
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Removes an API product from an app's consumer key, and thereby renders the app unable to access
               * the API resources defined in that API product. Note : The consumer key itself still exists
               * after this call. Only the association of the key with the API product is removed.
               *
               * Create a request for the method "apiproducts.delete".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Resource name of a api product in a developer app key
             *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}
             *        `
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Resource name of a api product in a developer app key `organizations/{org}/develope
               * rs/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name of a api product in a developer app key
             `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Resource name of a api product in a developer app key `organizations/{org}/develope
               * rs/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Approve or Revoke the key for a given api product.
             *
             * Create a request for the method "apiproducts.updateDeveloperAppKeyApiProduct".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppKeyApiProduct#execute()} method to invoke the
             * remote operation.
             *
             * @param name Resource name of a api product in a developer app key
             *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}
             *        `
             * @return the request
             */
            public UpdateDeveloperAppKeyApiProduct updateDeveloperAppKeyApiProduct(java.lang.String name) throws java.io.IOException {
              UpdateDeveloperAppKeyApiProduct result = new UpdateDeveloperAppKeyApiProduct(name);
              initialize(result);
              return result;
            }

            public class UpdateDeveloperAppKeyApiProduct extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Approve or Revoke the key for a given api product.
               *
               * Create a request for the method "apiproducts.updateDeveloperAppKeyApiProduct".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link UpdateDeveloperAppKeyApiProduct#execute()} method to invoke the
               * remote operation. <p> {@link UpdateDeveloperAppKeyApiProduct#initialize(com.google.api.client.g
               * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param name Resource name of a api product in a developer app key
             *        `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}
             *        `
               * @since 1.13
               */
              protected UpdateDeveloperAppKeyApiProduct(java.lang.String name) {
                super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct set$Xgafv(java.lang.String $Xgafv) {
                return (UpdateDeveloperAppKeyApiProduct) super.set$Xgafv($Xgafv);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setAccessToken(java.lang.String accessToken) {
                return (UpdateDeveloperAppKeyApiProduct) super.setAccessToken(accessToken);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setAlt(java.lang.String alt) {
                return (UpdateDeveloperAppKeyApiProduct) super.setAlt(alt);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setCallback(java.lang.String callback) {
                return (UpdateDeveloperAppKeyApiProduct) super.setCallback(callback);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setFields(java.lang.String fields) {
                return (UpdateDeveloperAppKeyApiProduct) super.setFields(fields);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setKey(java.lang.String key) {
                return (UpdateDeveloperAppKeyApiProduct) super.setKey(key);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setOauthToken(java.lang.String oauthToken) {
                return (UpdateDeveloperAppKeyApiProduct) super.setOauthToken(oauthToken);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (UpdateDeveloperAppKeyApiProduct) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setQuotaUser(java.lang.String quotaUser) {
                return (UpdateDeveloperAppKeyApiProduct) super.setQuotaUser(quotaUser);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setUploadType(java.lang.String uploadType) {
                return (UpdateDeveloperAppKeyApiProduct) super.setUploadType(uploadType);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setUploadProtocol(java.lang.String uploadProtocol) {
                return (UpdateDeveloperAppKeyApiProduct) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Resource name of a api product in a developer app key `organizations/{org}/develope
               * rs/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name of a api product in a developer app key
             `organizations/{org}/developers/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Resource name of a api product in a developer app key `organizations/{org}/develope
               * rs/{developer}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public UpdateDeveloperAppKeyApiProduct setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** Set the action to approve or revoke. */
              @com.google.api.client.util.Key
              private java.lang.String action;

              /** Set the action to approve or revoke.
               */
              public java.lang.String getAction() {
                return action;
              }

              /** Set the action to approve or revoke. */
              public UpdateDeveloperAppKeyApiProduct setAction(java.lang.String action) {
                this.action = action;
                return this;
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct set(String parameterName, Object value) {
                return (UpdateDeveloperAppKeyApiProduct) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Create collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Create.List request = apigee.create().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Create create() {
            return new Create();
          }

          /**
           * The "create" collection of methods.
           */
          public class Create {

            /**
             * Creates a custom consumer key and secret for a developer app. This is particularly useful if you
             * want to migrate existing consumer keys/secrets to Edge from another system. Be aware of the
             * following size limits on API keys. By staying within these limits, you help avoid service
             * disruptions (2KB each for Consumer Key and Secret). After creating the consumer key and secret,
             * associate the key with an API product using the API UpdateDeveloperAppKey If a consumer key and
             * secret already exist, you can either keep them or delete them with this API
             * DeleteKeyFromDeveloperApp Consumer keys and secrets can contain letters, numbers, underscores,
             * and hyphens. No other special characters are allowed.
             *
             * Create a request for the method "create.create".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation.
             *
             * @param parent Parent of a developer app key in the form
            `organizations/{org}/developers/{developer}/apps`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @return the request
             */
            public CreateRequest create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
              CreateRequest result = new CreateRequest(parent, content);
              initialize(result);
              return result;
            }

            public class CreateRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

              private static final String REST_PATH = "v1/{+parent}/keys/create";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

              /**
               * Creates a custom consumer key and secret for a developer app. This is particularly useful if
               * you want to migrate existing consumer keys/secrets to Edge from another system. Be aware of the
               * following size limits on API keys. By staying within these limits, you help avoid service
               * disruptions (2KB each for Consumer Key and Secret). After creating the consumer key and secret,
               * associate the key with an API product using the API UpdateDeveloperAppKey If a consumer key and
               * secret already exist, you can either keep them or delete them with this API
               * DeleteKeyFromDeveloperApp Consumer keys and secrets can contain letters, numbers, underscores,
               * and hyphens. No other special characters are allowed.
               *
               * Create a request for the method "create.create".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation. <p>
               * {@link CreateRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
               * equest)} must be called to initialize this instance immediately after invoking the constructor.
               * </p>
               *
               * @param parent Parent of a developer app key in the form
            `organizations/{org}/developers/{developer}/apps`
               * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
               * @since 1.13
               */
              protected CreateRequest(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
                super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
                }
              }

              @Override
              public CreateRequest set$Xgafv(java.lang.String $Xgafv) {
                return (CreateRequest) super.set$Xgafv($Xgafv);
              }

              @Override
              public CreateRequest setAccessToken(java.lang.String accessToken) {
                return (CreateRequest) super.setAccessToken(accessToken);
              }

              @Override
              public CreateRequest setAlt(java.lang.String alt) {
                return (CreateRequest) super.setAlt(alt);
              }

              @Override
              public CreateRequest setCallback(java.lang.String callback) {
                return (CreateRequest) super.setCallback(callback);
              }

              @Override
              public CreateRequest setFields(java.lang.String fields) {
                return (CreateRequest) super.setFields(fields);
              }

              @Override
              public CreateRequest setKey(java.lang.String key) {
                return (CreateRequest) super.setKey(key);
              }

              @Override
              public CreateRequest setOauthToken(java.lang.String oauthToken) {
                return (CreateRequest) super.setOauthToken(oauthToken);
              }

              @Override
              public CreateRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (CreateRequest) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public CreateRequest setQuotaUser(java.lang.String quotaUser) {
                return (CreateRequest) super.setQuotaUser(quotaUser);
              }

              @Override
              public CreateRequest setUploadType(java.lang.String uploadType) {
                return (CreateRequest) super.setUploadType(uploadType);
              }

              @Override
              public CreateRequest setUploadProtocol(java.lang.String uploadProtocol) {
                return (CreateRequest) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Parent of a developer app key in the form
               * `organizations/{org}/developers/{developer}/apps`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Parent of a developer app key in the form `organizations/{org}/developers/{developer}/apps`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Parent of a developer app key in the form
               * `organizations/{org}/developers/{developer}/apps`
               */
              public CreateRequest setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public CreateRequest set(String parameterName, Object value) {
                return (CreateRequest) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Attributes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attributes attributes() {
        return new Attributes();
      }

      /**
       * The "attributes" collection of methods.
       */
      public class Attributes {

        /**
         * Deletes an attribute of a Developer resource Apigee recommends using the developer email in the
         * API call. Developer ID is generated internally and is not guaranteed to stay the same over time.
         * For example, Apigee could change the format or length of this variable.
         *
         * Create a request for the method "attributes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the attribute for a developer.
        Must be of the form
         *        `organizations/{org}/developers/{developer}/attributes/{attribute}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Deletes an attribute of a Developer resource Apigee recommends using the developer email in the
           * API call. Developer ID is generated internally and is not guaranteed to stay the same over
           * time. For example, Apigee could change the format or length of this variable.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the attribute for a developer.
        Must be of the form
         *        `organizations/{org}/developers/{developer}/attributes/{attribute}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the attribute for a developer. Must be of the form
           * `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the attribute for a developer. Must be of the form
         `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the attribute for a developer. Must be of the form
           * `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Get developer attributes. Apigee recommends using the developer email in the API call. Developer
         * ID is generated internally and is not guaranteed to stay the same over time. For example, Apigee
         * could change the format or length of this variable.
         *
         * Create a request for the method "attributes.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the attribute for a developer.
        Must be of the form
         *        `organizations/{org}/developers/{developer}/attributes/{attribute}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Get developer attributes. Apigee recommends using the developer email in the API call.
           * Developer ID is generated internally and is not guaranteed to stay the same over time. For
           * example, Apigee could change the format or length of this variable.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the attribute for a developer.
        Must be of the form
         *        `organizations/{org}/developers/{developer}/attributes/{attribute}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the attribute for a developer. Must be of the form
           * `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the attribute for a developer. Must be of the form
         `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the attribute for a developer. Must be of the form
           * `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of all developer attributes. Apigee recommends using the developer email in the
         * API call. Developer ID is generated internally and is not guaranteed to stay the same over time.
         * For example, Apigee could change the format or length of this variable.
         *
         * Create a request for the method "attributes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent developer for which attributes are being listed.
        Must be of the form
         *        `organizations/{org}/developers/{developer}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+parent}/attributes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Returns a list of all developer attributes. Apigee recommends using the developer email in the
           * API call. Developer ID is generated internally and is not guaranteed to stay the same over
           * time. For example, Apigee could change the format or length of this variable.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent developer for which attributes are being listed.
        Must be of the form
         *        `organizations/{org}/developers/{developer}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent developer for which attributes are being listed. Must be of the
           * form `organizations/{org}/developers/{developer}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent developer for which attributes are being listed. Must be of the form
         `organizations/{org}/developers/{developer}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent developer for which attributes are being listed. Must be of the
           * form `organizations/{org}/developers/{developer}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update developer attribute. OAuth access tokens and Key Management Service (KMS) entities (Apps,
         * Developers, API Products) are cached for 180 seconds (current default). Any custom attributes
         * associated with entities also get cached for at least 180 seconds after entity is accessed during
         * runtime. This also means the ExpiresIn element on the OAuthV2 policy won't be able to expire an
         * access token in less than 180 seconds. Apigee recommends using the developer email in the API
         * call. Developer ID is generated internally and is not guaranteed to stay the same over time. For
         * example, Apigee could change the format or length of this variable.
         *
         * Create a request for the method "attributes.updateDeveloperAttribute".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDeveloperAttribute#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the attribute for a developer.
        Must be of the form
         *        `organizations/{org}/developers/{developer}/attributes/{attribute}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
         * @return the request
         */
        public UpdateDeveloperAttribute updateDeveloperAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
          UpdateDeveloperAttribute result = new UpdateDeveloperAttribute(name, content);
          initialize(result);
          return result;
        }

        public class UpdateDeveloperAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Update developer attribute. OAuth access tokens and Key Management Service (KMS) entities
           * (Apps, Developers, API Products) are cached for 180 seconds (current default). Any custom
           * attributes associated with entities also get cached for at least 180 seconds after entity is
           * accessed during runtime. This also means the ExpiresIn element on the OAuthV2 policy won't be
           * able to expire an access token in less than 180 seconds. Apigee recommends using the developer
           * email in the API call. Developer ID is generated internally and is not guaranteed to stay the
           * same over time. For example, Apigee could change the format or length of this variable.
           *
           * Create a request for the method "attributes.updateDeveloperAttribute".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAttribute#execute()} method to invoke the remote
           * operation. <p> {@link UpdateDeveloperAttribute#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the attribute for a developer.
        Must be of the form
         *        `organizations/{org}/developers/{developer}/attributes/{attribute}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @since 1.13
           */
          protected UpdateDeveloperAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public UpdateDeveloperAttribute set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateDeveloperAttribute) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateDeveloperAttribute setAccessToken(java.lang.String accessToken) {
            return (UpdateDeveloperAttribute) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateDeveloperAttribute setAlt(java.lang.String alt) {
            return (UpdateDeveloperAttribute) super.setAlt(alt);
          }

          @Override
          public UpdateDeveloperAttribute setCallback(java.lang.String callback) {
            return (UpdateDeveloperAttribute) super.setCallback(callback);
          }

          @Override
          public UpdateDeveloperAttribute setFields(java.lang.String fields) {
            return (UpdateDeveloperAttribute) super.setFields(fields);
          }

          @Override
          public UpdateDeveloperAttribute setKey(java.lang.String key) {
            return (UpdateDeveloperAttribute) super.setKey(key);
          }

          @Override
          public UpdateDeveloperAttribute setOauthToken(java.lang.String oauthToken) {
            return (UpdateDeveloperAttribute) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateDeveloperAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateDeveloperAttribute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateDeveloperAttribute setQuotaUser(java.lang.String quotaUser) {
            return (UpdateDeveloperAttribute) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateDeveloperAttribute setUploadType(java.lang.String uploadType) {
            return (UpdateDeveloperAttribute) super.setUploadType(uploadType);
          }

          @Override
          public UpdateDeveloperAttribute setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateDeveloperAttribute) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the attribute for a developer. Must be of the form
           * `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the attribute for a developer. Must be of the form
         `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the attribute for a developer. Must be of the form
           * `organizations/{org}/developers/{developer}/attributes/{attribute}`
           */
          public UpdateDeveloperAttribute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateDeveloperAttribute set(String parameterName, Object value) {
            return (UpdateDeveloperAttribute) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Environments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Environments.List request = apigee.environments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Environments environments() {
      return new Environments();
    }

    /**
     * The "environments" collection of methods.
     */
    public class Environments {

      /**
       * Creates an Environment in the specified organization.
       *
       * Create a request for the method "environments.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the Environment will
      be created. Must be of the
       *        form `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/environments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an Environment in the specified organization.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the Environment will
      be created. Must be of the
       *        form `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the Environment will be created. Must
         * be of the form `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the Environment will be created. Must be of the
       form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the Environment will be created. Must
         * be of the form `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The ID to give the new Environment. The Environment ID may alternatively be
         * specified in the request body in the environment_id field.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Optional. The ID to give the new Environment. The Environment ID may alternatively be specified in
       the request body in the environment_id field.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Optional. The ID to give the new Environment. The Environment ID may alternatively be
         * specified in the request body in the environment_id field.
         */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an Environment from an organization. Returns the deleted Environment resource.
       *
       * Create a request for the method "environments.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment to delete. Must be
      of the form
       *        `organizations/{org}/environments/{env}`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Deletes an Environment from an organization. Returns the deleted Environment resource.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Environment to delete. Must be
      of the form
       *        `organizations/{org}/environments/{env}`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment to delete. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment to delete. Must be of the form
       `organizations/{org}/environments/{env}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment to delete. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an Environment.
       *
       * Create a request for the method "environments.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment to get. Must be of the form
       *        `organizations/{org}/environments/{env}`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Gets an Environment.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Environment to get. Must be of the form
       *        `organizations/{org}/environments/{env}`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment to get. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment to get. Must be of the form
       `organizations/{org}/environments/{env}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment to get. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Get Google Cloud Storage (GCS) signed url for specific organization and environment. Collection
       * agent uses this signed url to upload data to GCS bucket.
       *
       * Create a request for the method "environments.getDatalocation".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDatalocation#execute()} method to invoke the remote operation.
       *
       * @param name Required. The parent organization and environment names. Must be of the
      form
       *        `organizations/{org}/environments/{env}/datalocation`.
       * @return the request
       */
      public GetDatalocation getDatalocation(java.lang.String name) throws java.io.IOException {
        GetDatalocation result = new GetDatalocation(name);
        initialize(result);
        return result;
      }

      public class GetDatalocation extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataLocation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/datalocation$");

        /**
         * Get Google Cloud Storage (GCS) signed url for specific organization and environment. Collection
         * agent uses this signed url to upload data to GCS bucket.
         *
         * Create a request for the method "environments.getDatalocation".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDatalocation#execute()} method to invoke the remote operation.
         * <p> {@link GetDatalocation#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. The parent organization and environment names. Must be of the
      form
       *        `organizations/{org}/environments/{env}/datalocation`.
         * @since 1.13
         */
        protected GetDatalocation(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataLocation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/datalocation$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDatalocation set$Xgafv(java.lang.String $Xgafv) {
          return (GetDatalocation) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDatalocation setAccessToken(java.lang.String accessToken) {
          return (GetDatalocation) super.setAccessToken(accessToken);
        }

        @Override
        public GetDatalocation setAlt(java.lang.String alt) {
          return (GetDatalocation) super.setAlt(alt);
        }

        @Override
        public GetDatalocation setCallback(java.lang.String callback) {
          return (GetDatalocation) super.setCallback(callback);
        }

        @Override
        public GetDatalocation setFields(java.lang.String fields) {
          return (GetDatalocation) super.setFields(fields);
        }

        @Override
        public GetDatalocation setKey(java.lang.String key) {
          return (GetDatalocation) super.setKey(key);
        }

        @Override
        public GetDatalocation setOauthToken(java.lang.String oauthToken) {
          return (GetDatalocation) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDatalocation setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDatalocation) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDatalocation setQuotaUser(java.lang.String quotaUser) {
          return (GetDatalocation) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDatalocation setUploadType(java.lang.String uploadType) {
          return (GetDatalocation) super.setUploadType(uploadType);
        }

        @Override
        public GetDatalocation setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDatalocation) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization and environment names. Must be of the form
         * `organizations/{org}/environments/{env}/datalocation`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The parent organization and environment names. Must be of the form
       `organizations/{org}/environments/{env}/datalocation`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The parent organization and environment names. Must be of the form
         * `organizations/{org}/environments/{env}/datalocation`.
         */
        public GetDatalocation setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/datalocation$");
          }
          this.name = name;
          return this;
        }

        /** Content-Type for uploaded file. */
        @com.google.api.client.util.Key
        private java.lang.String contentType;

        /** Content-Type for uploaded file.
         */
        public java.lang.String getContentType() {
          return contentType;
        }

        /** Content-Type for uploaded file. */
        public GetDatalocation setContentType(java.lang.String contentType) {
          this.contentType = contentType;
          return this;
        }

        /** Required. Dataset could be one of `api`, `mint`, `trace` and `event` */
        @com.google.api.client.util.Key
        private java.lang.String dataset;

        /** Required. Dataset could be one of `api`, `mint`, `trace` and `event`
         */
        public java.lang.String getDataset() {
          return dataset;
        }

        /** Required. Dataset could be one of `api`, `mint`, `trace` and `event` */
        public GetDatalocation setDataset(java.lang.String dataset) {
          this.dataset = dataset;
          return this;
        }

        /** Required. Relative path to the GCS bucket */
        @com.google.api.client.util.Key
        private java.lang.String relativeFilePath;

        /** Required. Relative path to the GCS bucket
         */
        public java.lang.String getRelativeFilePath() {
          return relativeFilePath;
        }

        /** Required. Relative path to the GCS bucket */
        public GetDatalocation setRelativeFilePath(java.lang.String relativeFilePath) {
          this.relativeFilePath = relativeFilePath;
          return this;
        }

        /** Required. Repository name */
        @com.google.api.client.util.Key
        private java.lang.String repo;

        /** Required. Repository name
         */
        public java.lang.String getRepo() {
          return repo;
        }

        /** Required. Repository name */
        public GetDatalocation setRepo(java.lang.String repo) {
          this.repo = repo;
          return this;
        }

        @Override
        public GetDatalocation set(String parameterName, Object value) {
          return (GetDatalocation) super.set(parameterName, value);
        }
      }
      /**
       * Gets the debug mask singleton resource for an Environment.
       *
       * Create a request for the method "environments.getDebugmask".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDebugmask#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment debug mask to get. Must be of the
      form
       *        `organizations/{org}/environments/{env}/debugmask`.
       * @return the request
       */
      public GetDebugmask getDebugmask(java.lang.String name) throws java.io.IOException {
        GetDebugmask result = new GetDebugmask(name);
        initialize(result);
        return result;
      }

      public class GetDebugmask extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/debugmask$");

        /**
         * Gets the debug mask singleton resource for an Environment.
         *
         * Create a request for the method "environments.getDebugmask".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDebugmask#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetDebugmask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Environment debug mask to get. Must be of the
      form
       *        `organizations/{org}/environments/{env}/debugmask`.
         * @since 1.13
         */
        protected GetDebugmask(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDebugmask set$Xgafv(java.lang.String $Xgafv) {
          return (GetDebugmask) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDebugmask setAccessToken(java.lang.String accessToken) {
          return (GetDebugmask) super.setAccessToken(accessToken);
        }

        @Override
        public GetDebugmask setAlt(java.lang.String alt) {
          return (GetDebugmask) super.setAlt(alt);
        }

        @Override
        public GetDebugmask setCallback(java.lang.String callback) {
          return (GetDebugmask) super.setCallback(callback);
        }

        @Override
        public GetDebugmask setFields(java.lang.String fields) {
          return (GetDebugmask) super.setFields(fields);
        }

        @Override
        public GetDebugmask setKey(java.lang.String key) {
          return (GetDebugmask) super.setKey(key);
        }

        @Override
        public GetDebugmask setOauthToken(java.lang.String oauthToken) {
          return (GetDebugmask) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDebugmask setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDebugmask) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDebugmask setQuotaUser(java.lang.String quotaUser) {
          return (GetDebugmask) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDebugmask setUploadType(java.lang.String uploadType) {
          return (GetDebugmask) super.setUploadType(uploadType);
        }

        @Override
        public GetDebugmask setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDebugmask) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment debug mask to get. Must be of the form
         * `organizations/{org}/environments/{env}/debugmask`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment debug mask to get. Must be of the form
       `organizations/{org}/environments/{env}/debugmask`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment debug mask to get. Must be of the form
         * `organizations/{org}/environments/{env}/debugmask`.
         */
        public GetDebugmask setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDebugmask set(String parameterName, Object value) {
          return (GetDebugmask) super.set(parameterName, value);
        }
      }
      /**
       * Gets the deployed config (aka env.json) for an Environment.
       *
       * Create a request for the method "environments.getDeployedConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDeployedConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment deployed config resource. Must be of
      the form
       *        `organizations/{org}/environments/{env}/deployedConfig`.
       * @return the request
       */
      public GetDeployedConfig getDeployedConfig(java.lang.String name) throws java.io.IOException {
        GetDeployedConfig result = new GetDeployedConfig(name);
        initialize(result);
        return result;
      }

      public class GetDeployedConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployedConfig$");

        /**
         * Gets the deployed config (aka env.json) for an Environment.
         *
         * Create a request for the method "environments.getDeployedConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDeployedConfig#execute()} method to invoke the remote operation.
         * <p> {@link GetDeployedConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. The name of the Environment deployed config resource. Must be of
      the form
       *        `organizations/{org}/environments/{env}/deployedConfig`.
         * @since 1.13
         */
        protected GetDeployedConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/deployedConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDeployedConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetDeployedConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDeployedConfig setAccessToken(java.lang.String accessToken) {
          return (GetDeployedConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetDeployedConfig setAlt(java.lang.String alt) {
          return (GetDeployedConfig) super.setAlt(alt);
        }

        @Override
        public GetDeployedConfig setCallback(java.lang.String callback) {
          return (GetDeployedConfig) super.setCallback(callback);
        }

        @Override
        public GetDeployedConfig setFields(java.lang.String fields) {
          return (GetDeployedConfig) super.setFields(fields);
        }

        @Override
        public GetDeployedConfig setKey(java.lang.String key) {
          return (GetDeployedConfig) super.setKey(key);
        }

        @Override
        public GetDeployedConfig setOauthToken(java.lang.String oauthToken) {
          return (GetDeployedConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDeployedConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDeployedConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDeployedConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetDeployedConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDeployedConfig setUploadType(java.lang.String uploadType) {
          return (GetDeployedConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetDeployedConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDeployedConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment deployed config resource. Must be of the form
         * `organizations/{org}/environments/{env}/deployedConfig`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment deployed config resource. Must be of the form
       `organizations/{org}/environments/{env}/deployedConfig`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment deployed config resource. Must be of the form
         * `organizations/{org}/environments/{env}/deployedConfig`.
         */
        public GetDeployedConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/deployedConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDeployedConfig set(String parameterName, Object value) {
          return (GetDeployedConfig) super.set(parameterName, value);
        }
      }
      /**
       * Gets the IAM policy on an Environment. Callers must have the permission
       * apigee.environments.getIamPolicy.
       *
       * Create a request for the method "environments.getIamPolicy".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Gets the IAM policy on an Environment. Callers must have the permission
         * apigee.environments.getIamPolicy.
         *
         * Create a request for the method "environments.getIamPolicy".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /**
         * Optional. The policy format version to be returned.
         *
         * Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
         *
         * Requests for policies with any conditional bindings must specify version 3. Policies
         * without any conditional bindings may specify any valid value or leave the field unset.
         */
        @com.google.api.client.util.Key("options.requestedPolicyVersion")
        private java.lang.Integer optionsRequestedPolicyVersion;

        /** Optional. The policy format version to be returned.

       Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.

       Requests for policies with any conditional bindings must specify version 3. Policies without any
       conditional bindings may specify any valid value or leave the field unset.
         */
        public java.lang.Integer getOptionsRequestedPolicyVersion() {
          return optionsRequestedPolicyVersion;
        }

        /**
         * Optional. The policy format version to be returned.
         *
         * Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
         *
         * Requests for policies with any conditional bindings must specify version 3. Policies
         * without any conditional bindings may specify any valid value or leave the field unset.
         */
        public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
          this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Lists all Environments in an organization.
       *
       * Create a request for the method "environments.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name. Must be of the form
      `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.List.> {

        private static final String REST_PATH = "v1/{+parent}/environments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all Environments in an organization.
         *
         * Create a request for the method "environments.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name. Must be of the form
      `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.List..class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name. Must be of the form `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name. Must be of the form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name. Must be of the form `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Sets the IAM policy on an Environment, if the policy already exists it will be replaced. Callers
       * must have the permission apigee.environments.setIamPolicy.
       *
       * Create a request for the method "environments.setIamPolicy".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Sets the IAM policy on an Environment, if the policy already exists it will be replaced.
         * Callers must have the permission apigee.environments.setIamPolicy.
         *
         * Create a request for the method "environments.setIamPolicy".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation. <p>
         * {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Creates a subscription for the environment's pubsub topic. The server will assign a random name
       * for this subscription. The "name" and "push_config" must *not* be specified.
       *
       * Create a request for the method "environments.subscribe".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the environment to subscribe. Must be of the form
       *        `organizations/{org}/environments/{env}`.
       * @return the request
       */
      public Subscribe subscribe(java.lang.String parent) throws java.io.IOException {
        Subscribe result = new Subscribe(parent);
        initialize(result);
        return result;
      }

      public class Subscribe extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription> {

        private static final String REST_PATH = "v1/{+parent}:subscribe";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Creates a subscription for the environment's pubsub topic. The server will assign a random name
         * for this subscription. The "name" and "push_config" must *not* be specified.
         *
         * Create a request for the method "environments.subscribe".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation. <p>
         * {@link
         * Subscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the environment to subscribe. Must be of the form
       *        `organizations/{org}/environments/{env}`.
         * @since 1.13
         */
        protected Subscribe(java.lang.String parent) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Subscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Subscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Subscribe setAccessToken(java.lang.String accessToken) {
          return (Subscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Subscribe setAlt(java.lang.String alt) {
          return (Subscribe) super.setAlt(alt);
        }

        @Override
        public Subscribe setCallback(java.lang.String callback) {
          return (Subscribe) super.setCallback(callback);
        }

        @Override
        public Subscribe setFields(java.lang.String fields) {
          return (Subscribe) super.setFields(fields);
        }

        @Override
        public Subscribe setKey(java.lang.String key) {
          return (Subscribe) super.setKey(key);
        }

        @Override
        public Subscribe setOauthToken(java.lang.String oauthToken) {
          return (Subscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Subscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Subscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Subscribe setQuotaUser(java.lang.String quotaUser) {
          return (Subscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Subscribe setUploadType(java.lang.String uploadType) {
          return (Subscribe) super.setUploadType(uploadType);
        }

        @Override
        public Subscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Subscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the environment to subscribe. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the environment to subscribe. Must be of the form
       `organizations/{org}/environments/{env}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the environment to subscribe. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        public Subscribe setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Subscribe set(String parameterName, Object value) {
          return (Subscribe) super.set(parameterName, value);
        }
      }
      /**
       * Tests the permissions of a user on an Environment, and returns a subset of permissions that the
       * user has on the Environment If the environment does not exist an empty permission set is returned
       * (a NOT_FOUND error is not returned).
       *
       * Create a request for the method "environments.testIamPermissions".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse> {

        private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Tests the permissions of a user on an Environment, and returns a subset of permissions that the
         * user has on the Environment If the environment does not exist an empty permission set is
         * returned (a NOT_FOUND error is not returned).
         *
         * Create a request for the method "environments.testIamPermissions".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See the operation
       documentation for the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a subscription for the environment's pubsub topic.
       *
       * Create a request for the method "environments.unsubscribe".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the environment to subscribe. Must be of the form
       *        `organizations/{org}/environments/{env}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription}
       * @return the request
       */
      public Unsubscribe unsubscribe(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription content) throws java.io.IOException {
        Unsubscribe result = new Unsubscribe(parent, content);
        initialize(result);
        return result;
      }

      public class Unsubscribe extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+parent}:unsubscribe";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Deletes a subscription for the environment's pubsub topic.
         *
         * Create a request for the method "environments.unsubscribe".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation. <p>
         * {@link
         * Unsubscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the environment to subscribe. Must be of the form
       *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription}
         * @since 1.13
         */
        protected Unsubscribe(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Unsubscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Unsubscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Unsubscribe setAccessToken(java.lang.String accessToken) {
          return (Unsubscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Unsubscribe setAlt(java.lang.String alt) {
          return (Unsubscribe) super.setAlt(alt);
        }

        @Override
        public Unsubscribe setCallback(java.lang.String callback) {
          return (Unsubscribe) super.setCallback(callback);
        }

        @Override
        public Unsubscribe setFields(java.lang.String fields) {
          return (Unsubscribe) super.setFields(fields);
        }

        @Override
        public Unsubscribe setKey(java.lang.String key) {
          return (Unsubscribe) super.setKey(key);
        }

        @Override
        public Unsubscribe setOauthToken(java.lang.String oauthToken) {
          return (Unsubscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Unsubscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Unsubscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Unsubscribe setQuotaUser(java.lang.String quotaUser) {
          return (Unsubscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Unsubscribe setUploadType(java.lang.String uploadType) {
          return (Unsubscribe) super.setUploadType(uploadType);
        }

        @Override
        public Unsubscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Unsubscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the environment to subscribe. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the environment to subscribe. Must be of the form
       `organizations/{org}/environments/{env}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the environment to subscribe. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        public Unsubscribe setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Unsubscribe set(String parameterName, Object value) {
          return (Unsubscribe) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing Environment. Note that this operation has PUT semantics despite using POST;
       * it will replace the entirety of the existing Environment with the resource in the request body. A
       * PUT mapping for the same operation at the same URI is also defined.
       *
       * Create a request for the method "environments.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment to replace. Must be of the form
       *        `organizations/{org}/environments/{env}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing Environment. Note that this operation has PUT semantics despite using POST;
         * it will replace the entirety of the existing Environment with the resource in the request body.
         * A PUT mapping for the same operation at the same URI is also defined.
         *
         * Create a request for the method "environments.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Environment to replace. Must be of the form
       *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment to replace. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment to replace. Must be of the form
       `organizations/{org}/environments/{env}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment to replace. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }
      /**
       * Updates the debug mask singleton resource for an environment.
       *
       * Create a request for the method "environments.updateDebugmask".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateDebugmask#execute()} method to invoke the remote operation.
       *
       * @param name The DebugMask resource name.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask}
       * @return the request
       */
      public UpdateDebugmask updateDebugmask(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask content) throws java.io.IOException {
        UpdateDebugmask result = new UpdateDebugmask(name, content);
        initialize(result);
        return result;
      }

      public class UpdateDebugmask extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/debugmask$");

        /**
         * Updates the debug mask singleton resource for an environment.
         *
         * Create a request for the method "environments.updateDebugmask".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDebugmask#execute()} method to invoke the remote operation.
         * <p> {@link UpdateDebugmask#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name The DebugMask resource name.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask}
         * @since 1.13
         */
        protected UpdateDebugmask(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
        }

        @Override
        public UpdateDebugmask set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateDebugmask) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateDebugmask setAccessToken(java.lang.String accessToken) {
          return (UpdateDebugmask) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateDebugmask setAlt(java.lang.String alt) {
          return (UpdateDebugmask) super.setAlt(alt);
        }

        @Override
        public UpdateDebugmask setCallback(java.lang.String callback) {
          return (UpdateDebugmask) super.setCallback(callback);
        }

        @Override
        public UpdateDebugmask setFields(java.lang.String fields) {
          return (UpdateDebugmask) super.setFields(fields);
        }

        @Override
        public UpdateDebugmask setKey(java.lang.String key) {
          return (UpdateDebugmask) super.setKey(key);
        }

        @Override
        public UpdateDebugmask setOauthToken(java.lang.String oauthToken) {
          return (UpdateDebugmask) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateDebugmask setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateDebugmask) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateDebugmask setQuotaUser(java.lang.String quotaUser) {
          return (UpdateDebugmask) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateDebugmask setUploadType(java.lang.String uploadType) {
          return (UpdateDebugmask) super.setUploadType(uploadType);
        }

        @Override
        public UpdateDebugmask setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateDebugmask) super.setUploadProtocol(uploadProtocol);
        }

        /** The DebugMask resource name. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The DebugMask resource name.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The DebugMask resource name. */
        public UpdateDebugmask setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
          this.name = name;
          return this;
        }

        /**
         * If true, repeated fields covered by the update_mask will replace the existing values. The
         * default behavior is to append.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean replaceRepeatedFields;

        /** If true, repeated fields covered by the update_mask will replace the existing values. The default
       behavior is to append.
         */
        public java.lang.Boolean getReplaceRepeatedFields() {
          return replaceRepeatedFields;
        }

        /**
         * If true, repeated fields covered by the update_mask will replace the existing values. The
         * default behavior is to append.
         */
        public UpdateDebugmask setReplaceRepeatedFields(java.lang.Boolean replaceRepeatedFields) {
          this.replaceRepeatedFields = replaceRepeatedFields;
          return this;
        }

        /** Field mask to support partial updates. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Field mask to support partial updates.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Field mask to support partial updates. */
        public UpdateDebugmask setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateDebugmask set(String parameterName, Object value) {
          return (UpdateDebugmask) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing Environment. Note that this operation has PUT semantics despite using POST;
       * it will replace the entirety of the existing Environment with the resource in the request body. A
       * PUT mapping for the same operation at the same URI is also defined.
       *
       * Create a request for the method "environments.updateEnvironment".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateEnvironment#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment to replace. Must be of the form
       *        `organizations/{org}/environments/{env}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public UpdateEnvironment updateEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        UpdateEnvironment result = new UpdateEnvironment(name, content);
        initialize(result);
        return result;
      }

      public class UpdateEnvironment extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing Environment. Note that this operation has PUT semantics despite using POST;
         * it will replace the entirety of the existing Environment with the resource in the request body.
         * A PUT mapping for the same operation at the same URI is also defined.
         *
         * Create a request for the method "environments.updateEnvironment".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateEnvironment#execute()} method to invoke the remote operation.
         * <p> {@link UpdateEnvironment#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. The name of the Environment to replace. Must be of the form
       *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected UpdateEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public UpdateEnvironment set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateEnvironment) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateEnvironment setAccessToken(java.lang.String accessToken) {
          return (UpdateEnvironment) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateEnvironment setAlt(java.lang.String alt) {
          return (UpdateEnvironment) super.setAlt(alt);
        }

        @Override
        public UpdateEnvironment setCallback(java.lang.String callback) {
          return (UpdateEnvironment) super.setCallback(callback);
        }

        @Override
        public UpdateEnvironment setFields(java.lang.String fields) {
          return (UpdateEnvironment) super.setFields(fields);
        }

        @Override
        public UpdateEnvironment setKey(java.lang.String key) {
          return (UpdateEnvironment) super.setKey(key);
        }

        @Override
        public UpdateEnvironment setOauthToken(java.lang.String oauthToken) {
          return (UpdateEnvironment) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateEnvironment setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateEnvironment) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateEnvironment setQuotaUser(java.lang.String quotaUser) {
          return (UpdateEnvironment) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateEnvironment setUploadType(java.lang.String uploadType) {
          return (UpdateEnvironment) super.setUploadType(uploadType);
        }

        @Override
        public UpdateEnvironment setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateEnvironment) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment to replace. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment to replace. Must be of the form
       `organizations/{org}/environments/{env}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment to replace. Must be of the form
         * `organizations/{org}/environments/{env}`.
         */
        public UpdateEnvironment setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateEnvironment set(String parameterName, Object value) {
          return (UpdateEnvironment) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Analytics collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Analytics.List request = apigee.analytics().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Analytics analytics() {
        return new Analytics();
      }

      /**
       * The "analytics" collection of methods.
       */
      public class Analytics {

        /**
         * An accessor for creating requests from the Admin collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Admin.List request = apigee.admin().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Admin admin() {
          return new Admin();
        }

        /**
         * The "admin" collection of methods.
         */
        public class Admin {

          /**
           * Get a list of metrics and dimensions which can be used for creating analytics queries and
           * reports. Each schema element contains the name of the field with its associated type and if it is
           * either custom field or standard field.
           *
           * Create a request for the method "admin.getSchemav2".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetSchemav2#execute()} method to invoke the remote operation.
           *
           * @param name Required. The parent organization and environment names. Must be of the
          form
           *        `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
           * @return the request
           */
          public GetSchemav2 getSchemav2(java.lang.String name) throws java.io.IOException {
            GetSchemav2 result = new GetSchemav2(name);
            initialize(result);
            return result;
          }

          public class GetSchemav2 extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Schema> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");

            /**
             * Get a list of metrics and dimensions which can be used for creating analytics queries and
             * reports. Each schema element contains the name of the field with its associated type and if it
             * is either custom field or standard field.
             *
             * Create a request for the method "admin.getSchemav2".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetSchemav2#execute()} method to invoke the remote operation. <p>
             * {@link
             * GetSchemav2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The parent organization and environment names. Must be of the
          form
           *        `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             * @since 1.13
             */
            protected GetSchemav2(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Schema.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetSchemav2 set$Xgafv(java.lang.String $Xgafv) {
              return (GetSchemav2) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetSchemav2 setAccessToken(java.lang.String accessToken) {
              return (GetSchemav2) super.setAccessToken(accessToken);
            }

            @Override
            public GetSchemav2 setAlt(java.lang.String alt) {
              return (GetSchemav2) super.setAlt(alt);
            }

            @Override
            public GetSchemav2 setCallback(java.lang.String callback) {
              return (GetSchemav2) super.setCallback(callback);
            }

            @Override
            public GetSchemav2 setFields(java.lang.String fields) {
              return (GetSchemav2) super.setFields(fields);
            }

            @Override
            public GetSchemav2 setKey(java.lang.String key) {
              return (GetSchemav2) super.setKey(key);
            }

            @Override
            public GetSchemav2 setOauthToken(java.lang.String oauthToken) {
              return (GetSchemav2) super.setOauthToken(oauthToken);
            }

            @Override
            public GetSchemav2 setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetSchemav2) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetSchemav2 setQuotaUser(java.lang.String quotaUser) {
              return (GetSchemav2) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetSchemav2 setUploadType(java.lang.String uploadType) {
              return (GetSchemav2) super.setUploadType(uploadType);
            }

            @Override
            public GetSchemav2 setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetSchemav2) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent organization and environment names. Must be of the form
             * `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The parent organization and environment names. Must be of the form
           `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The parent organization and environment names. Must be of the form
             * `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            public GetSchemav2 setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Type refers to the dataset name whose schema needs to be retrieved E.g.
             * type=fact or type=agg_cus1
             */
            @com.google.api.client.util.Key
            private java.lang.String type;

            /** Required. Type refers to the dataset name whose schema needs to be retrieved E.g. type=fact or
           type=agg_cus1
             */
            public java.lang.String getType() {
              return type;
            }

            /**
             * Required. Type refers to the dataset name whose schema needs to be retrieved E.g.
             * type=fact or type=agg_cus1
             */
            public GetSchemav2 setType(java.lang.String type) {
              this.type = type;
              return this;
            }

            @Override
            public GetSchemav2 set(String parameterName, Object value) {
              return (GetSchemav2) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Apis collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apis.List request = apigee.apis().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apis apis() {
        return new Apis();
      }

      /**
       * The "apis" collection of methods.
       */
      public class Apis {

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of an API proxy in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name representing an API proxy in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/apis/{api}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");

            /**
             * Lists all deployments of an API proxy in an environment.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name representing an API proxy in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/apis/{api}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing an API proxy in an environment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name representing an API proxy in an environment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name representing an API proxy in an environment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Undeploys an API proxy revision from an environment.
           *
           * Because multiple revisions of the same API proxy can be deployed in the same environment if the
           * base paths are different, you must specify the revision number of the API proxy.
           *
           * Create a request for the method "revisions.deployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Deployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public Deployments deployments(java.lang.String name) throws java.io.IOException {
            Deployments result = new Deployments(name);
            initialize(result);
            return result;
          }

          public class Deployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Undeploys an API proxy revision from an environment.
             *
             * Because multiple revisions of the same API proxy can be deployed in the same environment if the
             * base paths are different, you must specify the revision number of the API proxy.
             *
             * Create a request for the method "revisions.deployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Deployments#execute()} method to invoke the remote operation. <p>
             * {@link
             * Deployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected Deployments(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Deployments set$Xgafv(java.lang.String $Xgafv) {
              return (Deployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deployments setAccessToken(java.lang.String accessToken) {
              return (Deployments) super.setAccessToken(accessToken);
            }

            @Override
            public Deployments setAlt(java.lang.String alt) {
              return (Deployments) super.setAlt(alt);
            }

            @Override
            public Deployments setCallback(java.lang.String callback) {
              return (Deployments) super.setCallback(callback);
            }

            @Override
            public Deployments setFields(java.lang.String fields) {
              return (Deployments) super.setFields(fields);
            }

            @Override
            public Deployments setKey(java.lang.String key) {
              return (Deployments) super.setKey(key);
            }

            @Override
            public Deployments setOauthToken(java.lang.String oauthToken) {
              return (Deployments) super.setOauthToken(oauthToken);
            }

            @Override
            public Deployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deployments setQuotaUser(java.lang.String quotaUser) {
              return (Deployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deployments setUploadType(java.lang.String uploadType) {
              return (Deployments) super.setUploadType(uploadType);
            }

            @Override
            public Deployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the API proxy revision deployment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public Deployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Deployments set(String parameterName, Object value) {
              return (Deployments) super.set(parameterName, value);
            }
          }
          /**
           * Gets the deployment of an API proxy revision and actual state reported by runtime pods.
           *
           * Create a request for the method "revisions.getDeployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name representing an API proxy revision in an
          environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public GetDeployments getDeployments(java.lang.String name) throws java.io.IOException {
            GetDeployments result = new GetDeployments(name);
            initialize(result);
            return result;
          }

          public class GetDeployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Gets the deployment of an API proxy revision and actual state reported by runtime pods.
             *
             * Create a request for the method "revisions.getDeployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
             * <p> {@link GetDeployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name representing an API proxy revision in an
          environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected GetDeployments(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDeployments set$Xgafv(java.lang.String $Xgafv) {
              return (GetDeployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDeployments setAccessToken(java.lang.String accessToken) {
              return (GetDeployments) super.setAccessToken(accessToken);
            }

            @Override
            public GetDeployments setAlt(java.lang.String alt) {
              return (GetDeployments) super.setAlt(alt);
            }

            @Override
            public GetDeployments setCallback(java.lang.String callback) {
              return (GetDeployments) super.setCallback(callback);
            }

            @Override
            public GetDeployments setFields(java.lang.String fields) {
              return (GetDeployments) super.setFields(fields);
            }

            @Override
            public GetDeployments setKey(java.lang.String key) {
              return (GetDeployments) super.setKey(key);
            }

            @Override
            public GetDeployments setOauthToken(java.lang.String oauthToken) {
              return (GetDeployments) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDeployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDeployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDeployments setQuotaUser(java.lang.String quotaUser) {
              return (GetDeployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDeployments setUploadType(java.lang.String uploadType) {
              return (GetDeployments) super.setUploadType(uploadType);
            }

            @Override
            public GetDeployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDeployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing an API proxy revision in an environment in the following
             * format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name representing an API proxy revision in an environment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name representing an API proxy revision in an environment in the following
             * format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public GetDeployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDeployments set(String parameterName, Object value) {
              return (GetDeployments) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Debugsessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Debugsessions.List request = apigee.debugsessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Debugsessions debugsessions() {
            return new Debugsessions();
          }

          /**
           * The "debugsessions" collection of methods.
           */
          public class Debugsessions {

            /**
             * Creates a debug session for a deployed API Proxy revision.
             *
             * Create a request for the method "debugsessions.create".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the API Proxy revision deployment for which
            to create the
             *        DebugSession. Must be of the form
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession> {

              private static final String REST_PATH = "v1/{+parent}/debugsessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Creates a debug session for a deployed API Proxy revision.
               *
               * Create a request for the method "debugsessions.create".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the API Proxy revision deployment for which
            to create the
             *        DebugSession. Must be of the form
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession content) {
                super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the API Proxy revision deployment for which to
               * create the DebugSession. Must be of the form `organizations/{organization}/environm
               * ents/{environment}/apis/{api}/revisions/{revision}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the API Proxy revision deployment for which to create the
             DebugSession. Must be of the form
             `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the API Proxy revision deployment for which to
               * create the DebugSession. Must be of the form `organizations/{organization}/environm
               * ents/{environment}/apis/{api}/revisions/{revision}`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The time in seconds after which this DebugSession should end. A timeout
               * specified in DebugSession will overwrite this value.
               */
              @com.google.api.client.util.Key
              private java.lang.Long timeout;

              /** Optional. The time in seconds after which this DebugSession should end. A timeout specified in
             DebugSession will overwrite this value.
               */
              public java.lang.Long getTimeout() {
                return timeout;
              }

              /**
               * Optional. The time in seconds after which this DebugSession should end. A timeout
               * specified in DebugSession will overwrite this value.
               */
              public Create setTimeout(java.lang.Long timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the data from a debug session. This does not cancel the debug session or prevent further
             * data from being collected if the session is still active in runtime pods.
             *
             * Create a request for the method "debugsessions.deleteData".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link DeleteData#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the debug session to delete.
            Must be of the form:
             `organizations/{organizatio
             *        n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}
             *        `.
             * @return the request
             */
            public DeleteData deleteData(java.lang.String name) throws java.io.IOException {
              DeleteData result = new DeleteData(name);
              initialize(result);
              return result;
            }

            public class DeleteData extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}/data";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");

              /**
               * Deletes the data from a debug session. This does not cancel the debug session or prevent
               * further data from being collected if the session is still active in runtime pods.
               *
               * Create a request for the method "debugsessions.deleteData".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link DeleteData#execute()} method to invoke the remote operation. <p>
               * {@link
               * DeleteData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the debug session to delete.
            Must be of the form:
             `organizations/{organizatio
             *        n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}
             *        `.
               * @since 1.13
               */
              protected DeleteData(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
              }

              @Override
              public DeleteData set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteData) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteData setAccessToken(java.lang.String accessToken) {
                return (DeleteData) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteData setAlt(java.lang.String alt) {
                return (DeleteData) super.setAlt(alt);
              }

              @Override
              public DeleteData setCallback(java.lang.String callback) {
                return (DeleteData) super.setCallback(callback);
              }

              @Override
              public DeleteData setFields(java.lang.String fields) {
                return (DeleteData) super.setFields(fields);
              }

              @Override
              public DeleteData setKey(java.lang.String key) {
                return (DeleteData) super.setKey(key);
              }

              @Override
              public DeleteData setOauthToken(java.lang.String oauthToken) {
                return (DeleteData) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteData setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteData) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteData setQuotaUser(java.lang.String quotaUser) {
                return (DeleteData) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteData setUploadType(java.lang.String uploadType) {
                return (DeleteData) super.setUploadType(uploadType);
              }

              @Override
              public DeleteData setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteData) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the debug session to delete. Must be of the form: `organizati
               * ons/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debug
               * sessions/{debugsession}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the debug session to delete. Must be of the form: `organizations/{organizatio
             n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the debug session to delete. Must be of the form: `organizati
               * ons/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debug
               * sessions/{debugsession}`.
               */
              public DeleteData setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public DeleteData set(String parameterName, Object value) {
                return (DeleteData) super.set(parameterName, value);
              }
            }
            /**
             * Lists debug sessions that are currently active in the given API Proxy revision.
             *
             * Create a request for the method "debugsessions.list".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the API Proxy revision deployment for which
            to list debug sessions. Must be of
             *        the form:
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDebugSessionsResponse> {

              private static final String REST_PATH = "v1/{+parent}/debugsessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Lists debug sessions that are currently active in the given API Proxy revision.
               *
               * Create a request for the method "debugsessions.list".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the API Proxy revision deployment for which
            to list debug sessions. Must be of
             *        the form:
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDebugSessionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the API Proxy revision deployment for which to list debug
               * sessions. Must be of the form: `organizations/{organization}/environments/{environm
               * ent}/apis/{api}/revisions/{revision}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be
             of the form:
             `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the API Proxy revision deployment for which to list debug
               * sessions. Must be of the form: `organizations/{organization}/environments/{environm
               * ent}/apis/{api}/revisions/{revision}`.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Data collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Apigee apigee = new Apigee(...);}
             *   {@code Apigee.Data.List request = apigee.data().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Data data() {
              return new Data();
            }

            /**
             * The "data" collection of methods.
             */
            public class Data {

              /**
               * Gets the debug data from a transaction.
               *
               * Create a request for the method "data.get".
               *
               * This request holds the parameters needed by the apigee server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the debug session transaction. Must be of the form:
               `organizations/{organizat
               *        ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/da
               *        ta/{transaction}`.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSessionTransaction> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");

                /**
                 * Gets the debug data from a transaction.
                 *
                 * Create a request for the method "data.get".
                 *
                 * This request holds the parameters needed by the the apigee server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
                 * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the debug session transaction. Must be of the form:
               `organizations/{organizat
               *        ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/da
               *        ta/{transaction}`.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSessionTransaction.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the debug session transaction. Must be of the form: `organi
                 * zations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}
                 * /debugsessions/{session}/data/{transaction}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the debug session transaction. Must be of the form: `organizations/{organizat
               ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{trans
               action}`.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the debug session transaction. Must be of the form: `organi
                 * zations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}
                 * /debugsessions/{session}/data/{transaction}`.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists the transaction IDs from a debug session.
               *
               * Create a request for the method "data.list".
               *
               * This request holds the parameters needed by the apigee server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the debug sessions for which to list transactions.
              Must be of the form:
               `orga
               *        nizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugs
               *        essions/{session}`.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Apis.Revisions.Debugsessions.Data.List.> {

                private static final String REST_PATH = "v1/{+parent}/data";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");

                /**
                 * Lists the transaction IDs from a debug session.
                 *
                 * Create a request for the method "data.list".
                 *
                 * This request holds the parameters needed by the the apigee server.  After setting any optional
                 * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
                 * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The name of the debug sessions for which to list transactions.
              Must be of the form:
               `orga
               *        nizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugs
               *        essions/{session}`.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Apis.Revisions.Debugsessions.Data.List..class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the debug sessions for which to list transactions. Must be
                 * of the form: `organizations/{organization}/environments/{environment}/apis/{api}/
                 * revisions/{revision}/debugsessions/{session}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the debug sessions for which to list transactions. Must be of the form: `orga
               nizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{
               session}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the debug sessions for which to list transactions. Must be
                 * of the form: `organizations/{organization}/environments/{environment}/apis/{api}/
                 * revisions/{revision}/debugsessions/{session}`.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. A http query parameter that can control the maximum number of debug
                 * session transactions that can be returned by UAP.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer limit;

                /** Optional. A http query parameter that can control the maximum number of debug session transactions
               that can be returned by UAP.
                 */
                public java.lang.Integer getLimit() {
                  return limit;
                }

                /**
                 * Optional. A http query parameter that can control the maximum number of debug
                 * session transactions that can be returned by UAP.
                 */
                public List setLimit(java.lang.Integer limit) {
                  this.limit = limit;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
        }
      }
      /**
       * An accessor for creating requests from the Caches collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Caches.List request = apigee.caches().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Caches caches() {
        return new Caches();
      }

      /**
       * The "caches" collection of methods.
       */
      public class Caches {

        /**
         * Deletes a cache.
         *
         * Create a request for the method "caches.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Cache resource name of the form:
         *        `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");

          /**
           * Deletes a cache.
           *
           * Create a request for the method "caches.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Cache resource name of the form:
         *        `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Cache resource name of the form:
           * `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Cache resource name of the form:
         `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Cache resource name of the form:
           * `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lists all caches in an environment.
         *
         * Create a request for the method "caches.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent environment under which to get caches.
        Must be of the form:
         *        `organizations/{organization_id}/environments/{environment_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Caches.List.> {

          private static final String REST_PATH = "v1/{+parent}/caches";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all caches in an environment.
           *
           * Create a request for the method "caches.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent environment under which to get caches.
        Must be of the form:
         *        `organizations/{organization_id}/environments/{environment_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Caches.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent environment under which to get caches. Must be of the
           * form: `organizations/{organization_id}/environments/{environment_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent environment under which to get caches. Must be of the form:
         `organizations/{organization_id}/environments/{environment_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent environment under which to get caches. Must be of the
           * form: `organizations/{organization_id}/environments/{environment_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of API proxies or shared flows in an environment.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/environments/{env}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all deployments of API proxies or shared flows in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/environments/{env}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment for which to return deployment information in the
           * following format: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment for which to return deployment information in the following
         format: `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment for which to return deployment information in the
           * following format: `organizations/{org}/environments/{env}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Flag that specifies whether to return shared flow or API proxy deployments.
           * Set to `true` to return shared flow deployments; set to `false` to return API proxy
           * deployments. Defaults to `false`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean sharedFlows;

          /** Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true`
         to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to
         `false`.
           */
          public java.lang.Boolean getSharedFlows() {
            return sharedFlows;
          }

          /**
           * Optional. Flag that specifies whether to return shared flow or API proxy deployments.
           * Set to `true` to return shared flow deployments; set to `false` to return API proxy
           * deployments. Defaults to `false`.
           */
          public List setSharedFlows(java.lang.Boolean sharedFlows) {
            this.sharedFlows = sharedFlows;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Flowhooks collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Flowhooks.List request = apigee.flowhooks().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Flowhooks flowhooks() {
        return new Flowhooks();
      }

      /**
       * The "flowhooks" collection of methods.
       */
      public class Flowhooks {

        /**
         * Attaches a shared flow to a flow hook.
         *
         * Create a request for the method "flowhooks.attachSharedFlowToFlowHook".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link AttachSharedFlowToFlowHook#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the flow hook to which the shared flow should be
        attached in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook}
         * @return the request
         */
        public AttachSharedFlowToFlowHook attachSharedFlowToFlowHook(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook content) throws java.io.IOException {
          AttachSharedFlowToFlowHook result = new AttachSharedFlowToFlowHook(name, content);
          initialize(result);
          return result;
        }

        public class AttachSharedFlowToFlowHook extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Attaches a shared flow to a flow hook.
           *
           * Create a request for the method "flowhooks.attachSharedFlowToFlowHook".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link AttachSharedFlowToFlowHook#execute()} method to invoke the remote
           * operation. <p> {@link AttachSharedFlowToFlowHook#initialize(com.google.api.client.googleapis.se
           * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook to which the shared flow should be
        attached in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook}
           * @since 1.13
           */
          protected AttachSharedFlowToFlowHook(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public AttachSharedFlowToFlowHook set$Xgafv(java.lang.String $Xgafv) {
            return (AttachSharedFlowToFlowHook) super.set$Xgafv($Xgafv);
          }

          @Override
          public AttachSharedFlowToFlowHook setAccessToken(java.lang.String accessToken) {
            return (AttachSharedFlowToFlowHook) super.setAccessToken(accessToken);
          }

          @Override
          public AttachSharedFlowToFlowHook setAlt(java.lang.String alt) {
            return (AttachSharedFlowToFlowHook) super.setAlt(alt);
          }

          @Override
          public AttachSharedFlowToFlowHook setCallback(java.lang.String callback) {
            return (AttachSharedFlowToFlowHook) super.setCallback(callback);
          }

          @Override
          public AttachSharedFlowToFlowHook setFields(java.lang.String fields) {
            return (AttachSharedFlowToFlowHook) super.setFields(fields);
          }

          @Override
          public AttachSharedFlowToFlowHook setKey(java.lang.String key) {
            return (AttachSharedFlowToFlowHook) super.setKey(key);
          }

          @Override
          public AttachSharedFlowToFlowHook setOauthToken(java.lang.String oauthToken) {
            return (AttachSharedFlowToFlowHook) super.setOauthToken(oauthToken);
          }

          @Override
          public AttachSharedFlowToFlowHook setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AttachSharedFlowToFlowHook) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AttachSharedFlowToFlowHook setQuotaUser(java.lang.String quotaUser) {
            return (AttachSharedFlowToFlowHook) super.setQuotaUser(quotaUser);
          }

          @Override
          public AttachSharedFlowToFlowHook setUploadType(java.lang.String uploadType) {
            return (AttachSharedFlowToFlowHook) super.setUploadType(uploadType);
          }

          @Override
          public AttachSharedFlowToFlowHook setUploadProtocol(java.lang.String uploadProtocol) {
            return (AttachSharedFlowToFlowHook) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook to which the shared flow should be attached in the
           * following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook to which the shared flow should be attached in the following
         format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook to which the shared flow should be attached in the
           * following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public AttachSharedFlowToFlowHook setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public AttachSharedFlowToFlowHook set(String parameterName, Object value) {
            return (AttachSharedFlowToFlowHook) super.set(parameterName, value);
          }
        }
        /**
         * Detaches a shared flow from a flow hook.
         *
         * Create a request for the method "flowhooks.detachSharedFlowFromFlowHook".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link DetachSharedFlowFromFlowHook#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the flow hook to detach in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @return the request
         */
        public DetachSharedFlowFromFlowHook detachSharedFlowFromFlowHook(java.lang.String name) throws java.io.IOException {
          DetachSharedFlowFromFlowHook result = new DetachSharedFlowFromFlowHook(name);
          initialize(result);
          return result;
        }

        public class DetachSharedFlowFromFlowHook extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Detaches a shared flow from a flow hook.
           *
           * Create a request for the method "flowhooks.detachSharedFlowFromFlowHook".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link DetachSharedFlowFromFlowHook#execute()} method to invoke the remote
           * operation. <p> {@link DetachSharedFlowFromFlowHook#initialize(com.google.api.client.googleapis.
           * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook to detach in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @since 1.13
           */
          protected DetachSharedFlowFromFlowHook(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public DetachSharedFlowFromFlowHook set$Xgafv(java.lang.String $Xgafv) {
            return (DetachSharedFlowFromFlowHook) super.set$Xgafv($Xgafv);
          }

          @Override
          public DetachSharedFlowFromFlowHook setAccessToken(java.lang.String accessToken) {
            return (DetachSharedFlowFromFlowHook) super.setAccessToken(accessToken);
          }

          @Override
          public DetachSharedFlowFromFlowHook setAlt(java.lang.String alt) {
            return (DetachSharedFlowFromFlowHook) super.setAlt(alt);
          }

          @Override
          public DetachSharedFlowFromFlowHook setCallback(java.lang.String callback) {
            return (DetachSharedFlowFromFlowHook) super.setCallback(callback);
          }

          @Override
          public DetachSharedFlowFromFlowHook setFields(java.lang.String fields) {
            return (DetachSharedFlowFromFlowHook) super.setFields(fields);
          }

          @Override
          public DetachSharedFlowFromFlowHook setKey(java.lang.String key) {
            return (DetachSharedFlowFromFlowHook) super.setKey(key);
          }

          @Override
          public DetachSharedFlowFromFlowHook setOauthToken(java.lang.String oauthToken) {
            return (DetachSharedFlowFromFlowHook) super.setOauthToken(oauthToken);
          }

          @Override
          public DetachSharedFlowFromFlowHook setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DetachSharedFlowFromFlowHook) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DetachSharedFlowFromFlowHook setQuotaUser(java.lang.String quotaUser) {
            return (DetachSharedFlowFromFlowHook) super.setQuotaUser(quotaUser);
          }

          @Override
          public DetachSharedFlowFromFlowHook setUploadType(java.lang.String uploadType) {
            return (DetachSharedFlowFromFlowHook) super.setUploadType(uploadType);
          }

          @Override
          public DetachSharedFlowFromFlowHook setUploadProtocol(java.lang.String uploadProtocol) {
            return (DetachSharedFlowFromFlowHook) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook to detach in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook to detach in the following format:
         `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook to detach in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public DetachSharedFlowFromFlowHook setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DetachSharedFlowFromFlowHook set(String parameterName, Object value) {
            return (DetachSharedFlowFromFlowHook) super.set(parameterName, value);
          }
        }
        /**
         * Returns the name of the shared flow attached to the specified flow hook. If there's no shared
         * flow attached to the flow hook, the API does not return an error; it simply does not return a
         * name in the response.
         *
         * Create a request for the method "flowhooks.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the flow hook in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Returns the name of the shared flow attached to the specified flow hook. If there's no shared
           * flow attached to the flow hook, the API does not return an error; it simply does not return a
           * name in the response.
           *
           * Create a request for the method "flowhooks.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook in the following format:
         `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the flow hooks attached to an environment. This API always returns: `["PreProxyFlowHook",
         * "PostProxyFlowHook", "PreTargetFlowHook", "PostTargetFlowHook"]`
         *
         * Create a request for the method "flowhooks.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment for which to display flow hooks in the following
        format:
         *        `organizations/{org}/environments/{env}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Flowhooks.List.> {

          private static final String REST_PATH = "v1/{+parent}/flowhooks";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists the flow hooks attached to an environment. This API always returns: `["PreProxyFlowHook",
           * "PostProxyFlowHook", "PreTargetFlowHook", "PostTargetFlowHook"]`
           *
           * Create a request for the method "flowhooks.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment for which to display flow hooks in the following
        format:
         *        `organizations/{org}/environments/{env}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Flowhooks.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment for which to display flow hooks in the following
           * format: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment for which to display flow hooks in the following format:
         `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment for which to display flow hooks in the following
           * format: `organizations/{org}/environments/{env}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Keystores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keystores.List request = apigee.keystores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keystores keystores() {
        return new Keystores();
      }

      /**
       * The "keystores" collection of methods.
       */
      public class Keystores {

        /**
         * Creates a keystore or truststore: Keystore: Contains certificates and their associated keys.
         * Truststore: Contains trusted certificates used to validate a  server's certificate. These
         * certificates are typically self-signed  certificates or certificates that are not signed by a
         * trusted CA.
         *
         * Create a request for the method "keystores.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the keystore.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+parent}/keystores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a keystore or truststore:  * Keystore: Contains certificates and their associated keys.
           * * Truststore: Contains trusted certificates used to validate a  server's certificate. These
           * certificates are typically self-signed  certificates or certificates that are not signed by a
           * trusted CA.
           *
           * Create a request for the method "keystores.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the keystore.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the keystore. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the keystore. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the keystore. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Overrides the value in Keystore. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. Overrides the value in Keystore.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Optional. Overrides the value in Keystore. */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a keystore or truststore.
         *
         * Create a request for the method "keystores.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of keystore to delete. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

          /**
           * Deletes a keystore or truststore.
           *
           * Create a request for the method "keystores.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of keystore to delete. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of keystore to delete. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of keystore to delete. Must be of the form
         `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of keystore to delete. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a keystore or truststore.
         *
         * Create a request for the method "keystores.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of keystore. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

          /**
           * Gets a keystore or truststore.
           *
           * Create a request for the method "keystores.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of keystore. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of keystore. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of keystore. Must be of the form
         `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of keystore. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all keystores and truststores.
         *
         * Create a request for the method "keystores.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which list keystores.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.List.> {

          private static final String REST_PATH = "v1/{+parent}/keystores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all keystores and truststores.
           *
           * Create a request for the method "keystores.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which list keystores.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which list keystores. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which list keystores. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which list keystores. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Aliases collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Aliases.List request = apigee.aliases().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Aliases aliases() {
          return new Aliases();
        }

        /**
         * The "aliases" collection of methods.
         */
        public class Aliases {

          /**
           * Creates an alias from a key, certificate pair. The structure of the request is controlled by the
           * `format` query parameter: `keycertfile` - Separate PEM-encoded key and certificate files are
           * uploaded. The request must have `Content-Type: multipart/form-data` and  include fields `keyFile`
           * and `certFile`. If uploading to a truststore,  omit `keyFile`. * `pkcs12` - A PKCS12 file is
           * uploaded. The request must have `Content-Type: multipart/form-data` with the file provided in the
           * only field. * `selfsignedcert` - A new private key and certificate are generated. The request
           * must have `Content-Type: application/json` and a body of CertificateGenerationSpec.
           *
           * Create a request for the method "aliases.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+parent}/aliases";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

            /**
             * Creates an alias from a key, certificate pair. The structure of the request is controlled by
             * the `format` query parameter:  * `keycertfile` - Separate PEM-encoded key and certificate files
             * are  uploaded. The request must have `Content-Type: multipart/form-data` and  include fields
             * `keyFile` and `certFile`. If uploading to a truststore,  omit `keyFile`. * `pkcs12` - A PKCS12
             * file is uploaded. The request must have `Content-Type: multipart/form-data` with the file
             * provided in the only field. * `selfsignedcert` - A new private key and certificate are
             * generated. The request must have `Content-Type: application/json` and a body of
             * CertificateGenerationSpec.
             *
             * Create a request for the method "aliases.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the keystore. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The password for the private key file, if it exists. */
            @com.google.api.client.util.Key("_password")
            private java.lang.String password;

            /** The password for the private key file, if it exists.
             */
            public java.lang.String getPassword() {
              return password;
            }

            /** The password for the private key file, if it exists. */
            public Create setPassword(java.lang.String password) {
              this.password = password;
              return this;
            }

            /**
             * The alias for the key, certificate pair. Values must match regular expression
             * `[\w\s-.]{1,255}`. This must be provided for all formats except 'selfsignedcert';
             * self-signed certs may specify the alias in either this parameter or the JSON body.
             */
            @com.google.api.client.util.Key
            private java.lang.String alias;

            /** The alias for the key, certificate pair. Values must match regular expression `[\w\s-.]{1,255}`.
           This must be provided for all formats except 'selfsignedcert'; self-signed certs may specify the
           alias in either this parameter or the JSON body.
             */
            public java.lang.String getAlias() {
              return alias;
            }

            /**
             * The alias for the key, certificate pair. Values must match regular expression
             * `[\w\s-.]{1,255}`. This must be provided for all formats except 'selfsignedcert';
             * self-signed certs may specify the alias in either this parameter or the JSON body.
             */
            public Create setAlias(java.lang.String alias) {
              this.alias = alias;
              return this;
            }

            /**
             * Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or
             * `pkcs12`.
             */
            @com.google.api.client.util.Key
            private java.lang.String format;

            /** Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or `pkcs12`.
             */
            public java.lang.String getFormat() {
              return format;
            }

            /**
             * Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or
             * `pkcs12`.
             */
            public Create setFormat(java.lang.String format) {
              this.format = format;
              return this;
            }

            /** If `true`, no expiry validation will be performed. */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreExpiryValidation;

            /** If `true`, no expiry validation will be performed.
             */
            public java.lang.Boolean getIgnoreExpiryValidation() {
              return ignoreExpiryValidation;
            }

            /** If `true`, no expiry validation will be performed. */
            public Create setIgnoreExpiryValidation(java.lang.Boolean ignoreExpiryValidation) {
              this.ignoreExpiryValidation = ignoreExpiryValidation;
              return this;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreNewlineValidation;

            /** If `true`, do not throw an error when the file contains a chain with no newline between each
           certificate. By default, a newline is needed between each certificate in a chain.
             */
            public java.lang.Boolean getIgnoreNewlineValidation() {
              return ignoreNewlineValidation;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            public Create setIgnoreNewlineValidation(java.lang.Boolean ignoreNewlineValidation) {
              this.ignoreNewlineValidation = ignoreNewlineValidation;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
           *
           * Create a request for the method "aliases.csr".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Csr#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public Csr csr(java.lang.String name) throws java.io.IOException {
            Csr result = new Csr(name);
            initialize(result);
            return result;
          }

          public class Csr extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+name}/csr";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
             *
             * Create a request for the method "aliases.csr".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Csr#execute()} method to invoke the remote operation. <p> {@link
             * Csr#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected Csr(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Csr set$Xgafv(java.lang.String $Xgafv) {
              return (Csr) super.set$Xgafv($Xgafv);
            }

            @Override
            public Csr setAccessToken(java.lang.String accessToken) {
              return (Csr) super.setAccessToken(accessToken);
            }

            @Override
            public Csr setAlt(java.lang.String alt) {
              return (Csr) super.setAlt(alt);
            }

            @Override
            public Csr setCallback(java.lang.String callback) {
              return (Csr) super.setCallback(callback);
            }

            @Override
            public Csr setFields(java.lang.String fields) {
              return (Csr) super.setFields(fields);
            }

            @Override
            public Csr setKey(java.lang.String key) {
              return (Csr) super.setKey(key);
            }

            @Override
            public Csr setOauthToken(java.lang.String oauthToken) {
              return (Csr) super.setOauthToken(oauthToken);
            }

            @Override
            public Csr setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Csr) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Csr setQuotaUser(java.lang.String quotaUser) {
              return (Csr) super.setQuotaUser(quotaUser);
            }

            @Override
            public Csr setUploadType(java.lang.String uploadType) {
              return (Csr) super.setUploadType(uploadType);
            }

            @Override
            public Csr setUploadProtocol(java.lang.String uploadProtocol) {
              return (Csr) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Csr setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Csr set(String parameterName, Object value) {
              return (Csr) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an alias.
           *
           * Create a request for the method "aliases.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Deletes an alias.
             *
             * Create a request for the method "aliases.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an alias.
           *
           * Create a request for the method "aliases.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Gets an alias.
             *
             * Create a request for the method "aliases.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the certificate from an alias in PEM-encoded form.
           *
           * Create a request for the method "aliases.getCertificate".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetCertificate#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public GetCertificate getCertificate(java.lang.String name) throws java.io.IOException {
            GetCertificate result = new GetCertificate(name);
            initialize(result);
            return result;
          }

          public class GetCertificate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+name}/certificate";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Gets the certificate from an alias in PEM-encoded form.
             *
             * Create a request for the method "aliases.getCertificate".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetCertificate#execute()} method to invoke the remote operation.
             * <p> {@link GetCertificate#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected GetCertificate(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetCertificate set$Xgafv(java.lang.String $Xgafv) {
              return (GetCertificate) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetCertificate setAccessToken(java.lang.String accessToken) {
              return (GetCertificate) super.setAccessToken(accessToken);
            }

            @Override
            public GetCertificate setAlt(java.lang.String alt) {
              return (GetCertificate) super.setAlt(alt);
            }

            @Override
            public GetCertificate setCallback(java.lang.String callback) {
              return (GetCertificate) super.setCallback(callback);
            }

            @Override
            public GetCertificate setFields(java.lang.String fields) {
              return (GetCertificate) super.setFields(fields);
            }

            @Override
            public GetCertificate setKey(java.lang.String key) {
              return (GetCertificate) super.setKey(key);
            }

            @Override
            public GetCertificate setOauthToken(java.lang.String oauthToken) {
              return (GetCertificate) super.setOauthToken(oauthToken);
            }

            @Override
            public GetCertificate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetCertificate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetCertificate setQuotaUser(java.lang.String quotaUser) {
              return (GetCertificate) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetCertificate setUploadType(java.lang.String uploadType) {
              return (GetCertificate) super.setUploadType(uploadType);
            }

            @Override
            public GetCertificate setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetCertificate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public GetCertificate setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetCertificate set(String parameterName, Object value) {
              return (GetCertificate) super.set(parameterName, value);
            }
          }
          /**
           * Lists all aliases.
           *
           * Create a request for the method "aliases.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.Aliases.List.> {

            private static final String REST_PATH = "v1/{+parent}/aliases";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

            /**
             * Lists all aliases.
             *
             * Create a request for the method "aliases.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.Aliases.List..class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the keystore. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the certificate in an alias.
           *
           * Create a request for the method "aliases.update".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @return the request
           */
          public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
            Update result = new Update(name, content);
            initialize(result);
            return result;
          }

          public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Updates the certificate in an alias.
             *
             * Create a request for the method "aliases.update".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
             * @since 1.13
             */
            protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Update setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. If `true`, no expiry validation will be performed. */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreExpiryValidation;

            /** Required. If `true`, no expiry validation will be performed.
             */
            public java.lang.Boolean getIgnoreExpiryValidation() {
              return ignoreExpiryValidation;
            }

            /** Required. If `true`, no expiry validation will be performed. */
            public Update setIgnoreExpiryValidation(java.lang.Boolean ignoreExpiryValidation) {
              this.ignoreExpiryValidation = ignoreExpiryValidation;
              return this;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreNewlineValidation;

            /** If `true`, do not throw an error when the file contains a chain with no newline between each
           certificate. By default, a newline is needed between each certificate in a chain.
             */
            public java.lang.Boolean getIgnoreNewlineValidation() {
              return ignoreNewlineValidation;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            public Update setIgnoreNewlineValidation(java.lang.Boolean ignoreNewlineValidation) {
              this.ignoreNewlineValidation = ignoreNewlineValidation;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Keyvaluemaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keyvaluemaps keyvaluemaps() {
        return new Keyvaluemaps();
      }

      /**
       * The "keyvaluemaps" collection of methods.
       */
      public class Keyvaluemaps {

        /**
         * Creates a key value map in an environment.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a key value map in an environment.
           *
           * Create a request for the method "keyvaluemaps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the key value map. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/environments/{environment}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a key value map in an environment.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Delete a key value map in an environment.
           *
           * Create a request for the method "keyvaluemaps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the key value map. Must be of the form
         `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * List key value maps in an environment.
         *
         * Create a request for the method "keyvaluemaps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keyvaluemaps.List.> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * List key value maps in an environment.
           *
           * Create a request for the method "keyvaluemaps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keyvaluemaps.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to list key value maps. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the OptimizedStats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.OptimizedStats.List request = apigee.optimizedStats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public OptimizedStats optimizedStats() {
        return new OptimizedStats();
      }

      /**
       * The "optimizedStats" collection of methods.
       */
      public class OptimizedStats {

        /**
         * This api is similar to GetStats except that the response is less verbose. In the current scheme,
         * a query parameter _optimized instructs Edge Analytics to change the response but since this
         * behavior is not possible with protocol buffer and since this parameter is predominantly used by
         * Edge UI, we are introducing a separate api.
         *
         * Create a request for the method "optimizedStats.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/optimizedStats/.+$");

          /**
           * This api is similar to GetStats except that the response is less verbose. In the current
           * scheme, a query parameter _optimized instructs Edge Analytics to change the response but since
           * this behavior is not possible with protocol buffer and since this parameter is predominantly
           * used by Edge UI, we are introducing a separate api.
           *
           * Create a request for the method "optimizedStats.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/optimizedStats/.+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The organization and environment name for which the interactive query will be executed.
         Must be of the form
         `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}` Dimensions let
         you view metrics in meaningful groupings. E.g. apiproxy, target_host. The value of dimensions
         should be comma separated list as shown below
         `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/optimizedStats/.+$");
            }
            this.name = name;
            return this;
          }

          /** Legacy field. not used anymore */
          @com.google.api.client.util.Key
          private java.lang.String accuracy;

          /** Legacy field. not used anymore
           */
          public java.lang.String getAccuracy() {
            return accuracy;
          }

          /** Legacy field. not used anymore */
          public Get setAccuracy(java.lang.String accuracy) {
            this.accuracy = accuracy;
            return this;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          @com.google.api.client.util.Key
          private java.lang.String aggTable;

          /** If customers want to query custom aggregate tables, then this parameter can be used to specify the
         table name. If this parameter is skipped, then Edge Query will try to retrieve the data from fact
         tables which will be expensive.
           */
          public java.lang.String getAggTable() {
            return aggTable;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          public Get setAggTable(java.lang.String aggTable) {
            this.aggTable = aggTable;
            return this;
          }

          /** Enables drill-down on specific dimension values */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Enables drill-down on specific dimension values
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Enables drill-down on specific dimension values */
          public Get setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          @com.google.api.client.util.Key
          private java.lang.String limit;

          /** This parameter is used to limit the number of result items. Default and the max value is 14400
           */
          public java.lang.String getLimit() {
            return limit;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          public Get setLimit(java.lang.String limit) {
            this.limit = limit;
            return this;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          @com.google.api.client.util.Key
          private java.lang.String offset;

          /** Use offset with limit to enable pagination of results. For example, to display results 11-20, set
         limit to '10' and offset to '10'.
           */
          public java.lang.String getOffset() {
            return offset;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          public Get setOffset(java.lang.String offset) {
            this.offset = offset;
            return this;
          }

          /** Legacy field: not used anymore */
          @com.google.api.client.util.Key
          private java.lang.Boolean realtime;

          /** Legacy field: not used anymore
           */
          public java.lang.Boolean getRealtime() {
            return realtime;
          }

          /** Legacy field: not used anymore */
          public Get setRealtime(java.lang.Boolean realtime) {
            this.realtime = realtime;
            return this;
          }

          /**
           * Required. The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          @com.google.api.client.util.Key
          private java.lang.String select;

          /** Required. The select parameter contains a comma separated list of metrics E.g.
         sum(message_count),sum(error_count)
           */
          public java.lang.String getSelect() {
            return select;
          }

          /**
           * Required. The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          public Get setSelect(java.lang.String select) {
            this.select = select;
            return this;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          @com.google.api.client.util.Key
          private java.lang.Boolean sonar;

          /** This parameter routes the query to api monitoring service for last hour
           */
          public java.lang.Boolean getSonar() {
            return sonar;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          public Get setSonar(java.lang.Boolean sonar) {
            this.sonar = sonar;
            return this;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          @com.google.api.client.util.Key
          private java.lang.String sort;

          /** This parameter specifies if the sort order should be ascending or descending Supported values are
         DESC and ASC.
           */
          public java.lang.String getSort() {
            return sort;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          public Get setSort(java.lang.String sort) {
            this.sort = sort;
            return this;
          }

          /** Comma separated list of columns to sort the final result. */
          @com.google.api.client.util.Key
          private java.lang.String sortby;

          /** Comma separated list of columns to sort the final result.
           */
          public java.lang.String getSortby() {
            return sortby;
          }

          /** Comma separated list of columns to sort the final result. */
          public Get setSortby(java.lang.String sortby) {
            this.sortby = sortby;
            return this;
          }

          /**
           * Required. Time interval for the interactive query. Time range is specified as start~end
           * E.g. 04/15/2017 00:00~05/15/2017 23:59
           */
          @com.google.api.client.util.Key
          private java.lang.String timeRange;

          /** Required. Time interval for the interactive query. Time range is specified as start~end E.g.
         04/15/2017 00:00~05/15/2017 23:59
           */
          public java.lang.String getTimeRange() {
            return timeRange;
          }

          /**
           * Required. Time interval for the interactive query. Time range is specified as start~end
           * E.g. 04/15/2017 00:00~05/15/2017 23:59
           */
          public Get setTimeRange(java.lang.String timeRange) {
            this.timeRange = timeRange;
            return this;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String timeUnit;

          /** A value of second, minute, hour, day, week, month. Time Unit specifies the granularity of metrics
         returned.
           */
          public java.lang.String getTimeUnit() {
            return timeUnit;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          public Get setTimeUnit(java.lang.String timeUnit) {
            this.timeUnit = timeUnit;
            return this;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          @com.google.api.client.util.Key
          private java.lang.String topk;

          /** Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public java.lang.String getTopk() {
            return topk;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public Get setTopk(java.lang.String topk) {
            this.topk = topk;
            return this;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean tsAscending;

          /** Lists timestamps in ascending order if set to true. Recommend setting this value to true if you are
         using sortby with sort=DESC.
           */
          public java.lang.Boolean getTsAscending() {
            return tsAscending;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          public Get setTsAscending(java.lang.Boolean tsAscending) {
            this.tsAscending = tsAscending;
            return this;
          }

          /** This parameters contains the timezone offset value */
          @com.google.api.client.util.Key
          private java.lang.String tzo;

          /** This parameters contains the timezone offset value
           */
          public java.lang.String getTzo() {
            return tzo;
          }

          /** This parameters contains the timezone offset value */
          public Get setTzo(java.lang.String tzo) {
            this.tzo = tzo;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Queries collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Queries.List request = apigee.queries().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Queries queries() {
        return new Queries();
      }

      /**
       * The "queries" collection of methods.
       */
      public class Queries {

        /**
         * Submit a query to be processed in the background. If the submission of the query succeeds, the
         * API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201,
         * the `state` of "enqueued" means that the request succeeded.
         *
         * Create a request for the method "queries.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

          private static final String REST_PATH = "v1/{+parent}/queries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Submit a query to be processed in the background. If the submission of the query succeeds, the
           * API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201,
           * the `state` of "enqueued" means that the request succeeded.
           *
           * Create a request for the method "queries.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization and environment names. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Get query status If the query is still in progress, the `state` is set to "running" After the
         * query has completed successfully, `state` is set to "completed"
         *
         * Create a request for the method "queries.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");

          /**
           * Get query status If the query is still in progress, the `state` is set to "running" After the
           * query has completed successfully, `state` is set to "completed"
           *
           * Create a request for the method "queries.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * After the query is completed, use this API to retrieve the results. If the request succeeds, and
         * there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The
         * name of the downloaded file will be:   OfflineQueryResult-.zip
         *
         * Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
         *
         * Create a request for the method "queries.getResult".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResult#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query result to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/result`.
         * @return the request
         */
        public GetResult getResult(java.lang.String name) throws java.io.IOException {
          GetResult result = new GetResult(name);
          initialize(result);
          return result;
        }

        public class GetResult extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");

          /**
           * After the query is completed, use this API to retrieve the results. If the request succeeds,
           * and there is a non-zero result set, the result is downloaded to the client as a zipped JSON
           * file. The name of the downloaded file will be:   OfflineQueryResult-.zip
           *
           * Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
           *
           * Create a request for the method "queries.getResult".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResult#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetResult#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query result to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           * @since 1.13
           */
          protected GetResult(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResult set$Xgafv(java.lang.String $Xgafv) {
            return (GetResult) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResult setAccessToken(java.lang.String accessToken) {
            return (GetResult) super.setAccessToken(accessToken);
          }

          @Override
          public GetResult setAlt(java.lang.String alt) {
            return (GetResult) super.setAlt(alt);
          }

          @Override
          public GetResult setCallback(java.lang.String callback) {
            return (GetResult) super.setCallback(callback);
          }

          @Override
          public GetResult setFields(java.lang.String fields) {
            return (GetResult) super.setFields(fields);
          }

          @Override
          public GetResult setKey(java.lang.String key) {
            return (GetResult) super.setKey(key);
          }

          @Override
          public GetResult setOauthToken(java.lang.String oauthToken) {
            return (GetResult) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResult setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResult) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResult setQuotaUser(java.lang.String quotaUser) {
            return (GetResult) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResult setUploadType(java.lang.String uploadType) {
            return (GetResult) super.setUploadType(uploadType);
          }

          @Override
          public GetResult setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResult) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query result to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          public GetResult setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResult set(String parameterName, Object value) {
            return (GetResult) super.set(parameterName, value);
          }
        }
        /**
         * Create a request for the method "queries.getResultView".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query result view to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
         * @return the request
         */
        public GetResultView getResultView(java.lang.String name) throws java.io.IOException {
          GetResultView result = new GetResultView(name);
          initialize(result);
          return result;
        }

        public class GetResultView extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQueryResultView> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$");

          /**
           * Create a request for the method "queries.getResultView".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation. <p>
           * {@link GetResultView#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
           * equest)} must be called to initialize this instance immediately after invoking the constructor.
           * </p>
           *
           * @param name Required. Name of the asynchronous query result view to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           * @since 1.13
           */
          protected GetResultView(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQueryResultView.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResultView set$Xgafv(java.lang.String $Xgafv) {
            return (GetResultView) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResultView setAccessToken(java.lang.String accessToken) {
            return (GetResultView) super.setAccessToken(accessToken);
          }

          @Override
          public GetResultView setAlt(java.lang.String alt) {
            return (GetResultView) super.setAlt(alt);
          }

          @Override
          public GetResultView setCallback(java.lang.String callback) {
            return (GetResultView) super.setCallback(callback);
          }

          @Override
          public GetResultView setFields(java.lang.String fields) {
            return (GetResultView) super.setFields(fields);
          }

          @Override
          public GetResultView setKey(java.lang.String key) {
            return (GetResultView) super.setKey(key);
          }

          @Override
          public GetResultView setOauthToken(java.lang.String oauthToken) {
            return (GetResultView) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResultView setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResultView) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResultView setQuotaUser(java.lang.String quotaUser) {
            return (GetResultView) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResultView setUploadType(java.lang.String uploadType) {
            return (GetResultView) super.setUploadType(uploadType);
          }

          @Override
          public GetResultView setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResultView) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query result view to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query result view to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query result view to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           */
          public GetResultView setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResultView set(String parameterName, Object value) {
            return (GetResultView) super.set(parameterName, value);
          }
        }
        /**
         * Return a list of Asynchronous Queries
         *
         * Create a request for the method "queries.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse> {

          private static final String REST_PATH = "v1/{+parent}/queries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Return a list of Asynchronous Queries
           *
           * Create a request for the method "queries.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization and environment names. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filter response list by dataset.
           *
           * Example: `api`, `mint`
           */
          @com.google.api.client.util.Key
          private java.lang.String dataset;

          /** Filter response list by dataset.

         Example: `api`, `mint`
           */
          public java.lang.String getDataset() {
            return dataset;
          }

          /**
           * Filter response list by dataset.
           *
           * Example: `api`, `mint`
           */
          public List setDataset(java.lang.String dataset) {
            this.dataset = dataset;
            return this;
          }

          /**
           * Filter response list by returning asynchronous queries that created after this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String from;

          /** Filter response list by returning asynchronous queries that created after this date time. Time must
         be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public java.lang.String getFrom() {
            return from;
          }

          /**
           * Filter response list by returning asynchronous queries that created after this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public List setFrom(java.lang.String from) {
            this.from = from;
            return this;
          }

          /**
           * Flag to include asynchronous queries that don't have a report denifition.
           */
          @com.google.api.client.util.Key
          private java.lang.String inclQueriesWithoutReport;

          /** Flag to include asynchronous queries that don't have a report denifition.
           */
          public java.lang.String getInclQueriesWithoutReport() {
            return inclQueriesWithoutReport;
          }

          /**
           * Flag to include asynchronous queries that don't have a report denifition.
           */
          public List setInclQueriesWithoutReport(java.lang.String inclQueriesWithoutReport) {
            this.inclQueriesWithoutReport = inclQueriesWithoutReport;
            return this;
          }

          /** Filter response list by asynchronous query status */
          @com.google.api.client.util.Key
          private java.lang.String status;

          /** Filter response list by asynchronous query status
           */
          public java.lang.String getStatus() {
            return status;
          }

          /** Filter response list by asynchronous query status */
          public List setStatus(java.lang.String status) {
            this.status = status;
            return this;
          }

          /** Filter response list by user who submitted queries */
          @com.google.api.client.util.Key
          private java.lang.String submittedBy;

          /** Filter response list by user who submitted queries
           */
          public java.lang.String getSubmittedBy() {
            return submittedBy;
          }

          /** Filter response list by user who submitted queries */
          public List setSubmittedBy(java.lang.String submittedBy) {
            this.submittedBy = submittedBy;
            return this;
          }

          /**
           * Filter response list by returning asynchronous queries that created before this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String to;

          /** Filter response list by returning asynchronous queries that created before this date time. Time
         must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public java.lang.String getTo() {
            return to;
          }

          /**
           * Filter response list by returning asynchronous queries that created before this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public List setTo(java.lang.String to) {
            this.to = to;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the References collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.References.List request = apigee.references().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public References references() {
        return new References();
      }

      /**
       * The "references" collection of methods.
       */
      public class References {

        /**
         * Creates a Reference in the specified environment.
         *
         * Create a request for the method "references.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name under which the Reference will
        be created. Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+parent}/references";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a Reference in the specified environment.
           *
           * Create a request for the method "references.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name under which the Reference will
        be created. Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name under which the Reference will be created. Must
           * be of the form `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name under which the Reference will be created. Must be of the
         form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name under which the Reference will be created. Must
           * be of the form `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Reference from an environment. Returns the deleted Reference resource.
         *
         * Create a request for the method "references.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Deletes a Reference from an environment. Returns the deleted Reference resource.
           *
           * Create a request for the method "references.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to delete. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to delete. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to delete. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Reference resource.
         *
         * Create a request for the method "references.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to get. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Gets a Reference resource.
           *
           * Create a request for the method "references.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to get. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to get. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to get. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to get. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all References in an environment as a JSON array.
         *
         * Create a request for the method "references.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.References.List.> {

          private static final String REST_PATH = "v1/{+parent}/references";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all References in an environment as a JSON array.
           *
           * Create a request for the method "references.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.References.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing Reference. Note that this operation has PUT semantics; it will replace the
         * entirety of the existing Reference with the resource in the request body.
         *
         * Create a request for the method "references.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to update. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Updates an existing Reference. Note that this operation has PUT semantics; it will replace the
           * entirety of the existing Reference with the resource in the request body.
           *
           * Create a request for the method "references.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to update. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to update. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to update. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to update. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Resourcefiles collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Resourcefiles.List request = apigee.resourcefiles().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Resourcefiles resourcefiles() {
        return new Resourcefiles();
      }

      /**
       * The "resourcefiles" collection of methods.
       */
      public class Resourcefiles {

        /**
         * Creates a resource file in an environment. `Content-Type` must be either `multipart/form-data`
         * with the resource file provided in the only field, or 'application/octet-stream'.
         *
         * Create a request for the method "resourcefiles.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the resource file.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a resource file in an environment. `Content-Type` must be either `multipart/form-data`
           * with the resource file provided in the only field, or 'application/octet-stream'.
           *
           * Create a request for the method "resourcefiles.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the resource file.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the resource file. Must be of
           * the form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the resource file. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the resource file. Must be of
           * the form `organizations/{organization}/environments/{environment}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The id of the resource file.  Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The id of the resource file.  Must match the regular expression
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The id of the resource file.  Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`, `xsl`, `wsdl`,
         or `xsd`.
           */
          public java.lang.String getType() {
            return type;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          public Create setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a resource file in an environment.
         *
         * Create a request for the method "resourcefiles.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent environment.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param type Required. The resource file type, must be `js`, `jsc`, `java`,
        `properties`, `py`, `xsl`, `wsdl`, or
         *        `xsd`.
         * @param resourceFileId Required. The id of the resource file to delete. Must match the regular
        expression
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @return the request
         */
        public Delete delete(java.lang.String parent, java.lang.String type, java.lang.String resourceFileId) throws java.io.IOException {
          Delete result = new Delete(parent, type, resourceFileId);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{resourceFileId}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Deletes a resource file in an environment.
           *
           * Create a request for the method "resourcefiles.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent environment.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param type Required. The resource file type, must be `js`, `jsc`, `java`,
        `properties`, `py`, `xsl`, `wsdl`, or
         *        `xsd`.
           * @param resourceFileId Required. The id of the resource file to delete. Must match the regular
        expression
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @since 1.13
           */
          protected Delete(java.lang.String parent, java.lang.String type, java.lang.String resourceFileId) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.resourceFileId = com.google.api.client.util.Preconditions.checkNotNull(resourceFileId, "Required parameter resourceFileId must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent environment. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent environment. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent environment. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          public Delete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`, `xsl`, `wsdl`,
         or `xsd`.
           */
          public java.lang.String getType() {
            return type;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          public Delete setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. The id of the resource file to delete. Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String resourceFileId;

          /** Required. The id of the resource file to delete. Must match the regular expression
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getResourceFileId() {
            return resourceFileId;
          }

          /**
           * Required. The id of the resource file to delete. Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Delete setResourceFileId(java.lang.String resourceFileId) {
            this.resourceFileId = resourceFileId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a resource file in an environment.
         *
         * Create a request for the method "resourcefiles.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent environment.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param type Required. The resource file type, must be `js`, `jsc`, `java`,
        `properties`, `py`, `xsl`, `wsdl`, or
         *        `xsd`.
         * @param resourceFileId Required. The id of the resource file to get. Must match the regular
        expression
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @return the request
         */
        public Get get(java.lang.String parent, java.lang.String type, java.lang.String resourceFileId) throws java.io.IOException {
          Get result = new Get(parent, type, resourceFileId);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{resourceFileId}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Gets a resource file in an environment.
           *
           * Create a request for the method "resourcefiles.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent environment.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param type Required. The resource file type, must be `js`, `jsc`, `java`,
        `properties`, `py`, `xsl`, `wsdl`, or
         *        `xsd`.
           * @param resourceFileId Required. The id of the resource file to get. Must match the regular
        expression
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @since 1.13
           */
          protected Get(java.lang.String parent, java.lang.String type, java.lang.String resourceFileId) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.resourceFileId = com.google.api.client.util.Preconditions.checkNotNull(resourceFileId, "Required parameter resourceFileId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent environment. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent environment. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent environment. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          public Get setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`, `xsl`, `wsdl`,
         or `xsd`.
           */
          public java.lang.String getType() {
            return type;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          public Get setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. The id of the resource file to get. Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String resourceFileId;

          /** Required. The id of the resource file to get. Must match the regular expression
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getResourceFileId() {
            return resourceFileId;
          }

          /**
           * Required. The id of the resource file to get. Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Get setResourceFileId(java.lang.String resourceFileId) {
            this.resourceFileId = resourceFileId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all resource files in an environment.
         *
         * Create a request for the method "resourcefiles.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to list resource files.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all resource files in an environment.
           *
           * Create a request for the method "resourcefiles.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to list resource files.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to list resource files. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to list resource files. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to list resource files. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Restricts the response to resources of the given type. */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Optional. Restricts the response to resources of the given type.
           */
          public java.lang.String getType() {
            return type;
          }

          /** Optional. Restricts the response to resources of the given type. */
          public List setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Lists all resource files in an environment.
         *
         * Create a request for the method "resourcefiles.listEnvironmentResources".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ListEnvironmentResources#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. The name of the environment in which to list resource files.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param type Optional. Restricts the response to resources of the given type.
         * @return the request
         */
        public ListEnvironmentResources listEnvironmentResources(java.lang.String parent, java.lang.String type) throws java.io.IOException {
          ListEnvironmentResources result = new ListEnvironmentResources(parent, type);
          initialize(result);
          return result;
        }

        public class ListEnvironmentResources extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all resource files in an environment.
           *
           * Create a request for the method "resourcefiles.listEnvironmentResources".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ListEnvironmentResources#execute()} method to invoke the remote
           * operation. <p> {@link ListEnvironmentResources#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to list resource files.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param type Optional. Restricts the response to resources of the given type.
           * @since 1.13
           */
          protected ListEnvironmentResources(java.lang.String parent, java.lang.String type) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListEnvironmentResources set$Xgafv(java.lang.String $Xgafv) {
            return (ListEnvironmentResources) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListEnvironmentResources setAccessToken(java.lang.String accessToken) {
            return (ListEnvironmentResources) super.setAccessToken(accessToken);
          }

          @Override
          public ListEnvironmentResources setAlt(java.lang.String alt) {
            return (ListEnvironmentResources) super.setAlt(alt);
          }

          @Override
          public ListEnvironmentResources setCallback(java.lang.String callback) {
            return (ListEnvironmentResources) super.setCallback(callback);
          }

          @Override
          public ListEnvironmentResources setFields(java.lang.String fields) {
            return (ListEnvironmentResources) super.setFields(fields);
          }

          @Override
          public ListEnvironmentResources setKey(java.lang.String key) {
            return (ListEnvironmentResources) super.setKey(key);
          }

          @Override
          public ListEnvironmentResources setOauthToken(java.lang.String oauthToken) {
            return (ListEnvironmentResources) super.setOauthToken(oauthToken);
          }

          @Override
          public ListEnvironmentResources setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListEnvironmentResources) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListEnvironmentResources setQuotaUser(java.lang.String quotaUser) {
            return (ListEnvironmentResources) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListEnvironmentResources setUploadType(java.lang.String uploadType) {
            return (ListEnvironmentResources) super.setUploadType(uploadType);
          }

          @Override
          public ListEnvironmentResources setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListEnvironmentResources) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to list resource files. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to list resource files. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to list resource files. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          public ListEnvironmentResources setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Restricts the response to resources of the given type. */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Optional. Restricts the response to resources of the given type.
           */
          public java.lang.String getType() {
            return type;
          }

          /** Optional. Restricts the response to resources of the given type. */
          public ListEnvironmentResources setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public ListEnvironmentResources set(String parameterName, Object value) {
            return (ListEnvironmentResources) super.set(parameterName, value);
          }
        }
        /**
         * Updates a resource file in an environment. `Content-Type` must be either `multipart/form-data`
         * with the resource file provided in the only field, or 'application/octet-stream'.
         *
         * Create a request for the method "resourcefiles.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent environment.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param type Required. The resource file type, must be `js`, `jsc`, `java`,
        `properties`, `py`, `xsl`, `wsdl`, or
         *        `xsd`.
         * @param resourceFileId Required. The id of the resource file to update. Must match the regular
        expression
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Update update(java.lang.String parent, java.lang.String type, java.lang.String resourceFileId, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Update result = new Update(parent, type, resourceFileId, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{resourceFileId}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Updates a resource file in an environment. `Content-Type` must be either `multipart/form-data`
           * with the resource file provided in the only field, or 'application/octet-stream'.
           *
           * Create a request for the method "resourcefiles.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent environment.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param type Required. The resource file type, must be `js`, `jsc`, `java`,
        `properties`, `py`, `xsl`, `wsdl`, or
         *        `xsd`.
           * @param resourceFileId Required. The id of the resource file to update. Must match the regular
        expression
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Update(java.lang.String parent, java.lang.String type, java.lang.String resourceFileId, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.resourceFileId = com.google.api.client.util.Preconditions.checkNotNull(resourceFileId, "Required parameter resourceFileId must be specified.");
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent environment. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent environment. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent environment. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          public Update setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`, `xsl`, `wsdl`,
         or `xsd`.
           */
          public java.lang.String getType() {
            return type;
          }

          /**
           * Required. The resource file type, must be `js`, `jsc`, `java`, `properties`, `py`,
           * `xsl`, `wsdl`, or `xsd`.
           */
          public Update setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. The id of the resource file to update. Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String resourceFileId;

          /** Required. The id of the resource file to update. Must match the regular expression
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getResourceFileId() {
            return resourceFileId;
          }

          /**
           * Required. The id of the resource file to update. Must match the regular expression
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Update setResourceFileId(java.lang.String resourceFileId) {
            this.resourceFileId = resourceFileId;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Sharedflows collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Sharedflows.List request = apigee.sharedflows().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sharedflows sharedflows() {
        return new Sharedflows();
      }

      /**
       * The "sharedflows" collection of methods.
       */
      public class Sharedflows {

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of a shared flow in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");

            /**
             * Lists all deployments of a shared flow in an environment.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name representing a shared flow in an environment in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Undeploys a shared flow revision from an environment.
           *
           * Create a request for the method "revisions.deployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Deployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the shared flow revision to undeploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public Deployments deployments(java.lang.String name) throws java.io.IOException {
            Deployments result = new Deployments(name);
            initialize(result);
            return result;
          }

          public class Deployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Undeploys a shared flow revision from an environment.
             *
             * Create a request for the method "revisions.deployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Deployments#execute()} method to invoke the remote operation. <p>
             * {@link
             * Deployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the shared flow revision to undeploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected Deployments(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Deployments set$Xgafv(java.lang.String $Xgafv) {
              return (Deployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deployments setAccessToken(java.lang.String accessToken) {
              return (Deployments) super.setAccessToken(accessToken);
            }

            @Override
            public Deployments setAlt(java.lang.String alt) {
              return (Deployments) super.setAlt(alt);
            }

            @Override
            public Deployments setCallback(java.lang.String callback) {
              return (Deployments) super.setCallback(callback);
            }

            @Override
            public Deployments setFields(java.lang.String fields) {
              return (Deployments) super.setFields(fields);
            }

            @Override
            public Deployments setKey(java.lang.String key) {
              return (Deployments) super.setKey(key);
            }

            @Override
            public Deployments setOauthToken(java.lang.String oauthToken) {
              return (Deployments) super.setOauthToken(oauthToken);
            }

            @Override
            public Deployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deployments setQuotaUser(java.lang.String quotaUser) {
              return (Deployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deployments setUploadType(java.lang.String uploadType) {
              return (Deployments) super.setUploadType(uploadType);
            }

            @Override
            public Deployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the shared flow revision to undeploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the shared flow revision to undeploy in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the shared flow revision to undeploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public Deployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Deployments set(String parameterName, Object value) {
              return (Deployments) super.set(parameterName, value);
            }
          }
          /**
           * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
           *
           * Create a request for the method "revisions.getDeployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public GetDeployments getDeployments(java.lang.String name) throws java.io.IOException {
            GetDeployments result = new GetDeployments(name);
            initialize(result);
            return result;
          }

          public class GetDeployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
             *
             * Create a request for the method "revisions.getDeployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
             * <p> {@link GetDeployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected GetDeployments(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDeployments set$Xgafv(java.lang.String $Xgafv) {
              return (GetDeployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDeployments setAccessToken(java.lang.String accessToken) {
              return (GetDeployments) super.setAccessToken(accessToken);
            }

            @Override
            public GetDeployments setAlt(java.lang.String alt) {
              return (GetDeployments) super.setAlt(alt);
            }

            @Override
            public GetDeployments setCallback(java.lang.String callback) {
              return (GetDeployments) super.setCallback(callback);
            }

            @Override
            public GetDeployments setFields(java.lang.String fields) {
              return (GetDeployments) super.setFields(fields);
            }

            @Override
            public GetDeployments setKey(java.lang.String key) {
              return (GetDeployments) super.setKey(key);
            }

            @Override
            public GetDeployments setOauthToken(java.lang.String oauthToken) {
              return (GetDeployments) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDeployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDeployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDeployments setQuotaUser(java.lang.String quotaUser) {
              return (GetDeployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDeployments setUploadType(java.lang.String uploadType) {
              return (GetDeployments) super.setUploadType(uploadType);
            }

            @Override
            public GetDeployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDeployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name representing a shared flow in an environment in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public GetDeployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDeployments set(String parameterName, Object value) {
              return (GetDeployments) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Stats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Stats.List request = apigee.stats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Stats stats() {
        return new Stats();
      }

      /**
       * The "stats" collection of methods.
       */
      public class Stats {

        /**
         * Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic,
         * message counts, API call latency, response size, and cache hits and counts. Dimensions let you
         * view metrics in meaningful groups. The stats api does accept dimensions as path params. The
         * dimensions are optional in which case the metrics are computed on the entire data for the given
         * timerange.
         *
         * Create a request for the method "stats.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/stats/.+$");

          /**
           * Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic,
           * message counts, API call latency, response size, and cache hits and counts. Dimensions let you
           * view metrics in meaningful groups. The stats api does accept dimensions as path params. The
           * dimensions are optional in which case the metrics are computed on the entire data for the given
           * timerange.
           *
           * Create a request for the method "stats.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/stats/.+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The organization and environment name for which the interactive query will be executed.
         Must be of the form
         `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}` Dimensions let
         you view metrics in meaningful groupings. E.g. apiproxy, target_host. The value of dimensions
         should be comma separated list as shown below
         `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/stats/.+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Legacy field. not used anymore This field is present to support UI calls which still
           * use this parameter
           */
          @com.google.api.client.util.Key
          private java.lang.String accuracy;

          /** Legacy field. not used anymore This field is present to support UI calls which still use this
         parameter
           */
          public java.lang.String getAccuracy() {
            return accuracy;
          }

          /**
           * Legacy field. not used anymore This field is present to support UI calls which still
           * use this parameter
           */
          public Get setAccuracy(java.lang.String accuracy) {
            this.accuracy = accuracy;
            return this;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          @com.google.api.client.util.Key
          private java.lang.String aggTable;

          /** If customers want to query custom aggregate tables, then this parameter can be used to specify the
         table name. If this parameter is skipped, then Edge Query will try to retrieve the data from fact
         tables which will be expensive.
           */
          public java.lang.String getAggTable() {
            return aggTable;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          public Get setAggTable(java.lang.String aggTable) {
            this.aggTable = aggTable;
            return this;
          }

          /** Enables drill-down on specific dimension values */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Enables drill-down on specific dimension values
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Enables drill-down on specific dimension values */
          public Get setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          @com.google.api.client.util.Key
          private java.lang.String limit;

          /** This parameter is used to limit the number of result items. Default and the max value is 14400
           */
          public java.lang.String getLimit() {
            return limit;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          public Get setLimit(java.lang.String limit) {
            this.limit = limit;
            return this;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          @com.google.api.client.util.Key
          private java.lang.String offset;

          /** Use offset with limit to enable pagination of results. For example, to display results 11-20, set
         limit to '10' and offset to '10'.
           */
          public java.lang.String getOffset() {
            return offset;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          public Get setOffset(java.lang.String offset) {
            this.offset = offset;
            return this;
          }

          /** Legacy field: not used anymore */
          @com.google.api.client.util.Key
          private java.lang.Boolean realtime;

          /** Legacy field: not used anymore
           */
          public java.lang.Boolean getRealtime() {
            return realtime;
          }

          /** Legacy field: not used anymore */
          public Get setRealtime(java.lang.Boolean realtime) {
            this.realtime = realtime;
            return this;
          }

          /**
           * The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          @com.google.api.client.util.Key
          private java.lang.String select;

          /** The select parameter contains a comma separated list of metrics E.g.
         sum(message_count),sum(error_count)
           */
          public java.lang.String getSelect() {
            return select;
          }

          /**
           * The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          public Get setSelect(java.lang.String select) {
            this.select = select;
            return this;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          @com.google.api.client.util.Key
          private java.lang.Boolean sonar;

          /** This parameter routes the query to api monitoring service for last hour
           */
          public java.lang.Boolean getSonar() {
            return sonar;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          public Get setSonar(java.lang.Boolean sonar) {
            this.sonar = sonar;
            return this;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          @com.google.api.client.util.Key
          private java.lang.String sort;

          /** This parameter specifies if the sort order should be ascending or descending Supported values are
         DESC and ASC.
           */
          public java.lang.String getSort() {
            return sort;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          public Get setSort(java.lang.String sort) {
            this.sort = sort;
            return this;
          }

          /** Comma separated list of columns to sort the final result. */
          @com.google.api.client.util.Key
          private java.lang.String sortby;

          /** Comma separated list of columns to sort the final result.
           */
          public java.lang.String getSortby() {
            return sortby;
          }

          /** Comma separated list of columns to sort the final result. */
          public Get setSortby(java.lang.String sortby) {
            this.sortby = sortby;
            return this;
          }

          /**
           * Time interval for the interactive query. Time range is specified as start~end E.g.
           * 04/15/2017 00:00~05/15/2017 23:59
           */
          @com.google.api.client.util.Key
          private java.lang.String timeRange;

          /** Time interval for the interactive query. Time range is specified as start~end E.g. 04/15/2017
         00:00~05/15/2017 23:59
           */
          public java.lang.String getTimeRange() {
            return timeRange;
          }

          /**
           * Time interval for the interactive query. Time range is specified as start~end E.g.
           * 04/15/2017 00:00~05/15/2017 23:59
           */
          public Get setTimeRange(java.lang.String timeRange) {
            this.timeRange = timeRange;
            return this;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String timeUnit;

          /** A value of second, minute, hour, day, week, month. Time Unit specifies the granularity of metrics
         returned.
           */
          public java.lang.String getTimeUnit() {
            return timeUnit;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          public Get setTimeUnit(java.lang.String timeUnit) {
            this.timeUnit = timeUnit;
            return this;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          @com.google.api.client.util.Key
          private java.lang.String topk;

          /** Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public java.lang.String getTopk() {
            return topk;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public Get setTopk(java.lang.String topk) {
            this.topk = topk;
            return this;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean tsAscending;

          /** Lists timestamps in ascending order if set to true. Recommend setting this value to true if you are
         using sortby with sort=DESC.
           */
          public java.lang.Boolean getTsAscending() {
            return tsAscending;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          public Get setTsAscending(java.lang.Boolean tsAscending) {
            this.tsAscending = tsAscending;
            return this;
          }

          /** This parameters contains the timezone offset value */
          @com.google.api.client.util.Key
          private java.lang.String tzo;

          /** This parameters contains the timezone offset value
           */
          public java.lang.String getTzo() {
            return tzo;
          }

          /** This parameters contains the timezone offset value */
          public Get setTzo(java.lang.String tzo) {
            this.tzo = tzo;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Targetservers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Targetservers.List request = apigee.targetservers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Targetservers targetservers() {
        return new Targetservers();
      }

      /**
       * The "targetservers" collection of methods.
       */
      public class Targetservers {

        /**
         * Creates a TargetServer in the specified environment.
         *
         * Create a request for the method "targetservers.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name under which the TargetServer will
        be created. Must be of the
         *        form `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+parent}/targetservers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a TargetServer in the specified environment.
           *
           * Create a request for the method "targetservers.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name under which the TargetServer will
        be created. Must be of the
         *        form `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name under which the TargetServer will be created.
           * Must be of the form `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name under which the TargetServer will be created. Must be of the
         form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name under which the TargetServer will be created.
           * Must be of the form `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The ID to give the TargetServer. This will overwrite the value in
           * TargetServer.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The ID to give the TargetServer. This will overwrite the value in
           * TargetServer.
           */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
         *
         * Create a request for the method "targetservers.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
           *
           * Create a request for the method "targetservers.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to delete. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to delete. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to delete. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a TargetServer resource.
         *
         * Create a request for the method "targetservers.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to get. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Gets a TargetServer resource.
           *
           * Create a request for the method "targetservers.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to get. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to get. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to get. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to get. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all TargetServers in an environment as a JSON array.
         *
         * Create a request for the method "targetservers.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Targetservers.List.> {

          private static final String REST_PATH = "v1/{+parent}/targetservers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all TargetServers in an environment as a JSON array.
           *
           * Create a request for the method "targetservers.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Targetservers.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the
         * entirety of the existing TargetServer with the resource in the request body.
         *
         * Create a request for the method "targetservers.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to replace. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace
           * the entirety of the existing TargetServer with the resource in the request body.
           *
           * Create a request for the method "targetservers.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to replace. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to replace. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to replace. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to replace. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Keyvaluemaps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Keyvaluemaps keyvaluemaps() {
      return new Keyvaluemaps();
    }

    /**
     * The "keyvaluemaps" collection of methods.
     */
    public class Keyvaluemaps {

      /**
       * Creates a key value map in an organization.
       *
       * Create a request for the method "keyvaluemaps.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the organization in which to create the key value map
      file. Must be of the
       *        form `organizations/{organization}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

        private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a key value map in an organization.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the organization in which to create the key value map
      file. Must be of the
       *        form `organizations/{organization}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the organization in which to create the key value map file. Must be
         * of the form `organizations/{organization}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the organization in which to create the key value map file. Must be of the
       form `organizations/{organization}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the organization in which to create the key value map file. Must be
         * of the form `organizations/{organization}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete a key value map in an organization.
       *
       * Create a request for the method "keyvaluemaps.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the key value map.
      Must be of the form
       *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+$");

        /**
         * Delete a key value map in an organization.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the key value map.
      Must be of the form
       *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/keyvaluemaps/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the key value map. Must be of the form
         * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the key value map. Must be of the form
       `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the key value map. Must be of the form
         * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/keyvaluemaps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * List key value maps in an organization.
       *
       * Create a request for the method "keyvaluemaps.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the organization in which to list key value maps.
      Must be of the form
       *        `organizations/{organization}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Keyvaluemaps.List.> {

        private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List key value maps in an organization.
         *
         * Create a request for the method "keyvaluemaps.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the organization in which to list key value maps.
      Must be of the form
       *        `organizations/{organization}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Keyvaluemaps.List..class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the organization in which to list key value maps. Must be of the
         * form `organizations/{organization}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the organization in which to list key value maps. Must be of the form
       `organizations/{organization}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the organization in which to list key value maps. Must be of the
         * form `organizations/{organization}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Operations.List request = apigee.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
       * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
       * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
       * methods to check whether the cancellation succeeded or whether the operation completed despite
       * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
       * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
       * `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
         * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
         * other methods to check whether the cancellation succeeded or whether the operation completed
         * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
         * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
         * corresponding to `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be deleted.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be deleted.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be deleted. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be deleted.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be deleted. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation.  Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * NOTE: the `name` binding allows API services to override the binding to use different resource
       * name schemes, such as `users/operations`. To override the binding, API services can add a binding
       * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
       * compatibility, the default name includes the operations collection id, however overriding users
       * must ensure the name binding is the parent resource, without the operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningListOperationsResponse> {

        private static final String REST_PATH = "v1/{+name}/operations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding to use different resource
         * name schemes, such as `users/operations`. To override the binding, API services can add a
         * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
         * compatibility, the default name includes the operations collection id, however overriding users
         * must ensure the name binding is the parent resource, without the operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Reports collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Reports.List request = apigee.reports().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Reports reports() {
      return new Reports();
    }

    /**
     * The "reports" collection of methods.
     */
    public class Reports {

      /**
       * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create
       * custom dashboards in addition to the standard dashboards which are provided. The Custom Report in
       * its simplest form contains specifications about metrics, dimensions and filters. It is important
       * to note that the custom report by itself does not provide an executable entity. The Edge UI
       * converts the custom report definition into an analytics query and displays the result in a chart.
       *
       * Create a request for the method "reports.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the Custom Report will
      be created. Must be of the
       *        form:
        `organizations/{organization_id}/reports`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+parent}/reports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to
         * create custom dashboards in addition to the standard dashboards which are provided. The Custom
         * Report in its simplest form contains specifications about metrics, dimensions and filters. It
         * is important to note that the custom report by itself does not provide an executable entity.
         * The Edge UI converts the custom report definition into an analytics query and displays the
         * result in a chart.
         *
         * Create a request for the method "reports.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the Custom Report will
      be created. Must be of the
       *        form:
        `organizations/{organization_id}/reports`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the Custom Report will be created.
         * Must be of the form: `organizations/{organization_id}/reports`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the Custom Report will be created. Must be of
       the form: `organizations/{organization_id}/reports`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the Custom Report will be created.
         * Must be of the form: `organizations/{organization_id}/reports`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an existing custom report definition
       *
       * Create a request for the method "reports.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteCustomReportResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Deletes an existing custom report definition
         *
         * Create a request for the method "reports.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteCustomReportResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve a custom report definition.
       *
       * Create a request for the method "reports.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Retrieve a custom report definition.
         *
         * Create a request for the method "reports.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Return a list of Custom Reports
       *
       * Create a request for the method "reports.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the API product will
      be listed
       *        `organizations/{organization_id}/reports`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCustomReportsResponse> {

        private static final String REST_PATH = "v1/{+parent}/reports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Return a list of Custom Reports
         *
         * Create a request for the method "reports.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the API product will
      be listed
       *        `organizations/{organization_id}/reports`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCustomReportsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the API product will be listed
         * `organizations/{organization_id}/reports`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the API product will be listed
       `organizations/{organization_id}/reports`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the API product will be listed
         * `organizations/{organization_id}/reports`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Set to 'true' to get expanded details about each custom report. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set to 'true' to get expanded details about each custom report.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set to 'true' to get expanded details about each custom report. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an existing custom report definition
       *
       * Create a request for the method "reports.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Update an existing custom report definition
         *
         * Create a request for the method "reports.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Sharedflows collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Sharedflows.List request = apigee.sharedflows().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sharedflows sharedflows() {
      return new Sharedflows();
    }

    /**
     * The "sharedflows" collection of methods.
     */
    public class Sharedflows {

      /**
       * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow
       * already exists, this creates a new revision of it. If the shared flow does not exist, this
       * creates it.
       *
       * Once imported, the shared flow revision must be deployed before it can be accessed at runtime.
       *
       * The size limit of a shared flow bundle is 15 MB.
       *
       * Create a request for the method "sharedflows.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent organization under which to create the
      shared flow. Must be of the
       *        form:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

        private static final String REST_PATH = "v1/{+parent}/sharedflows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow
         * already exists, this creates a new revision of it. If the shared flow does not exist, this
         * creates it.
         *
         * Once imported, the shared flow revision must be deployed before it can be accessed at runtime.
         *
         * The size limit of a shared flow bundle is 15 MB.
         *
         * Create a request for the method "sharedflows.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent organization under which to create the
      shared flow. Must be of the
       *        form:
        `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent organization under which to create the shared flow. Must
         * be of the form: `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent organization under which to create the shared flow. Must be of the
       form: `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent organization under which to create the shared flow. Must
         * be of the form: `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Required. Must be set to either `import` or `validate`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Required. Must be set to either `import` or `validate`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Required. Must be set to either `import` or `validate`. */
        public Create setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        /** Required. The name to give the shared flow */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name to give the shared flow
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name to give the shared flow */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can
       * delete it.
       *
       * Create a request for the method "sharedflows.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. shared flow name of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

        /**
         * Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can
         * delete it.
         *
         * Create a request for the method "sharedflows.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. shared flow name of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. shared flow name of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. shared flow name of the form:
       `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. shared flow name of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a shared flow by name, including a list of its revisions.
       *
       * Create a request for the method "sharedflows.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the shared flow to get. Must be of the
      form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

        /**
         * Gets a shared flow by name, including a list of its revisions.
         *
         * Create a request for the method "sharedflows.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the shared flow to get. Must be of the
      form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the shared flow to get. Must be of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the shared flow to get. Must be of the form:
       `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the shared flow to get. Must be of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all shared flows in the organization.
       *
       * Create a request for the method "sharedflows.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent organization under which to get shared
      flows. Must be of the form:
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSharedFlowsResponse> {

        private static final String REST_PATH = "v1/{+parent}/sharedflows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all shared flows in the organization.
         *
         * Create a request for the method "sharedflows.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent organization under which to get shared
      flows. Must be of the form:
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSharedFlowsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent organization under which to get shared flows. Must be of
         * the form: `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent organization under which to get shared flows. Must be of the form:
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent organization under which to get shared flows. Must be of
         * the form: `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Indicates whether to include shared flow metadata in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeMetaData;

        /** Indicates whether to include shared flow metadata in the response.
         */
        public java.lang.Boolean getIncludeMetaData() {
          return includeMetaData;
        }

        /** Indicates whether to include shared flow metadata in the response. */
        public List setIncludeMetaData(java.lang.Boolean includeMetaData) {
          this.includeMetaData = includeMetaData;
          return this;
        }

        /** Indicates whether to include a list of revisions in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeRevisions;

        /** Indicates whether to include a list of revisions in the response.
         */
        public java.lang.Boolean getIncludeRevisions() {
          return includeRevisions;
        }

        /** Indicates whether to include a list of revisions in the response. */
        public List setIncludeRevisions(java.lang.Boolean includeRevisions) {
          this.includeRevisions = includeRevisions;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of a shared flow.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the shared flow for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/sharedflows/{sharedflow}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

          /**
           * Lists all deployments of a shared flow.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the shared flow for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/sharedflows/{sharedflow}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the shared flow for which to return deployment information in the
           * following format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the shared flow for which to return deployment information in the following
         format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the shared flow for which to return deployment information in the
           * following format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Revisions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Revisions revisions() {
        return new Revisions();
      }

      /**
       * The "revisions" collection of methods.
       */
      public class Revisions {

        /**
         * Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy
         * the shared flow before deleting it.
         *
         * Create a request for the method "revisions.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the shared flow revision to delete. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy
           * the shared flow before deleting it.
           *
           * Create a request for the method "revisions.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to delete. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to delete. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to delete. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to delete. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a revision of a shared flow.
         *
         * If `format=bundle` is passed, it instead outputs a shared flow revision as a ZIP-formatted bundle
         * of code and config files.
         *
         * Create a request for the method "revisions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the shared flow revision to get. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Gets a revision of a shared flow.
           *
           * If `format=bundle` is passed, it instead outputs a shared flow revision as a ZIP-formatted
           * bundle of code and config files.
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to get. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to get. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to get. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to get. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the
           * bundle metadata is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String format;

          /** Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata
         is returned.
           */
          public java.lang.String getFormat() {
            return format;
          }

          /**
           * Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the
           * bundle metadata is returned.
           */
          public Get setFormat(java.lang.String format) {
            this.format = format;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all revisions for a shared flow.
         *
         * Create a request for the method "revisions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent API proxy under which to get API proxy
        revisions. Must be of the
         *        form:
          `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Sharedflows.Revisions.List.> {

          private static final String REST_PATH = "v1/{+parent}/revisions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

          /**
           * Lists all revisions for a shared flow.
           *
           * Create a request for the method "revisions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent API proxy under which to get API proxy
        revisions. Must be of the
         *        form:
          `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Sharedflows.Revisions.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent API proxy under which to get API proxy revisions. Must
           * be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent API proxy under which to get API proxy revisions. Must be of the
         form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent API proxy under which to get API proxy revisions. Must
           * be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a shared flow revision. This operation is only allowed on revisions which have never been
         * deployed. After deployment a revision becomes immutable, even if it becomes undeployed.
         *
         * The payload is a ZIP-formatted shared flow.  Content type must be either multipart/form-data or
         * application/octet-stream.
         *
         * Create a request for the method "revisions.updateSharedFlowRevision".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateSharedFlowRevision#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the shared flow revision to update.
        Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public UpdateSharedFlowRevision updateSharedFlowRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          UpdateSharedFlowRevision result = new UpdateSharedFlowRevision(name, content);
          initialize(result);
          return result;
        }

        public class UpdateSharedFlowRevision extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Updates a shared flow revision. This operation is only allowed on revisions which have never
           * been deployed. After deployment a revision becomes immutable, even if it becomes undeployed.
           *
           * The payload is a ZIP-formatted shared flow.  Content type must be either multipart/form-data or
           * application/octet-stream.
           *
           * Create a request for the method "revisions.updateSharedFlowRevision".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateSharedFlowRevision#execute()} method to invoke the remote
           * operation. <p> {@link UpdateSharedFlowRevision#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to update.
        Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected UpdateSharedFlowRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public UpdateSharedFlowRevision set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateSharedFlowRevision) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateSharedFlowRevision setAccessToken(java.lang.String accessToken) {
            return (UpdateSharedFlowRevision) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateSharedFlowRevision setAlt(java.lang.String alt) {
            return (UpdateSharedFlowRevision) super.setAlt(alt);
          }

          @Override
          public UpdateSharedFlowRevision setCallback(java.lang.String callback) {
            return (UpdateSharedFlowRevision) super.setCallback(callback);
          }

          @Override
          public UpdateSharedFlowRevision setFields(java.lang.String fields) {
            return (UpdateSharedFlowRevision) super.setFields(fields);
          }

          @Override
          public UpdateSharedFlowRevision setKey(java.lang.String key) {
            return (UpdateSharedFlowRevision) super.setKey(key);
          }

          @Override
          public UpdateSharedFlowRevision setOauthToken(java.lang.String oauthToken) {
            return (UpdateSharedFlowRevision) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateSharedFlowRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateSharedFlowRevision) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateSharedFlowRevision setQuotaUser(java.lang.String quotaUser) {
            return (UpdateSharedFlowRevision) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateSharedFlowRevision setUploadType(java.lang.String uploadType) {
            return (UpdateSharedFlowRevision) super.setUploadType(uploadType);
          }

          @Override
          public UpdateSharedFlowRevision setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateSharedFlowRevision) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to update. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to update. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to update. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public UpdateSharedFlowRevision setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. It is kept
           * for compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validate;

          /** Ignored. All uploads are validated regardless of the value of this field. It is kept for
         compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          public java.lang.Boolean getValidate() {
            return validate;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. It is kept
           * for compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          public UpdateSharedFlowRevision setValidate(java.lang.Boolean validate) {
            this.validate = validate;
            return this;
          }

          @Override
          public UpdateSharedFlowRevision set(String parameterName, Object value) {
            return (UpdateSharedFlowRevision) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of a shared flow and actual state reported by runtime pods.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Lists all deployments of a shared flow and actual state reported by runtime pods.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format:
             * `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the API proxy revision for which to return deployment information in the
           following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format:
             * `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link Apigee}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Apigee}. */
    @Override
    public Apigee build() {
      return new Apigee(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ApigeeRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setApigeeRequestInitializer(
        ApigeeRequestInitializer apigeeRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(apigeeRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
